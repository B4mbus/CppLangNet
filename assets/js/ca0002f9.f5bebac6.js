"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[1753],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(r),f=o,m=u["".concat(c,".").concat(f)]||u[f]||d[f]||s;return r?n.createElement(m,a(a({ref:t},p),{},{components:r})):n.createElement(m,a({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var l=2;l<s;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},68488:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var n=r(87462),o=(r(67294),r(3905));const s={},a=void 0,i={unversionedId:"std/algo/ranges/_codes/transform/since-cpp20-detailed",id:"std/algo/ranges/_codes/transform/since-cpp20-detailed",title:"since-cpp20-detailed",description:"",source:"@site/content/docs/std/algo/ranges/_codes/transform/since-cpp20-detailed.mdx",sourceDirName:"std/algo/ranges/_codes/transform",slug:"/std/algo/ranges/_codes/transform/since-cpp20-detailed",permalink:"/CppLangNet/docs/std/algo/ranges/_codes/transform/since-cpp20-detailed",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ranges/_codes/transform/since-cpp20-detailed.mdx",tags:[],version:"current",frontMatter:{}},c={},l=[],p={toc:l};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate<\n    std::input_iterator I,\n    std::sentinel_for<I> S,\n    std::weakly_incrementable O,\n    std::copy_constructible F,\n    class Proj = std::identity\n>\n    requires std::indirectly_writable<O, std::indirect_result_t<F&, std::projected<I, Proj>>>\nconstexpr unary_transform_result<I, O>\n    transform( I first1, S last1, O result, F op, Proj proj = {} );\n\n// (2)\ntemplate<\n    ranges::input_range R,\n    std::weakly_incrementable O,\n    std::copy_constructible F,\n    class Proj = std::identity\n>\n    requires std::indirectly_writable<O, std::indirect_result_t< F&, std::projected<ranges::iterator_t<R>, Proj>>\nconstexpr unary_transform_result<ranges::borrowed_iterator_t<R>, O>\n    transform( R&& r, O result, F op, Proj proj = {} );\n\n// (3)\ntemplate<\n    std::input_iterator I1, std::sentinel_for<I1> S1,\n    std::input_iterator I2, std::sentinel_for<I2> S2,\n    std::weakly_incrementable O,\n    std::copy_constructible F,\n    class Proj1 = std::identity, class Proj2 = std::identity\n>\n    requires std::indirectly_writable<O,\n                std::indirect_result_t<F&, std::projected<I1, Proj1>, std::projected<I2, Proj2>>>\nconstexpr binary_transform_result<I1, I2, O>\n    transform(\n        I1 first1, S1 last1,\n        I2 first2, S2 last2,\n        O result,\n        F binary_op,\n        Proj1 proj1 = {}, Proj2 proj2 = {}\n    );\n\n// (4)\ntemplate<\n    ranges::input_range R1, ranges::input_range R2,\n    std::weakly_incrementable O,\n    std::copy_constructible F,\n    class Proj1 = std::identity, class Proj2 = std::identity >\nrequires std::indirectly_writable<O,\n             std::indirect_result_t<F&, std::projected<ranges::iterator_t<R1>, Proj1>, std::projected<ranges::iterator_t<R2>, Proj2>>>\nconstexpr binary_transform_result<ranges::borrowed_iterator_t<R1>,\n                                  ranges::borrowed_iterator_t<R2>, O>\n    transform(\n        R1&& r1, R2&& r2,\n        O result,\n        F binary_op,\n        Proj1 proj1 = {}, Proj2 proj2 = {}\n    );\n")))}d.isMDXComponent=!0}}]);