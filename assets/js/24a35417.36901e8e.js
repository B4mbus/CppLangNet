"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[78958],{85162:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(67294),i=n(86010);const l="tabItem_Ymn6";function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(l,r),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>C});var a=n(87462),i=n(67294),l=n(86010),r=n(12466),s=n(76775),o=n(91980),c=n(67392),d=n(50012);function u(e){return function(e){return i.Children.map(e,(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:i}}=e;return{value:t,label:n,attributes:a,default:i}}))}function p(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o._X)(l),(0,i.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=p(e),[r,s]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[o,c]=f({queryString:n,groupId:a}),[u,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,d.Nk)(n);return[a,(0,i.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),_=(()=>{const e=o??u;return m({value:e,tabValues:l})?e:null})();(0,i.useLayoutEffect)((()=>{_&&s(_)}),[_]);return{selectedValue:r,selectValue:(0,i.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);s(e),c(e),g(e)}),[c,g,l]),tabValues:l}}var _=n(72389);const v="tabList__CuJ",h="tabItem_LNqP";function b(e){let{className:t,block:n,selectedValue:s,selectValue:o,tabValues:c}=e;const d=[],{blockElementScrollPositionUntilNextRender:u}=(0,r.o5)(),p=e=>{const t=e.currentTarget,n=d.indexOf(t),a=c[n].value;a!==s&&(u(t),o(a))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=d.indexOf(e.currentTarget)+1;t=d[n]??d[0];break}case"ArrowLeft":{const n=d.indexOf(e.currentTarget)-1;t=d[n]??d[d.length-1];break}}t?.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:r}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>d.push(e),onKeyDown:m,onClick:p},r,{className:(0,l.Z)("tabs__item",h,r?.className,{"tabs__item--active":s===t})}),n??t)})))}function k(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=g(e);return i.createElement("div",{className:(0,l.Z)("tabs-container",v)},i.createElement(b,(0,a.Z)({},e,t)),i.createElement(k,(0,a.Z)({},e,t)))}function C(e){const t=(0,_.Z)();return i.createElement(N,(0,a.Z)({key:String(t)},e))}},98839:(e,t,n)=>{n.d(t,{z:()=>a});const a=n(67294).createContext({name:"Unknown",folder:"unknown"})},22307:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(87462),i=n(67294);const l="columns_Terr";function r(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,i.createElement("div",(0,a.Z)({className:l,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}r.isMDXComponent=!0},99801:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),i=n(74866),l=n(85162),r=n(99372),s=n(72412);const o={};function c(e){const t=e.content||{};return a.createElement(i.Z,null,Object.entries(t).map(((e,t)=>{let[n,c]=e;return c.value||c.simplified||c.detailed?a.createElement(l.Z,{value:n,label:r.gJ.get(n),default:c.default||0==t},c.simplified?a.createElement(a.Fragment,null,a.createElement(i.Z,{groupId:"view_mode",className:o.smallTabs},a.createElement(l.Z,{value:"simplified",label:"Simplified",default:!0},(0,s.Z)(c.simplified)),a.createElement(l.Z,{value:"detailed",label:"Detailed"},(0,s.Z)(c.detailed)))):c.value):a.createElement(l.Z,{value:n,label:r.gJ.get(n),default:0==t},(0,s.Z)(c))})))}},55059:(e,t,n)=>{n.d(t,{mN:()=>d,ZP:()=>c});var a=n(67294),i=n(72412);const l={symbolTable:"symbolTable_yosy",symbolName:"symbolName__gUy",symbolDesc:"symbolDesc_wDaQ",symbolProp:"symbolProp_oAcv",accessPublic:"accessPublic_LfqG",accessProtected:"accessProtected_bDL6",accessPrivate:"accessPrivate_Ab5O",modStatic:"modStatic_ZSC5",modConstexpr:"modConstexpr_iypt",modConst:"modConst_osuL",modVolatile:"modVolatile_ePYM",modVirtual:"modVirtual_jNz7"};var r=n(98839);const s={None:{Order:0,ShortName:"",FullName:"",Style:l.accessPublic},Public:{Order:1,ShortName:"pub",FullName:"public",Style:l.accessPublic},Protected:{Order:2,ShortName:"prot",FullName:"protected",Style:l.accessProtected},Private:{Order:3,ShortName:"priv",FullName:"private",Style:l.accessPrivate}},o=e=>e.none?s.None:e.pub||e.public?s.Public:e.prot||e.protected?s.Protected:e.priv||e.private?s.Private:s.Public;function c(e){return(t=>{if(0===t.length)return null;const n=t.sort(((e,t)=>o(e).Order<o(t).Order));return a.createElement("table",{"data-no-traits":`${e.noTraits||"false"}`,className:l.symbolTable},a.createElement("tbody",null,n))})(a.Children.toArray(e.children))}function d(e){a.useContext(r.z);let t=(0,i.Z)(e.name),n=null;e.desc?n=e.desc:e.children&&(n=e.children);const s=e.linkName||e.autoLink;!e.noLink&&s&&(t=a.createElement("a",{href:e.link||`${e.linkName||e.name}`},t));const c=(e,t,n)=>!0===e?a.createElement("span",{className:l[t]},n):null;return a.createElement("tr",null,!e.none&&a.createElement("td",{className:l.symbolProp},(e=>{const t=o(e);return a.createElement("span",{className:t.Style},t.ShortName)})(e),c(e.static,"modStatic","static"),c(e.constexpr,"modConstexpr","constexpr"),c(e.const,"modConst","const"),c(e.volatile,"modVolatile","volatile"),c(e.virtual,"modVirtual","virtual")),a.createElement("td",{className:l.symbolName},t),a.createElement("td",{className:l.symbolDesc},(0,i.Z)(n)))}d.isMDXComponent=!0,c.isMDXComponent=!0,c.Symbol=d},18510:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),i=n(44996),l=n(34386),r=n(72412);const s="TooltipContent_Lvru",o="TooltipTitle_ukF2";function c(e){let{url:t,title:n,maxWidth:c,children:d}=e;let u=c||"clamp(250px, 25vw, 800px)";"string"==typeof u&&u.endsWith("vw")&&(u=`clamp(250px, ${u}, 800px)`);const p="function"==typeof n?a.createElement(n):n,m=(t||"").startsWith("/")?(0,i.Z)(t):t,f=t?a.createElement("a",{href:m,target:"_blank",rel:"noreferrer"},d):d;return a.createElement(l.Z,{componentsProps:{tooltip:{style:{maxWidth:u}}},title:a.createElement("span",{className:o},(0,r.Z)(p)),placement:"top",arrow:!0},a.createElement("span",{className:s},f))}c.isMDXComponent=!0},99372:(e,t,n)=>{n.d(t,{gJ:()=>d,eH:()=>f,U6:()=>p,OS:()=>m});var a=n(67294),i=n(95999);const l="markedText_c6kK",r="since_c1Q3",s="until_jXK6",o="removed_A_Kf",c="versionNumber_BiUX",d=new Map;function u(e){let{children:t,className:n}=e;return a.createElement("span",{className:l+(n?" "+n:"")},t)}function p(e){let{children:t,v:n}=e;return a.createElement(u,{className:r},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",d.get(`since-${n}`),")")))}function m(e){let{children:t,v:n}=e;return a.createElement(u,{className:s},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",d.get(`until-${n}`),")")))}function f(e){let{children:t,v:n}=e;return a.createElement(u,{className:o},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",d.get(`removed-${n}`),")")))}d.set("cpp98","C++98"),d.set("cpp03","C++03"),d.set("cpp11","C++11"),d.set("cpp14","C++14"),d.set("cpp17","C++17"),d.set("cpp20","C++20"),d.set("cpp23","C++23"),d.set("deprecated-",a.createElement(i.Z,null,"deprecated")),d.set("deprecated-cpp98",a.createElement(i.Z,null,"deprecated in C++98")),d.set("deprecated-cpp03",a.createElement(i.Z,null,"deprecated in C++03")),d.set("deprecated-cpp11",a.createElement(i.Z,null,"deprecated in C++11")),d.set("deprecated-cpp14",a.createElement(i.Z,null,"deprecated in C++14")),d.set("deprecated-cpp17",a.createElement(i.Z,null,"deprecated in C++17")),d.set("deprecated-cpp20",a.createElement(i.Z,null,"deprecated in C++20")),d.set("deprecated-cpp23",a.createElement(i.Z,null,"deprecated in C++23")),d.set("until-cpp98",a.createElement(i.Z,null,"until C++98")),d.set("until-cpp03",a.createElement(i.Z,null,"until C++03")),d.set("until-cpp11",a.createElement(i.Z,null,"until C++11")),d.set("until-cpp14",a.createElement(i.Z,null,"until C++14")),d.set("until-cpp17",a.createElement(i.Z,null,"until C++17")),d.set("until-cpp20",a.createElement(i.Z,null,"until C++20")),d.set("until-cpp23",a.createElement(i.Z,null,"until C++23")),d.set("since-cpp98",a.createElement(i.Z,null,"since C++98")),d.set("since-cpp03",a.createElement(i.Z,null,"since C++03")),d.set("since-cpp11",a.createElement(i.Z,null,"since C++11")),d.set("since-cpp14",a.createElement(i.Z,null,"since C++14")),d.set("since-cpp17",a.createElement(i.Z,null,"since C++17")),d.set("since-cpp20",a.createElement(i.Z,null,"since C++20")),d.set("since-cpp23",a.createElement(i.Z,null,"since C++23")),d.set("removed-",a.createElement(i.Z,null,"deleted")),d.set("removed-cpp98",a.createElement(i.Z,null,"removed in C++98")),d.set("removed-cpp03",a.createElement(i.Z,null,"removed in C++03")),d.set("removed-cpp11",a.createElement(i.Z,null,"removed in C++11")),d.set("removed-cpp14",a.createElement(i.Z,null,"removed in C++14")),d.set("removed-cpp17",a.createElement(i.Z,null,"removed in C++17")),d.set("removed-cpp20",a.createElement(i.Z,null,"removed in C++20")),d.set("removed-cpp23",a.createElement(i.Z,null,"removed in C++23"))},72412:(e,t,n)=>{function a(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>a})},5627:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var a=n(87462),i=(n(67294),n(3905));const l={},r=void 0,s={unversionedId:"std/algo/ranges/_codes/uninitialized_move_n/since-cpp20-detailed",id:"std/algo/ranges/_codes/uninitialized_move_n/since-cpp20-detailed",title:"since-cpp20-detailed",description:"",source:"@site/content/docs/std/algo/ranges/_codes/uninitialized_move_n/since-cpp20-detailed.mdx",sourceDirName:"std/algo/ranges/_codes/uninitialized_move_n",slug:"/std/algo/ranges/_codes/uninitialized_move_n/since-cpp20-detailed",permalink:"/CppLangNet/docs/std/algo/ranges/_codes/uninitialized_move_n/since-cpp20-detailed",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ranges/_codes/uninitialized_move_n/since-cpp20-detailed.mdx",tags:[],version:"current",frontMatter:{}},o={},c=[],d={toc:c};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate<\n  std::input_iterator I,\n  no-throw-forward-iterator O,\n  no-throw-sentinel-for<O> S\n>\n  requires std::constructible_from<std::iter_value_t<O>, std::iter_rvalue_reference_t<I>>\nuninitialized_move_n_result<I, O>\n  uninitialized_move_n( I ifirst, std::iter_difference_t<I> n, O ofirst, S olast );\n")))}u.isMDXComponent=!0},55032:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var a=n(87462),i=(n(67294),n(3905));const l={},r=void 0,s={unversionedId:"std/algo/ranges/_codes/uninitialized_move_n/since-cpp20-simplified",id:"std/algo/ranges/_codes/uninitialized_move_n/since-cpp20-simplified",title:"since-cpp20-simplified",description:"The type of arguments are generic and have following constraints:",source:"@site/content/docs/std/algo/ranges/_codes/uninitialized_move_n/since-cpp20-simplified.mdx",sourceDirName:"std/algo/ranges/_codes/uninitialized_move_n",slug:"/std/algo/ranges/_codes/uninitialized_move_n/since-cpp20-simplified",permalink:"/CppLangNet/docs/std/algo/ranges/_codes/uninitialized_move_n/since-cpp20-simplified",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ranges/_codes/uninitialized_move_n/since-cpp20-simplified.mdx",tags:[],version:"current",frontMatter:{}},o={},c=[],d={toc:c};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\nuninitialized_move_n_result<I, O>\n  uninitialized_move_n( I ifirst, std::iter_difference_t<I> n, O ofirst, S olast );\n")),(0,i.kt)("p",null,"The type of arguments are generic and have following constraints:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"I")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"std::input_iterator")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"O")," - ",(0,i.kt)("a",{parentName:"li",href:"#"},(0,i.kt)("inlineCode",{parentName:"a"},"no-throw-forward-iterator"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"S")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"no-throw-sentinel-for<O>"))),(0,i.kt)("p",null,"Additionally, each overload has the following constraints:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"(1)")," ",(0,i.kt)("inlineCode",{parentName:"li"},"std::constructible_from<std::iter_value_t<O>, std::iter_rvalue_reference_t<I>>"))))}u.isMDXComponent=!0},73961:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>p,default:()=>v,frontMatter:()=>u,metadata:()=>m,toc:()=>g});var a=n(87462),i=n(67294),l=n(3905),r=n(55059),s=n(22307),o=n(99801),c=(n(18510),n(74866),n(5627)),d=n(55032);const u={title:"ranges::uninitialized_move_n algorithm",sidebar_label:"ranges::uninitialized_move_n(  )",description:"ranges::uninitialized_move_n algorithm C++ documentation",hide_title:!0,tags:["ranges","algorithm","uninitialized_move_n","move_n","uninitialized"],cppreference_origin_rel:"w/cpp/algorithm/ranges/uninitialized_move_n"},p=void 0,m={unversionedId:"std/algo/ranges/uninitialized_move_n",id:"std/algo/ranges/uninitialized_move_n",title:"ranges::uninitialized_move_n algorithm",description:"ranges::uninitialized_move_n algorithm C++ documentation",source:"@site/content/docs/std/algo/ranges/uninitialized_move_n.mdx",sourceDirName:"std/algo/ranges",slug:"/std/algo/ranges/uninitialized_move_n",permalink:"/CppLangNet/docs/std/algo/ranges/uninitialized_move_n",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ranges/uninitialized_move_n.mdx",tags:[{label:"ranges",permalink:"/CppLangNet/docs/tags/ranges"},{label:"algorithm",permalink:"/CppLangNet/docs/tags/algorithm"},{label:"uninitialized_move_n",permalink:"/CppLangNet/docs/tags/uninitialized-move-n"},{label:"move_n",permalink:"/CppLangNet/docs/tags/move-n"},{label:"uninitialized",permalink:"/CppLangNet/docs/tags/uninitialized"}],version:"current",frontMatter:{title:"ranges::uninitialized_move_n algorithm",sidebar_label:"ranges::uninitialized_move_n(  )",description:"ranges::uninitialized_move_n algorithm C++ documentation",hide_title:!0,tags:["ranges","algorithm","uninitialized_move_n","move_n","uninitialized"],cppreference_origin_rel:"w/cpp/algorithm/ranges/uninitialized_move_n"},sidebar:"defaultSidebar",previous:{title:"ranges::uninitialized_move(  )",permalink:"/CppLangNet/docs/std/algo/ranges/uninitialized_move"},next:{title:"ranges::uninitialized_default_construct(  )",permalink:"/CppLangNet/docs/std/algo/ranges/uninitialized_default_construct"}},f={},g=[{value:"Parameters",id:"parameters",level:3},{value:"Return value",id:"return-value",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"Possible implementation",id:"possible-implementation",level:3},{value:"Notes",id:"notes",level:3},{value:"Examples",id:"examples",level:3}],_={toc:g};function v(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},_,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"stdrangesuninitialized_move_n-algorithm"},"std::ranges::uninitialized_move_n() algorithm"),(0,l.kt)(o.Z,{content:{"since-cpp20":{simplified:(0,l.kt)(d.default,{mdxType:"Signature_SinceCpp20_Simplified"}),detailed:(0,l.kt)(c.default,{mdxType:"Signature_SinceCpp20_Detailed"})}},mdxType:"SwitchView"}),(0,l.kt)("p",null,"With the helper types defined as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"template< class I, class O >\nusing uninitialized_move_n_result = ranges::in_out_result<I, O>;\n")),(0,l.kt)("p",null,"Given ",(0,l.kt)("inlineCode",{parentName:"p"},"N")," as ",(0,l.kt)("inlineCode",{parentName:"p"},"min(n, ranges::distance(ofirst, olast))"),":"),(0,l.kt)("p",null,"Moves ",(0,l.kt)("inlineCode",{parentName:"p"},"N")," elements from the input range beginning at ",(0,l.kt)("inlineCode",{parentName:"p"},"ifirst")," to the uninitialized storage designated by the range [",(0,l.kt)("inlineCode",{parentName:"p"},"ofirst"),"; ",(0,l.kt)("inlineCode",{parentName:"p"},"olast"),")"),(0,l.kt)("p",null,"The function has the effect equal to:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"for (; n-- > 0 && ofirst != olast; ++ifirst, ++ofirst)\n  ::new (static_cast<void*>(std::addressof(*first)))\n      std::remove_reference_t<std::iter_reference_t<O>>(ranges::iter_move(ifirst));\n")),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"If an exception is thrown during the initialization then the objects that already constructed in [",(0,l.kt)("inlineCode",{parentName:"p"},"ofirst"),"; ",(0,l.kt)("inlineCode",{parentName:"p"},"olast"),") are destroyed in an unspecified order.\nAlso, the objects in the input range beginning at ifirst, that were already moved, are left in a valid but unspecified state.")),(0,l.kt)("p",null,"The function-like entities described on this page are ",(0,l.kt)("a",{parentName:"p",href:"/docs/std/algo/niebloids"},(0,l.kt)("strong",{parentName:"a"},"niebloids")),"."),(0,l.kt)("h3",{id:"parameters"},"Parameters"),(0,l.kt)(r.ZP,{mdxType:"SymbolTable"},(0,l.kt)(r.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"ifirst"),mdxType:"Symbol"},"The beginning of the input range to move elements from."),(0,l.kt)(r.mN,{none:!0,noLink:!0,name:(0,l.kt)(i.Fragment,null," ",(0,l.kt)("code",null,"ofirst")," ",(0,l.kt)("br",null)," ",(0,l.kt)("code",null,"olast")," "),mdxType:"Symbol"},"The destination range to initialize."),(0,l.kt)(r.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"n"),mdxType:"Symbol"},"The number of elements to move.")),(0,l.kt)("h3",{id:"return-value"},"Return value"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"{\n  ifirst + N,\n  ofirst + N\n}\n")),(0,l.kt)("h3",{id:"complexity"},"Complexity"),(0,l.kt)("p",null,"Linear in ",(0,l.kt)("inlineCode",{parentName:"p"},"N"),"."),(0,l.kt)("h3",{id:"exceptions"},"Exceptions"),(0,l.kt)("p",null,"The exception thrown on construction of the elements in the destination range, if any."),(0,l.kt)("h3",{id:"possible-implementation"},"Possible implementation"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"uninitialized_move_n(1)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"struct uninitialized_move_n_fn\n{\n    template<std::input_iterator I, no-throw-forward-iterator O,\n             no-throw-sentinel-for<O> S>\n    requires std::constructible_from<std::iter_value_t<O>,\n             std::iter_rvalue_reference_t<I>>\n    ranges::uninitialized_move_n_result<I, O>\n    operator()(I ifirst, std::iter_difference_t<I> n, O ofirst, S olast) const\n    {\n        O current{ofirst};\n        try\n        {\n            for (; n-- > 0 && current != olast; ++ifirst, ++current)\n                ::new (const_cast<void*>(static_cast<const volatile void*>\n                    (std::addressof(*current)))) std::remove_reference_t<\n                        std::iter_reference_t<O>>(ranges::iter_move_n(ifirst));\n            return {std::move_n(ifirst), std::move_n(current)};\n        }\n        catch (...) // rollback: destroy constructed elements\n        {\n            for (; ofirst != current; ++ofirst)\n                ranges::destroy_at(std::addressof(*ofirst));\n            throw;\n        }\n    }\n};\n\ninline constexpr uninitialized_move_n_fn uninitialized_move_n{};\n"))),(0,l.kt)("h3",{id:"notes"},"Notes"),(0,l.kt)("p",null,"An implementation may improve the efficiency of ",(0,l.kt)("a",{parentName:"p",href:"#"},(0,l.kt)("inlineCode",{parentName:"a"},"ranges::uninitialized_move_n"))," if the value type of the output range is ",(0,l.kt)("a",{parentName:"p",href:"/docs/named_req/TrivialType"},(0,l.kt)("inlineCode",{parentName:"a"},"TrivialType")),"."),(0,l.kt)("h3",{id:"examples"},"Examples"),(0,l.kt)(s.Z,{columns:["8fr","4fr"],mdxType:"Columns"},(0,l.kt)("div",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='Main.cpp' showLineNumbers",title:"'Main.cpp'",showLineNumbers:!0},'#include <cstdlib>\n#include <iomanip>\n#include <iostream>\n#include <memory>\n#include <string>\n\nvoid print(auto rem, auto first, auto last)\n{\n    for (std::cout << rem; first != last; ++first)\n        std::cout << std::quoted(*first) << \' \';\n    std::cout << \'\\n\';\n}\n\nint main()\n{\n    std::string in[]{ "No", "Diagnostic", "Required", };\n    print("initially, in: ", std::begin(in), std::end(in));\n\n    if (\n        constexpr auto sz = std::size(in);\n        void* out = std::aligned_alloc(alignof(std::string), sizeof(std::string) * sz)\n    )\n    {\n        try\n        {\n            auto first{static_cast<std::string*>(out)};\n            auto last{first + sz};\n            std::ranges::uninitialized_move_n(std::begin(in), sz, first, last);\n\n            print("after move_n, in: ", std::begin(in), std::end(in));\n            print("after move_n, out: ", first, last);\n\n            std::ranges::destroy(first, last);\n        }\n        catch (...)\n        {\n            std::cout << "Exception!\\n";\n        }\n        std::free(out);\n    }\n}\n'))),(0,l.kt)("div",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Output"',title:'"Output"'},'initially, in: "No" "Diagnostic" "Required"\nafter move_n, in: "" "" ""\nafter move_n, out: "No" "Diagnostic" "Required"\n')))))}v.isMDXComponent=!0}}]);