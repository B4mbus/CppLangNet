"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[11974],{14064:(e,t,n)=>{n.d(t,{ZP:()=>o});var a=n(87462),r=(n(67294),n(3905));const l={toc:[]};function o(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Aspects and semantics that are ",(0,r.kt)("strong",{parentName:"p"},"implementation-defined")," are not guaranteed by\nthe standard in any way, rather they are left out to the implementation (compiler vendor standard library, most of the times).\nFor example, most mathematical functions incur some ",(0,r.kt)("strong",{parentName:"p"},"implementation-defined")," behaviour."))}o.isMDXComponent=!0},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),r=n(86010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>C});var a=n(87462),r=n(67294),l=n(86010),o=n(12466),s=n(76775),i=n(91980),p=n(67392),c=n(50012);function u(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=d(e),[o,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[i,p]=b({queryString:n,groupId:a}),[u,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),h=(()=>{const e=i??u;return m({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{h&&s(h)}),[h]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);s(e),p(e),f(e)}),[p,f,l]),tabValues:l}}var h=n(72389);const g="tabList__CuJ",k="tabItem_LNqP";function v(e){let{className:t,block:n,selectedValue:s,selectValue:i,tabValues:p}=e;const c=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.o5)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),a=p[n].value;a!==s&&(u(t),i(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:d},o,{className:(0,l.Z)("tabs__item",k,o?.className,{"tabs__item--active":s===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=f(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",g)},r.createElement(v,(0,a.Z)({},e,t)),r.createElement(y,(0,a.Z)({},e,t)))}function C(e){const t=(0,h.Z)();return r.createElement(N,(0,a.Z)({key:String(t)},e))}},98839:(e,t,n)=>{n.d(t,{z:()=>a});const a=n(67294).createContext({name:"Unknown",folder:"unknown"})},22307:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(87462),r=n(67294);const l="columns_Terr";function o(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,r.createElement("div",(0,a.Z)({className:l,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}o.isMDXComponent=!0},99801:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(67294),r=n(74866),l=n(85162),o=n(99372),s=n(72412);const i={};function p(e){const t=e.content||{};return a.createElement(r.Z,null,Object.entries(t).map(((e,t)=>{let[n,p]=e;return p.value||p.simplified||p.detailed?a.createElement(l.Z,{value:n,label:o.gJ.get(n),default:p.default||0==t},p.simplified?a.createElement(a.Fragment,null,a.createElement(r.Z,{groupId:"view_mode",className:i.smallTabs},a.createElement(l.Z,{value:"simplified",label:"Simplified",default:!0},(0,s.Z)(p.simplified)),a.createElement(l.Z,{value:"detailed",label:"Detailed"},(0,s.Z)(p.detailed)))):p.value):a.createElement(l.Z,{value:n,label:o.gJ.get(n),default:0==t},(0,s.Z)(p))})))}},55059:(e,t,n)=>{n.d(t,{mN:()=>c,ZP:()=>p});var a=n(67294),r=n(72412);const l={symbolTable:"symbolTable_yosy",symbolName:"symbolName__gUy",symbolDesc:"symbolDesc_wDaQ",symbolProp:"symbolProp_oAcv",accessPublic:"accessPublic_LfqG",accessProtected:"accessProtected_bDL6",accessPrivate:"accessPrivate_Ab5O",modStatic:"modStatic_ZSC5",modConstexpr:"modConstexpr_iypt",modConst:"modConst_osuL",modVolatile:"modVolatile_ePYM",modVirtual:"modVirtual_jNz7"};var o=n(98839);const s={None:{Order:0,ShortName:"",FullName:"",Style:l.accessPublic},Public:{Order:1,ShortName:"pub",FullName:"public",Style:l.accessPublic},Protected:{Order:2,ShortName:"prot",FullName:"protected",Style:l.accessProtected},Private:{Order:3,ShortName:"priv",FullName:"private",Style:l.accessPrivate}},i=e=>e.none?s.None:e.pub||e.public?s.Public:e.prot||e.protected?s.Protected:e.priv||e.private?s.Private:s.Public;function p(e){return(t=>{if(0===t.length)return null;const n=t.sort(((e,t)=>i(e).Order<i(t).Order));return a.createElement("table",{"data-no-traits":`${e.noTraits||"false"}`,className:l.symbolTable},a.createElement("tbody",null,n))})(a.Children.toArray(e.children))}function c(e){a.useContext(o.z);let t=(0,r.Z)(e.name),n=null;e.desc?n=e.desc:e.children&&(n=e.children);const s=e.linkName||e.autoLink;!e.noLink&&s&&(t=a.createElement("a",{href:e.link||`${e.linkName||e.name}`},t));const p=(e,t,n)=>!0===e?a.createElement("span",{className:l[t]},n):null;return a.createElement("tr",null,!e.none&&a.createElement("td",{className:l.symbolProp},(e=>{const t=i(e);return a.createElement("span",{className:t.Style},t.ShortName)})(e),p(e.static,"modStatic","static"),p(e.constexpr,"modConstexpr","constexpr"),p(e.const,"modConst","const"),p(e.volatile,"modVolatile","volatile"),p(e.virtual,"modVirtual","virtual")),a.createElement("td",{className:l.symbolName},t),a.createElement("td",{className:l.symbolDesc},(0,r.Z)(n)))}c.isMDXComponent=!0,p.isMDXComponent=!0,p.Symbol=c},18510:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(67294),r=n(44996),l=n(34386),o=n(72412);const s="TooltipContent_Lvru",i="TooltipTitle_ukF2";function p(e){let{url:t,title:n,maxWidth:p,children:c}=e;let u=p||"clamp(250px, 25vw, 800px)";"string"==typeof u&&u.endsWith("vw")&&(u=`clamp(250px, ${u}, 800px)`);const d="function"==typeof n?a.createElement(n):n,m=(t||"").startsWith("/")?(0,r.Z)(t):t,b=t?a.createElement("a",{href:m,target:"_blank",rel:"noreferrer"},c):c;return a.createElement(l.Z,{componentsProps:{tooltip:{style:{maxWidth:u}}},title:a.createElement("span",{className:i},(0,o.Z)(d)),placement:"top",arrow:!0},a.createElement("span",{className:s},b))}p.isMDXComponent=!0},99372:(e,t,n)=>{n.d(t,{gJ:()=>c,eH:()=>b,U6:()=>d,OS:()=>m});var a=n(67294),r=n(95999);const l="markedText_c6kK",o="since_c1Q3",s="until_jXK6",i="removed_A_Kf",p="versionNumber_BiUX",c=new Map;function u(e){let{children:t,className:n}=e;return a.createElement("span",{className:l+(n?" "+n:"")},t)}function d(e){let{children:t,v:n}=e;return a.createElement(u,{className:o},t,"\xa0",a.createElement("span",{className:p},a.createElement("small",null,"(",c.get(`since-${n}`),")")))}function m(e){let{children:t,v:n}=e;return a.createElement(u,{className:s},t,"\xa0",a.createElement("span",{className:p},a.createElement("small",null,"(",c.get(`until-${n}`),")")))}function b(e){let{children:t,v:n}=e;return a.createElement(u,{className:i},t,"\xa0",a.createElement("span",{className:p},a.createElement("small",null,"(",c.get(`removed-${n}`),")")))}c.set("cpp98","C++98"),c.set("cpp03","C++03"),c.set("cpp11","C++11"),c.set("cpp14","C++14"),c.set("cpp17","C++17"),c.set("cpp20","C++20"),c.set("cpp23","C++23"),c.set("deprecated-",a.createElement(r.Z,null,"deprecated")),c.set("deprecated-cpp98",a.createElement(r.Z,null,"deprecated in C++98")),c.set("deprecated-cpp03",a.createElement(r.Z,null,"deprecated in C++03")),c.set("deprecated-cpp11",a.createElement(r.Z,null,"deprecated in C++11")),c.set("deprecated-cpp14",a.createElement(r.Z,null,"deprecated in C++14")),c.set("deprecated-cpp17",a.createElement(r.Z,null,"deprecated in C++17")),c.set("deprecated-cpp20",a.createElement(r.Z,null,"deprecated in C++20")),c.set("deprecated-cpp23",a.createElement(r.Z,null,"deprecated in C++23")),c.set("until-cpp98",a.createElement(r.Z,null,"until C++98")),c.set("until-cpp03",a.createElement(r.Z,null,"until C++03")),c.set("until-cpp11",a.createElement(r.Z,null,"until C++11")),c.set("until-cpp14",a.createElement(r.Z,null,"until C++14")),c.set("until-cpp17",a.createElement(r.Z,null,"until C++17")),c.set("until-cpp20",a.createElement(r.Z,null,"until C++20")),c.set("until-cpp23",a.createElement(r.Z,null,"until C++23")),c.set("since-cpp98",a.createElement(r.Z,null,"since C++98")),c.set("since-cpp03",a.createElement(r.Z,null,"since C++03")),c.set("since-cpp11",a.createElement(r.Z,null,"since C++11")),c.set("since-cpp14",a.createElement(r.Z,null,"since C++14")),c.set("since-cpp17",a.createElement(r.Z,null,"since C++17")),c.set("since-cpp20",a.createElement(r.Z,null,"since C++20")),c.set("since-cpp23",a.createElement(r.Z,null,"since C++23")),c.set("removed-",a.createElement(r.Z,null,"deleted")),c.set("removed-cpp98",a.createElement(r.Z,null,"removed in C++98")),c.set("removed-cpp03",a.createElement(r.Z,null,"removed in C++03")),c.set("removed-cpp11",a.createElement(r.Z,null,"removed in C++11")),c.set("removed-cpp14",a.createElement(r.Z,null,"removed in C++14")),c.set("removed-cpp17",a.createElement(r.Z,null,"removed in C++17")),c.set("removed-cpp20",a.createElement(r.Z,null,"removed in C++20")),c.set("removed-cpp23",a.createElement(r.Z,null,"removed in C++23"))},72412:(e,t,n)=>{function a(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>a})},96533:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const l={},o=void 0,s={unversionedId:"std/algo/ordinary/_codes/upper_bound/since-cpp20",id:"std/algo/ordinary/_codes/upper_bound/since-cpp20",title:"since-cpp20",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/upper_bound/since-cpp20.mdx",sourceDirName:"std/algo/ordinary/_codes/upper_bound",slug:"/std/algo/ordinary/_codes/upper_bound/since-cpp20",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/upper_bound/since-cpp20",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/upper_bound/since-cpp20.mdx",tags:[],version:"current",frontMatter:{}},i={},p=[],c={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class ForwardIt, class T >\nconstexpr ForwardIt upper_bound( ForwardIt first, ForwardIt last, const T& value );\n\n// (2)\ntemplate< class ForwardIt, class T, class Compare >\nconstexpr ForwardIt upper_bound( ForwardIt first, ForwardIt last, const T& value, Compare comp );\n")))}u.isMDXComponent=!0},67407:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const l={},o=void 0,s={unversionedId:"std/algo/ordinary/_codes/upper_bound/until-cpp20",id:"std/algo/ordinary/_codes/upper_bound/until-cpp20",title:"until-cpp20",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/upper_bound/until-cpp20.mdx",sourceDirName:"std/algo/ordinary/_codes/upper_bound",slug:"/std/algo/ordinary/_codes/upper_bound/until-cpp20",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/upper_bound/until-cpp20",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/upper_bound/until-cpp20.mdx",tags:[],version:"current",frontMatter:{}},i={},p=[],c={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class ForwardIt, class T >\nForwardIt upper_bound( ForwardIt first, ForwardIt last, const T& value );\n\n// (2)\ntemplate< class ForwardIt, class T, class Compare >\nForwardIt upper_bound( ForwardIt first, ForwardIt last, const T& value, Compare comp );\n")))}u.isMDXComponent=!0},59605:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>m,default:()=>k,frontMatter:()=>d,metadata:()=>b,toc:()=>h});var a=n(87462),r=n(67294),l=n(3905),o=n(55059),s=n(22307),i=n(99801),p=(n(18510),n(99372)),c=(n(14064),n(67407)),u=n(96533);const d={title:"upper_bound algorithm",sidebar_label:"upper_bound(  )",description:"upper_bound algorithm C++ documentation",hide_title:!0,tags:["algorithm","upper_bound","bound","binary_search"],cppreference_origin_rel:"w/cpp/algorithm/upper_bound"},m=void 0,b={unversionedId:"std/algo/ordinary/upper_bound",id:"std/algo/ordinary/upper_bound",title:"upper_bound algorithm",description:"upper_bound algorithm C++ documentation",source:"@site/content/docs/std/algo/ordinary/upper_bound.mdx",sourceDirName:"std/algo/ordinary",slug:"/std/algo/ordinary/upper_bound",permalink:"/CppLangNet/docs/std/algo/ordinary/upper_bound",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/upper_bound.mdx",tags:[{label:"algorithm",permalink:"/CppLangNet/docs/tags/algorithm"},{label:"upper_bound",permalink:"/CppLangNet/docs/tags/upper-bound"},{label:"bound",permalink:"/CppLangNet/docs/tags/bound"},{label:"binary_search",permalink:"/CppLangNet/docs/tags/binary-search"}],version:"current",frontMatter:{title:"upper_bound algorithm",sidebar_label:"upper_bound(  )",description:"upper_bound algorithm C++ documentation",hide_title:!0,tags:["algorithm","upper_bound","bound","binary_search"],cppreference_origin_rel:"w/cpp/algorithm/upper_bound"},sidebar:"defaultSidebar",previous:{title:"lower_bound(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/lower_bound"},next:{title:"equal_range(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/equal_range"}},f={},h=[{value:"Parameters",id:"parameters",level:3},{value:"Type requirements",id:"type-requirements",level:4},{value:"Return value",id:"return-value",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"Possible implementation",id:"possible-implementation",level:3},{value:"Examples",id:"examples",level:3}],g={toc:h};function k(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"stdupper_bound-algorithm"},"std::upper_bound() algorithm"),(0,l.kt)(i.Z,{content:{"since-cpp20":(0,l.kt)(u.default,{mdxType:"Signature_SinceCpp20"}),"until-cpp20":(0,l.kt)(c.default,{mdxType:"Signature_UntilCpp20"})},mdxType:"SwitchView"}),(0,l.kt)("p",null,"Returns an iterator pointing to the first element in the range [",(0,l.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,l.kt)("inlineCode",{parentName:"p"},"last"),") such that ",(0,l.kt)("inlineCode",{parentName:"p"},"value < element"),"\n(or ",(0,l.kt)("inlineCode",{parentName:"p"},"comp(value, element)"),") is ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," (i.e. that is strictly greater than value), or ",(0,l.kt)("inlineCode",{parentName:"p"},"last")," if no such element is found."),(0,l.kt)("p",null,"The range [",(0,l.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,l.kt)("inlineCode",{parentName:"p"},"last"),") must be partitioned with respect to the expression ",(0,l.kt)("inlineCode",{parentName:"p"},"!(value < element)")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"!comp(value, element)"),", i.e., all elements for which the expression is ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," must precede all elements for which the expression is ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,l.kt)("p",null,"A fully-sorted range meets this criterion."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"(1)")," Uses ",(0,l.kt)("inlineCode",{parentName:"li"},"operator<")," to compare the elements."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"(2)")," Uses the given comparison function ",(0,l.kt)("inlineCode",{parentName:"li"},"comp"),".")),(0,l.kt)("h3",{id:"parameters"},"Parameters"),(0,l.kt)(o.ZP,{mdxType:"SymbolTable"},(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)(r.Fragment,null," ",(0,l.kt)("code",null,"first")," ",(0,l.kt)("br",null)," ",(0,l.kt)("code",null,"last")," "),mdxType:"Symbol"},"The partially-ordered range to examine."),(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"value"),mdxType:"Symbol"},"The value to compare the elements to."),(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"comp"),mdxType:"Symbol"},(0,l.kt)("p",null,"Comparison function object (i.e. an object that satisfies the requirements of ",(0,l.kt)("a",{parentName:"p",href:"/docs/named_req/Compare"},"Compare"),").\nThe signature of the comparison function should be equivalent to the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"bool cmp(const Type1 &a, const Type2 &b);\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The signature does not need to have ",(0,l.kt)("inlineCode",{parentName:"li"},"const&"),", but must not modify arguments."),(0,l.kt)("li",{parentName:"ul"},"Must accept all values of type (possibly const) ",(0,l.kt)("inlineCode",{parentName:"li"},"Type")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"Type2"),", regardless of ",(0,l.kt)("a",{parentName:"li",href:"#"},"value category")," (so ",(0,l.kt)("inlineCode",{parentName:"li"},"Type1&")," is not allowed, ",(0,l.kt)(p.U6,{v:"cpp11",mdxType:"Since"},"nor is ",(0,l.kt)("code",null,"Type1")," unless for ",(0,l.kt)("code",null,"Type1")," a move is equivalent to a copy"),")"),(0,l.kt)("li",{parentName:"ul"},"The types ",(0,l.kt)("inlineCode",{parentName:"li"},"Type1")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"Type2")," must be such that an object of type ",(0,l.kt)("inlineCode",{parentName:"li"},"RandomIt")," can be implicitly converted to both of them.")))),(0,l.kt)("h4",{id:"type-requirements"},"Type requirements"),(0,l.kt)(o.ZP,{mdxType:"SymbolTable"},(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"ForwardIt"),mdxType:"Symbol"},(0,l.kt)("a",{href:"/docs/named_req/LegacyForwardIterator"},"LegacyForwardIterator")),(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"Compare"),mdxType:"Symbol"},(0,l.kt)("a",{href:"/docs/named_req/BinaryPredicate"},"BinaryPredicate"))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Compare")," is not required to satisfy ",(0,l.kt)("a",{parentName:"p",href:"/docs/named_req/Compare"},"Compare"),"."),(0,l.kt)("h3",{id:"return-value"},"Return value"),(0,l.kt)("p",null,"Iterator pointing to the first element in the range [",(0,l.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,l.kt)("inlineCode",{parentName:"p"},"last"),") such that ",(0,l.kt)("inlineCode",{parentName:"p"},"value < element")," (or ",(0,l.kt)("inlineCode",{parentName:"p"},"comp(value, element)"),") is ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", or ",(0,l.kt)("inlineCode",{parentName:"p"},"last")," if no such element is found."),(0,l.kt)("h3",{id:"complexity"},"Complexity"),(0,l.kt)("p",null,"However, for non-",(0,l.kt)("a",{parentName:"p",href:"/docs/named_req/LegacyRandomAccessIterators"},"LegacyRandomAccessIterators"),", the number of iterator increments is linear."),(0,l.kt)("p",null,"Notably, ",(0,l.kt)("a",{parentName:"p",href:"/docs/std/containers/maps/map"},(0,l.kt)("inlineCode",{parentName:"a"},"std::map")),", ",(0,l.kt)("a",{parentName:"p",href:"/docs/std/containers/maps/multimap"},(0,l.kt)("inlineCode",{parentName:"a"},"std::multimap")),",\n",(0,l.kt)("a",{parentName:"p",href:"/docs/std/containers/sets/set"},(0,l.kt)("inlineCode",{parentName:"a"},"std::set")),", and ",(0,l.kt)("a",{parentName:"p",href:"/docs/std/containers/sets/multiset"},(0,l.kt)("inlineCode",{parentName:"a"},"std::multiset"))," iterators are not random access,\nand so their member ",(0,l.kt)("inlineCode",{parentName:"p"},"upper_bound()")," functions should be preferred."),(0,l.kt)("h3",{id:"exceptions"},"Exceptions"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"(none)")),(0,l.kt)("h3",{id:"possible-implementation"},"Possible implementation"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"upper_bound (1)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"template<class ForwardIt, class T>\nForwardIt upper_bound(ForwardIt first, ForwardIt last, const T& value)\n{\n    ForwardIt it;\n    typename std::iterator_traits<ForwardIt>::difference_type count, step;\n    count = std::distance(first, last);\n\n    while (count > 0)\n    {\n        it = first;\n        step = count / 2;\n        std::advance(it, step);\n\n        if (!(value < *it))\n        {\n            first = ++it;\n            count -= step + 1;\n        }\n        else\n            count = step;\n    }\n\n    return first;\n}\n"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"upper_bound (2)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"template<class ForwardIt, class T, class Compare>\nForwardIt upper_bound(ForwardIt first, ForwardIt last, const T& value, Compare comp)\n{\n    ForwardIt it;\n    typename std::iterator_traits<ForwardIt>::difference_type count, step;\n    count = std::distance(first, last);\n\n    while (count > 0)\n    {\n        it = first;\n        step = count / 2;\n        std::advance(it, step);\n\n        if (!comp(value, *it))\n        {\n            first = ++it;\n            count -= step + 1;\n        }\n        else\n            count = step;\n    }\n\n    return first;\n}\n"))),(0,l.kt)("h3",{id:"examples"},"Examples"),(0,l.kt)(s.Z,{columns:["8fr","4fr"],mdxType:"Columns"},(0,l.kt)("div",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='Main.cpp' showLineNumbers",title:"'Main.cpp'",showLineNumbers:!0},'\n#include <algorithm>\n#include <iostream>\n#include <vector>\n\nstruct PriceInfo { double price; };\n\nint main()\n{\n    const std::vector<int> data{1, 2, 4, 5, 5, 6};\n\n    for (int i = 0; i < 7; ++i)\n    {\n        // Search first element that is greater than i\n        auto upper = std::upper_bound(data.begin(), data.end(), i);\n\n        std::cout << i << " < ";\n        upper != data.end()\n            ? std::cout << *upper << " at index " << std::distance(data.begin(), upper)\n            : std::cout << "not found";\n        std::cout << \'\\n\';\n    }\n\n    std::vector<PriceInfo> prices{{100.0}, {101.5}, {102.5}, {102.5}, {107.3}};\n\n    for (double to_find : {102.5, 110.2})\n    {\n        auto prc_info = std::upper_bound(prices.begin(), prices.end(), to_find,\n            [](double value, const PriceInfo& info)\n            {\n                return value < info.price;\n            });\n\n        prc_info != prices.end()\n            ? std::cout << prc_info->price << " at index " << prc_info - prices.begin()\n            : std::cout << to_find << " not found";\n        std::cout << \'\\n\';\n    }\n}\n'))),(0,l.kt)("div",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Output"',title:'"Output"'},"0 < 1 at index 0\n1 < 2 at index 1\n2 < 4 at index 2\n3 < 4 at index 2\n4 < 5 at index 3\n5 < 6 at index 5\n6 < not found\n107.3 at index 4\n110.2 not found\n")))))}k.isMDXComponent=!0}}]);