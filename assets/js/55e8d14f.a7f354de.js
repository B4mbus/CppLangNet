"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[45012],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=s(n),f=a,d=m["".concat(c,".").concat(f)]||m[f]||p[f]||i;return n?r.createElement(d,l(l({ref:t},u),{},{components:n})):r.createElement(d,l({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},39928:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const i={title:"Examples - Functions"},l="Functions \xbb Examples",o={unversionedId:"course/basics/functions/examples",id:"course/basics/functions/examples",title:"Examples - Functions",description:"Calculate area of a circle",source:"@site/content/learn/course/basics/functions/examples.mdx",sourceDirName:"course/basics/functions",slug:"/course/basics/functions/examples",permalink:"/CppLangNet/learn/course/basics/functions/examples",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/learn/course/basics/functions/examples.mdx",tags:[],version:"current",frontMatter:{title:"Examples - Functions"},sidebar:"defaultSidebar",previous:{title:"Functions",permalink:"/CppLangNet/learn/course/basics/functions/"},next:{title:"Common problems - Functions",permalink:"/CppLangNet/learn/course/basics/functions/common-problems"}},c={},s=[{value:"Calculate area of a circle",id:"calculate-area-of-a-circle",level:2},{value:"Convert Fahrenheit to Celsius",id:"convert-fahrenheit-to-celsius",level:2},{value:"Calculate factorial of a number",id:"calculate-factorial-of-a-number",level:2},{value:"Calculate the average of an array of numbers",id:"calculate-the-average-of-an-array-of-numbers",level:2},{value:"Calculate the greatest common divisor of two numbers",id:"calculate-the-greatest-common-divisor-of-two-numbers",level:2},{value:"Calculate the power of a number",id:"calculate-the-power-of-a-number",level:2},{value:"Reverse a string",id:"reverse-a-string",level:2},{value:"Check if a string is a palindrome",id:"check-if-a-string-is-a-palindrome",level:2}],u={toc:s};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"functions--examples"},"Functions \xbb Examples"),(0,a.kt)("h2",{id:"calculate-area-of-a-circle"},"Calculate area of a circle"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"double areaOfCircle(double radius) {\n    return 3.14159 * radius * radius;\n}\n")),(0,a.kt)("p",null,"\ud83d\udca1 Idea: Use the ",(0,a.kt)("inlineCode",{parentName:"p"},"M_PI")," constant from the ",(0,a.kt)("inlineCode",{parentName:"p"},"<cmath>")," header instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"3.14159"),"."),(0,a.kt)("h2",{id:"convert-fahrenheit-to-celsius"},"Convert Fahrenheit to Celsius"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"double fahrenheitToCelsius(double fahrenheit) {\n    return (fahrenheit - 32) * 5 / 9;\n}\n")),(0,a.kt)("p",null,"\ud83d\udca1 Idea: create a calculator that can convert between Fahrenheit, Celsius, and Kelvin."),(0,a.kt)("h2",{id:"calculate-factorial-of-a-number"},"Calculate factorial of a number"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int factorial(int n) {\n    int result = 1;\n    for (int i = 1; i <= n; ++i) {\n        result *= i;\n    }\n    return result;\n}\n")),(0,a.kt)("p",null,"\ud83d\udca1 Idea: create a calculator for the ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Binomial_coefficient"},"binomial coefficient"),"."),(0,a.kt)("h2",{id:"calculate-the-average-of-an-array-of-numbers"},"Calculate the average of an array of numbers"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"double average(std::vector<int> arr) {\n    double sum = 0;\n    for (int i = 0; i < arr.size(); ++i) {\n        sum += arr[i];\n    }\n    return sum / arr.size();\n}\n")),(0,a.kt)("h2",{id:"calculate-the-greatest-common-divisor-of-two-numbers"},"Calculate the greatest common divisor of two numbers"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int gcd(int a, int b) {\n    if (b == 0) return a;\n    return gcd(b, a % b);\n}\n")),(0,a.kt)("h2",{id:"calculate-the-power-of-a-number"},"Calculate the power of a number"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"double power(double base, int exponent) {\n    double result = 1;\n    for (int i = 0; i < exponent; ++i) {\n        result *= base;\n    }\n    return result;\n}\n")),(0,a.kt)("h2",{id:"reverse-a-string"},"Reverse a string"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string reverseString(std::string str) {\n    int n = str.length();\n    for (int i = 0; i < n / 2; ++i) {\n        char temp = str[i];\n        str[i] = str[n - i - 1];\n        str[n - i - 1] = temp;\n    }\n    return str;\n}\n")),(0,a.kt)("h2",{id:"check-if-a-string-is-a-palindrome"},"Check if a string is a palindrome"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"bool isPalindrome(std::string str) {\n    int n = str.length();\n    for (int i = 0; i < n / 2; ++i) {\n        if (str[i] != str[n - i - 1]) return false;\n    }\n    return true;\n}\n")))}p.isMDXComponent=!0}}]);