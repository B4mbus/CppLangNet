"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[75020],{98088:(e,t,n)=>{n.d(t,{ZP:()=>o});var a=n(87462),r=(n(67294),n(3905));const l={toc:[]};function o(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("b",null,"Undefined behaviour")," is a property of a program that's incorrect, but likely compiles. It is incorrect in a way, that the error is only invoked in certain conditions at runtime.",(0,r.kt)("p",null,"Common cases include: ",(0,r.kt)("strong",{parentName:"p"},"out of bounds access"),", ",(0,r.kt)("strong",{parentName:"p"},"reading uninitialized objects"),", ",(0,r.kt)("strong",{parentName:"p"},"dangling pointers/references")," or ",(0,r.kt)("strong",{parentName:"p"},"signed overflow"),"."))}o.isMDXComponent=!0},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),r=n(86010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>C});var a=n(87462),r=n(67294),l=n(86010),o=n(12466),s=n(76775),i=n(91980),c=n(67392),p=n(50012);function u(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=d(e),[o,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[i,c]=h({queryString:n,groupId:a}),[u,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,p.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),f=(()=>{const e=i??u;return m({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{f&&s(f)}),[f]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);s(e),c(e),b(e)}),[c,b,l]),tabValues:l}}var f=n(72389);const g="tabList__CuJ",v="tabItem_LNqP";function y(e){let{className:t,block:n,selectedValue:s,selectValue:i,tabValues:c}=e;const p=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.o5)(),d=e=>{const t=e.currentTarget,n=p.indexOf(t),a=c[n].value;a!==s&&(u(t),i(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:d},o,{className:(0,l.Z)("tabs__item",v,o?.className,{"tabs__item--active":s===t})}),n??t)})))}function k(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=b(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",g)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(k,(0,a.Z)({},e,t)))}function C(e){const t=(0,f.Z)();return r.createElement(N,(0,a.Z)({key:String(t)},e))}},98839:(e,t,n)=>{n.d(t,{z:()=>a});const a=n(67294).createContext({name:"Unknown",folder:"unknown"})},22307:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(87462),r=n(67294);const l="columns_Terr";function o(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,r.createElement("div",(0,a.Z)({className:l,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}o.isMDXComponent=!0},99801:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),r=n(74866),l=n(85162),o=n(99372),s=n(72412);const i={};function c(e){const t=e.content||{};return a.createElement(r.Z,null,Object.entries(t).map(((e,t)=>{let[n,c]=e;return c.value||c.simplified||c.detailed?a.createElement(l.Z,{value:n,label:o.gJ.get(n),default:c.default||0==t},c.simplified?a.createElement(a.Fragment,null,a.createElement(r.Z,{groupId:"view_mode",className:i.smallTabs},a.createElement(l.Z,{value:"simplified",label:"Simplified",default:!0},(0,s.Z)(c.simplified)),a.createElement(l.Z,{value:"detailed",label:"Detailed"},(0,s.Z)(c.detailed)))):c.value):a.createElement(l.Z,{value:n,label:o.gJ.get(n),default:0==t},(0,s.Z)(c))})))}},55059:(e,t,n)=>{n.d(t,{mN:()=>p,ZP:()=>c});var a=n(67294),r=n(72412);const l={symbolTable:"symbolTable_yosy",symbolName:"symbolName__gUy",symbolDesc:"symbolDesc_wDaQ",symbolProp:"symbolProp_oAcv",accessPublic:"accessPublic_LfqG",accessProtected:"accessProtected_bDL6",accessPrivate:"accessPrivate_Ab5O",modStatic:"modStatic_ZSC5",modConstexpr:"modConstexpr_iypt",modConst:"modConst_osuL",modVolatile:"modVolatile_ePYM",modVirtual:"modVirtual_jNz7"};var o=n(98839);const s={None:{Order:0,ShortName:"",FullName:"",Style:l.accessPublic},Public:{Order:1,ShortName:"pub",FullName:"public",Style:l.accessPublic},Protected:{Order:2,ShortName:"prot",FullName:"protected",Style:l.accessProtected},Private:{Order:3,ShortName:"priv",FullName:"private",Style:l.accessPrivate}},i=e=>e.none?s.None:e.pub||e.public?s.Public:e.prot||e.protected?s.Protected:e.priv||e.private?s.Private:s.Public;function c(e){return(t=>{if(0===t.length)return null;const n=t.sort(((e,t)=>i(e).Order<i(t).Order));return a.createElement("table",{"data-no-traits":`${e.noTraits||"false"}`,className:l.symbolTable},a.createElement("tbody",null,n))})(a.Children.toArray(e.children))}function p(e){a.useContext(o.z);let t=(0,r.Z)(e.name),n=null;e.desc?n=e.desc:e.children&&(n=e.children);const s=e.linkName||e.autoLink;!e.noLink&&s&&(t=a.createElement("a",{href:e.link||`${e.linkName||e.name}`},t));const c=(e,t,n)=>!0===e?a.createElement("span",{className:l[t]},n):null;return a.createElement("tr",null,!e.none&&a.createElement("td",{className:l.symbolProp},(e=>{const t=i(e);return a.createElement("span",{className:t.Style},t.ShortName)})(e),c(e.static,"modStatic","static"),c(e.constexpr,"modConstexpr","constexpr"),c(e.const,"modConst","const"),c(e.volatile,"modVolatile","volatile"),c(e.virtual,"modVirtual","virtual")),a.createElement("td",{className:l.symbolName},t),a.createElement("td",{className:l.symbolDesc},(0,r.Z)(n)))}p.isMDXComponent=!0,c.isMDXComponent=!0,c.Symbol=p},18510:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),r=n(44996),l=n(34386),o=n(72412);const s="TooltipContent_Lvru",i="TooltipTitle_ukF2";function c(e){let{url:t,title:n,maxWidth:c,children:p}=e;let u=c||"clamp(250px, 25vw, 800px)";"string"==typeof u&&u.endsWith("vw")&&(u=`clamp(250px, ${u}, 800px)`);const d="function"==typeof n?a.createElement(n):n,m=(t||"").startsWith("/")?(0,r.Z)(t):t,h=t?a.createElement("a",{href:m,target:"_blank",rel:"noreferrer"},p):p;return a.createElement(l.Z,{componentsProps:{tooltip:{style:{maxWidth:u}}},title:a.createElement("span",{className:i},(0,o.Z)(d)),placement:"top",arrow:!0},a.createElement("span",{className:s},h))}c.isMDXComponent=!0},99372:(e,t,n)=>{n.d(t,{gJ:()=>p,eH:()=>h,U6:()=>d,OS:()=>m});var a=n(67294),r=n(95999);const l="markedText_c6kK",o="since_c1Q3",s="until_jXK6",i="removed_A_Kf",c="versionNumber_BiUX",p=new Map;function u(e){let{children:t,className:n}=e;return a.createElement("span",{className:l+(n?" "+n:"")},t)}function d(e){let{children:t,v:n}=e;return a.createElement(u,{className:o},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",p.get(`since-${n}`),")")))}function m(e){let{children:t,v:n}=e;return a.createElement(u,{className:s},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",p.get(`until-${n}`),")")))}function h(e){let{children:t,v:n}=e;return a.createElement(u,{className:i},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",p.get(`removed-${n}`),")")))}p.set("cpp98","C++98"),p.set("cpp03","C++03"),p.set("cpp11","C++11"),p.set("cpp14","C++14"),p.set("cpp17","C++17"),p.set("cpp20","C++20"),p.set("cpp23","C++23"),p.set("deprecated-",a.createElement(r.Z,null,"deprecated")),p.set("deprecated-cpp98",a.createElement(r.Z,null,"deprecated in C++98")),p.set("deprecated-cpp03",a.createElement(r.Z,null,"deprecated in C++03")),p.set("deprecated-cpp11",a.createElement(r.Z,null,"deprecated in C++11")),p.set("deprecated-cpp14",a.createElement(r.Z,null,"deprecated in C++14")),p.set("deprecated-cpp17",a.createElement(r.Z,null,"deprecated in C++17")),p.set("deprecated-cpp20",a.createElement(r.Z,null,"deprecated in C++20")),p.set("deprecated-cpp23",a.createElement(r.Z,null,"deprecated in C++23")),p.set("until-cpp98",a.createElement(r.Z,null,"until C++98")),p.set("until-cpp03",a.createElement(r.Z,null,"until C++03")),p.set("until-cpp11",a.createElement(r.Z,null,"until C++11")),p.set("until-cpp14",a.createElement(r.Z,null,"until C++14")),p.set("until-cpp17",a.createElement(r.Z,null,"until C++17")),p.set("until-cpp20",a.createElement(r.Z,null,"until C++20")),p.set("until-cpp23",a.createElement(r.Z,null,"until C++23")),p.set("since-cpp98",a.createElement(r.Z,null,"since C++98")),p.set("since-cpp03",a.createElement(r.Z,null,"since C++03")),p.set("since-cpp11",a.createElement(r.Z,null,"since C++11")),p.set("since-cpp14",a.createElement(r.Z,null,"since C++14")),p.set("since-cpp17",a.createElement(r.Z,null,"since C++17")),p.set("since-cpp20",a.createElement(r.Z,null,"since C++20")),p.set("since-cpp23",a.createElement(r.Z,null,"since C++23")),p.set("removed-",a.createElement(r.Z,null,"deleted")),p.set("removed-cpp98",a.createElement(r.Z,null,"removed in C++98")),p.set("removed-cpp03",a.createElement(r.Z,null,"removed in C++03")),p.set("removed-cpp11",a.createElement(r.Z,null,"removed in C++11")),p.set("removed-cpp14",a.createElement(r.Z,null,"removed in C++14")),p.set("removed-cpp17",a.createElement(r.Z,null,"removed in C++17")),p.set("removed-cpp20",a.createElement(r.Z,null,"removed in C++20")),p.set("removed-cpp23",a.createElement(r.Z,null,"removed in C++23"))},72412:(e,t,n)=>{function a(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>a})},90411:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const l={},o=void 0,s={unversionedId:"std/algo/ordinary/_codes/bsearch/since-cpp98",id:"std/algo/ordinary/_codes/bsearch/since-cpp98",title:"since-cpp98",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/bsearch/since-cpp98.mdx",sourceDirName:"std/algo/ordinary/_codes/bsearch",slug:"/std/algo/ordinary/_codes/bsearch/since-cpp98",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/bsearch/since-cpp98",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/bsearch/since-cpp98.mdx",tags:[],version:"current",frontMatter:{}},i={},c=[],p={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\nvoid* bsearch( const void* key, const void* ptr, std::size_t count,\n               std::size_t size, cpp_compare_pred comp );\n\n// (2)\nvoid* bsearch( const void* key, const void* ptr, std::size_t count,\n               std::size_t size, c_compare_pred comp );\n")))}u.isMDXComponent=!0},47509:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>g,frontMatter:()=>u,metadata:()=>m,toc:()=>b});var a=n(87462),r=(n(67294),n(3905)),l=n(55059),o=n(22307),s=n(99801),i=n(18510),c=(n(99372),n(98088)),p=n(90411);const u={title:"bsearch algorithm",sidebar_label:"bsearch(  )",description:"bsearch algorithm C++ documentation",hide_title:!0,tags:["algorithm","bsearch","search","binary"],cppreference_origin_rel:"w/cpp/algorithm/bsearch"},d=void 0,m={unversionedId:"std/algo/ordinary/bsearch",id:"std/algo/ordinary/bsearch",title:"bsearch algorithm",description:"bsearch algorithm C++ documentation",source:"@site/content/docs/std/algo/ordinary/bsearch.mdx",sourceDirName:"std/algo/ordinary",slug:"/std/algo/ordinary/bsearch",permalink:"/CppLangNet/docs/std/algo/ordinary/bsearch",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/bsearch.mdx",tags:[{label:"algorithm",permalink:"/CppLangNet/docs/tags/algorithm"},{label:"bsearch",permalink:"/CppLangNet/docs/tags/bsearch"},{label:"search",permalink:"/CppLangNet/docs/tags/search"},{label:"binary",permalink:"/CppLangNet/docs/tags/binary"}],version:"current",frontMatter:{title:"bsearch algorithm",sidebar_label:"bsearch(  )",description:"bsearch algorithm C++ documentation",hide_title:!0,tags:["algorithm","bsearch","search","binary"],cppreference_origin_rel:"w/cpp/algorithm/bsearch"},sidebar:"defaultSidebar",previous:{title:"qsort(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/qsort"}},h={},b=[{value:"Parameters",id:"parameters",level:3},{value:"Return value",id:"return-value",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"Notes",id:"notes",level:3},{value:"Examples",id:"examples",level:3}],f={toc:b};function g(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"stdbsearch-algorithm"},"std::bsearch() algorithm"),(0,r.kt)(s.Z,{content:{"since-cpp98":(0,r.kt)(p.default,{mdxType:"Signature_SinceCpp98"})},mdxType:"SwitchView"}),(0,r.kt)("p",null,"With the exposition-only types defined as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'extern "C++" using cpp_compare_pred = int(const void*, const void*);\nextern "C" using c_compare_pred = int(const void*, const void*);\n')),(0,r.kt)("p",null,"Finds an element equal to element pointed to by ",(0,r.kt)("inlineCode",{parentName:"p"},"key")," in an array pointed to by ",(0,r.kt)("inlineCode",{parentName:"p"},"ptr"),"."),(0,r.kt)("p",null,"The array contains ",(0,r.kt)("inlineCode",{parentName:"p"},"count")," elements of ",(0,r.kt)("inlineCode",{parentName:"p"},"size")," bytes each and must be partitioned with respect to the object pointed to by ",(0,r.kt)("inlineCode",{parentName:"p"},"key"),",\nthat is, all the elements that compare less than must appear before all the elements that compare equal to, and those must appear before all the elements that compare greater than the key object."),(0,r.kt)("p",null,"A fully sorted array satisfies these requirements. The elements are compared using function pointed to by ",(0,r.kt)("inlineCode",{parentName:"p"},"comp"),"."),(0,r.kt)("admonition",{title:"Undefined Behaviour",type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)(i.Z,{title:(0,r.kt)(c.ZP,{mdxType:"Term_UndefinedBehaviour"}),mdxType:"Tooltip"},"behavior is undefined")," if the array is not already partitioned in ascending order with respect to ",(0,r.kt)("inlineCode",{parentName:"p"},"key"),", according to the same criterion that ",(0,r.kt)("inlineCode",{parentName:"p"},"comp")," uses.")),(0,r.kt)("p",null,"If the array contains several elements that ",(0,r.kt)("inlineCode",{parentName:"p"},"comp")," would indicate as equal to the element searched for, then it is unspecified which element the function will return as the result."),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)(l.ZP,{mdxType:"SymbolTable"},(0,r.kt)(l.mN,{none:!0,noLink:!0,name:(0,r.kt)("code",null,"key"),mdxType:"Symbol"},"Pointer to the element to search for."),(0,r.kt)(l.mN,{none:!0,noLink:!0,name:(0,r.kt)("code",null,"ptr"),mdxType:"Symbol"},"Pointer to the array to examine."),(0,r.kt)(l.mN,{none:!0,noLink:!0,name:(0,r.kt)("code",null,"count"),mdxType:"Symbol"},"The number of elements in the array."),(0,r.kt)(l.mN,{none:!0,noLink:!0,name:(0,r.kt)("code",null,"size"),mdxType:"Symbol"},"The size of each element of the array in bytes."),(0,r.kt)(l.mN,{none:!0,noLink:!0,name:(0,r.kt)("code",null,"comp"),mdxType:"Symbol"},(0,r.kt)("p",null,"Comparison function which returns:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"A negative")," integer value if the first argument is less than the second."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"A positive")," integer value if the first argument is greater than the second."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Zero")," if the arguments are equivalent.")),(0,r.kt)("p",null,"The signature of the comparison function should be equivalent to the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"int cmp(const void *a, const void *b);\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The function must not modify the objects passed to it"),(0,r.kt)("li",{parentName:"ul"},"Must return consistent results when called for the same objects, regardless of their positions in the array")))),(0,r.kt)("h3",{id:"return-value"},"Return value"),(0,r.kt)("p",null,"Pointer to the found element or null pointer if the element has not been found."),(0,r.kt)("h3",{id:"complexity"},"Complexity"),(0,r.kt)("p",null,"Not specified."),(0,r.kt)("h3",{id:"exceptions"},"Exceptions"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"(none)")),(0,r.kt)("h3",{id:"notes"},"Notes"),(0,r.kt)("p",null,"Despite the name, neither C nor POSIX standards require this function to be implemented using binary search or make any complexity guarantees."),(0,r.kt)("p",null,"The two overloads provided by the C++ standard library are distinct because the types of the parameter ",(0,r.kt)("inlineCode",{parentName:"p"},"comp")," are distinct (language linkage is part of its type)."),(0,r.kt)("h3",{id:"examples"},"Examples"),(0,r.kt)(o.Z,{columns:["8fr","4fr"],mdxType:"Columns"},(0,r.kt)("div",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='Main.cpp' showLineNumbers",title:"'Main.cpp'",showLineNumbers:!0},'#include <array>\n#include <cstdlib>\n#include <iostream>\n\ntemplate<typename T>\nint compare(const void *a, const void *b)\n{\n    const auto &arg1 = *(static_cast<const T*>(a));\n    const auto &arg2 = *(static_cast<const T*>(b));\n    const auto cmp = arg1 <=> arg2;\n    return cmp < 0 ? -1\n        :  cmp > 0 ? +1\n        :  0;\n}\n\nint main()\n{\n    std::array arr {1, 2, 3, 4, 5, 6, 7, 8};\n\n    for (const int key : {4, 8, 9})\n    {\n        const int* p = static_cast<int*>(\n            std::bsearch(&key,\n                arr.data(),\n                arr.size(),\n                sizeof(decltype(arr)::value_type),\n                compare<int>));\n\n        std::cout << "value " << key;\n        (p) ? std::cout << " found at position " << (p - arr.data()) << \'\\n\'\n            : std::cout << " not found\\n";\n    }\n}\n'))),(0,r.kt)("div",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Output"',title:'"Output"'},"value 4 found at position 3\nvalue 8 found at position 7\nvalue 9 not found\n")))))}g.isMDXComponent=!0}}]);