"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[88017],{98088:(e,t,n)=>{n.d(t,{ZP:()=>o});var r=n(87462),a=(n(67294),n(3905));const l={toc:[]};function o(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("b",null,"Undefined behaviour")," is a property of a program that's incorrect, but likely compiles. It is incorrect in a way, that the error is only invoked in certain conditions at runtime.",(0,a.kt)("p",null,"Common cases include: ",(0,a.kt)("strong",{parentName:"p"},"out of bounds access"),", ",(0,a.kt)("strong",{parentName:"p"},"reading uninitialized objects"),", ",(0,a.kt)("strong",{parentName:"p"},"dangling pointers/references")," or ",(0,a.kt)("strong",{parentName:"p"},"signed overflow"),"."))}o.isMDXComponent=!0},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(67294),a=n(86010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(l,o),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>_});var r=n(87462),a=n(67294),l=n(86010),o=n(12466),i=n(76775),s=n(91980),c=n(67392),d=n(50012);function u(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function p(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const r=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(l),(0,a.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(r.location.search);t.set(l,e),r.replace({...r.location,search:t.toString()})}),[l,r])]}function k(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,l=p(e),[o,i]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:l}))),[s,c]=f({queryString:n,groupId:r}),[u,k]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,l]=(0,d.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:r}),y=(()=>{const e=s??u;return m({value:e,tabValues:l})?e:null})();(0,a.useLayoutEffect)((()=>{y&&i(y)}),[y]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),k(e)}),[c,k,l]),tabValues:l}}var y=n(72389);const N="tabList__CuJ",g="tabItem_LNqP";function v(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:c}=e;const d=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.o5)(),p=e=>{const t=e.currentTarget,n=d.indexOf(t),r=c[n].value;r!==i&&(u(t),s(r))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=d.indexOf(e.currentTarget)+1;t=d[n]??d[0];break}case"ArrowLeft":{const n=d.indexOf(e.currentTarget)-1;t=d[n]??d[d.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:o}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>d.push(e),onKeyDown:m,onClick:p},o,{className:(0,l.Z)("tabs__item",g,o?.className,{"tabs__item--active":i===t})}),n??t)})))}function b(e){let{lazy:t,children:n,selectedValue:r}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function h(e){const t=k(e);return a.createElement("div",{className:(0,l.Z)("tabs-container",N)},a.createElement(v,(0,r.Z)({},e,t)),a.createElement(b,(0,r.Z)({},e,t)))}function _(e){const t=(0,y.Z)();return a.createElement(h,(0,r.Z)({key:String(t)},e))}},98839:(e,t,n)=>{n.d(t,{z:()=>r});const r=n(67294).createContext({name:"Unknown",folder:"unknown"})},22307:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(87462),a=n(67294);const l="columns_Terr";function o(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,a.createElement("div",(0,r.Z)({className:l,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}o.isMDXComponent=!0},99801:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(67294),a=n(74866),l=n(85162),o=n(99372),i=n(72412);const s={};function c(e){const t=e.content||{};return r.createElement(a.Z,null,Object.entries(t).map(((e,t)=>{let[n,c]=e;return c.value||c.simplified||c.detailed?r.createElement(l.Z,{value:n,label:o.gJ.get(n),default:c.default||0==t},c.simplified?r.createElement(r.Fragment,null,r.createElement(a.Z,{groupId:"view_mode",className:s.smallTabs},r.createElement(l.Z,{value:"simplified",label:"Simplified",default:!0},(0,i.Z)(c.simplified)),r.createElement(l.Z,{value:"detailed",label:"Detailed"},(0,i.Z)(c.detailed)))):c.value):r.createElement(l.Z,{value:n,label:o.gJ.get(n),default:0==t},(0,i.Z)(c))})))}},55059:(e,t,n)=>{n.d(t,{mN:()=>d,ZP:()=>c});var r=n(67294),a=n(72412);const l={symbolTable:"symbolTable_yosy",symbolName:"symbolName__gUy",symbolDesc:"symbolDesc_wDaQ",symbolProp:"symbolProp_oAcv",accessPublic:"accessPublic_LfqG",accessProtected:"accessProtected_bDL6",accessPrivate:"accessPrivate_Ab5O",modStatic:"modStatic_ZSC5",modConstexpr:"modConstexpr_iypt",modConst:"modConst_osuL",modVolatile:"modVolatile_ePYM",modVirtual:"modVirtual_jNz7"};var o=n(98839);const i={None:{Order:0,ShortName:"",FullName:"",Style:l.accessPublic},Public:{Order:1,ShortName:"pub",FullName:"public",Style:l.accessPublic},Protected:{Order:2,ShortName:"prot",FullName:"protected",Style:l.accessProtected},Private:{Order:3,ShortName:"priv",FullName:"private",Style:l.accessPrivate}},s=e=>e.none?i.None:e.pub||e.public?i.Public:e.prot||e.protected?i.Protected:e.priv||e.private?i.Private:i.Public;function c(e){return(t=>{if(0===t.length)return null;const n=t.sort(((e,t)=>s(e).Order<s(t).Order));return r.createElement("table",{"data-no-traits":`${e.noTraits||"false"}`,className:l.symbolTable},r.createElement("tbody",null,n))})(r.Children.toArray(e.children))}function d(e){r.useContext(o.z);let t=(0,a.Z)(e.name),n=null;e.desc?n=e.desc:e.children&&(n=e.children);const i=e.linkName||e.autoLink;!e.noLink&&i&&(t=r.createElement("a",{href:e.link||`${e.linkName||e.name}`},t));const c=(e,t,n)=>!0===e?r.createElement("span",{className:l[t]},n):null;return r.createElement("tr",null,!e.none&&r.createElement("td",{className:l.symbolProp},(e=>{const t=s(e);return r.createElement("span",{className:t.Style},t.ShortName)})(e),c(e.static,"modStatic","static"),c(e.constexpr,"modConstexpr","constexpr"),c(e.const,"modConst","const"),c(e.volatile,"modVolatile","volatile"),c(e.virtual,"modVirtual","virtual")),r.createElement("td",{className:l.symbolName},t),r.createElement("td",{className:l.symbolDesc},(0,a.Z)(n)))}d.isMDXComponent=!0,c.isMDXComponent=!0,c.Symbol=d},18510:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(67294),a=n(44996),l=n(34386),o=n(72412);const i="TooltipContent_Lvru",s="TooltipTitle_ukF2";function c(e){let{url:t,title:n,maxWidth:c,children:d}=e;let u=c||"clamp(250px, 25vw, 800px)";"string"==typeof u&&u.endsWith("vw")&&(u=`clamp(250px, ${u}, 800px)`);const p="function"==typeof n?r.createElement(n):n,m=(t||"").startsWith("/")?(0,a.Z)(t):t,f=t?r.createElement("a",{href:m,target:"_blank",rel:"noreferrer"},d):d;return r.createElement(l.Z,{componentsProps:{tooltip:{style:{maxWidth:u}}},title:r.createElement("span",{className:s},(0,o.Z)(p)),placement:"top",arrow:!0},r.createElement("span",{className:i},f))}c.isMDXComponent=!0},99372:(e,t,n)=>{n.d(t,{gJ:()=>d,eH:()=>f,U6:()=>p,OS:()=>m});var r=n(67294),a=n(95999);const l="markedText_c6kK",o="since_c1Q3",i="until_jXK6",s="removed_A_Kf",c="versionNumber_BiUX",d=new Map;function u(e){let{children:t,className:n}=e;return r.createElement("span",{className:l+(n?" "+n:"")},t)}function p(e){let{children:t,v:n}=e;return r.createElement(u,{className:o},t,"\xa0",r.createElement("span",{className:c},r.createElement("small",null,"(",d.get(`since-${n}`),")")))}function m(e){let{children:t,v:n}=e;return r.createElement(u,{className:i},t,"\xa0",r.createElement("span",{className:c},r.createElement("small",null,"(",d.get(`until-${n}`),")")))}function f(e){let{children:t,v:n}=e;return r.createElement(u,{className:s},t,"\xa0",r.createElement("span",{className:c},r.createElement("small",null,"(",d.get(`removed-${n}`),")")))}d.set("cpp98","C++98"),d.set("cpp03","C++03"),d.set("cpp11","C++11"),d.set("cpp14","C++14"),d.set("cpp17","C++17"),d.set("cpp20","C++20"),d.set("cpp23","C++23"),d.set("deprecated-",r.createElement(a.Z,null,"deprecated")),d.set("deprecated-cpp98",r.createElement(a.Z,null,"deprecated in C++98")),d.set("deprecated-cpp03",r.createElement(a.Z,null,"deprecated in C++03")),d.set("deprecated-cpp11",r.createElement(a.Z,null,"deprecated in C++11")),d.set("deprecated-cpp14",r.createElement(a.Z,null,"deprecated in C++14")),d.set("deprecated-cpp17",r.createElement(a.Z,null,"deprecated in C++17")),d.set("deprecated-cpp20",r.createElement(a.Z,null,"deprecated in C++20")),d.set("deprecated-cpp23",r.createElement(a.Z,null,"deprecated in C++23")),d.set("until-cpp98",r.createElement(a.Z,null,"until C++98")),d.set("until-cpp03",r.createElement(a.Z,null,"until C++03")),d.set("until-cpp11",r.createElement(a.Z,null,"until C++11")),d.set("until-cpp14",r.createElement(a.Z,null,"until C++14")),d.set("until-cpp17",r.createElement(a.Z,null,"until C++17")),d.set("until-cpp20",r.createElement(a.Z,null,"until C++20")),d.set("until-cpp23",r.createElement(a.Z,null,"until C++23")),d.set("since-cpp98",r.createElement(a.Z,null,"since C++98")),d.set("since-cpp03",r.createElement(a.Z,null,"since C++03")),d.set("since-cpp11",r.createElement(a.Z,null,"since C++11")),d.set("since-cpp14",r.createElement(a.Z,null,"since C++14")),d.set("since-cpp17",r.createElement(a.Z,null,"since C++17")),d.set("since-cpp20",r.createElement(a.Z,null,"since C++20")),d.set("since-cpp23",r.createElement(a.Z,null,"since C++23")),d.set("removed-",r.createElement(a.Z,null,"deleted")),d.set("removed-cpp98",r.createElement(a.Z,null,"removed in C++98")),d.set("removed-cpp03",r.createElement(a.Z,null,"removed in C++03")),d.set("removed-cpp11",r.createElement(a.Z,null,"removed in C++11")),d.set("removed-cpp14",r.createElement(a.Z,null,"removed in C++14")),d.set("removed-cpp17",r.createElement(a.Z,null,"removed in C++17")),d.set("removed-cpp20",r.createElement(a.Z,null,"removed in C++20")),d.set("removed-cpp23",r.createElement(a.Z,null,"removed in C++23"))},72412:(e,t,n)=>{function r(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>r})},62129:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const l={},o=void 0,i={unversionedId:"std/algo/ordinary/_codes/transform_reduce/since-cpp17",id:"std/algo/ordinary/_codes/transform_reduce/since-cpp17",title:"since-cpp17",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/transform_reduce/since-cpp17.mdx",sourceDirName:"std/algo/ordinary/_codes/transform_reduce",slug:"/std/algo/ordinary/_codes/transform_reduce/since-cpp17",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/transform_reduce/since-cpp17",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/transform_reduce/since-cpp17.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],d={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class InputIt1, class InputIt2, class T >\nT transform_reduce( InputIt1 first1, InputIt1 last1, InputIt2 first2, T init );\n\n// (2)\ntemplate< class InputIt1, class InputIt2, class T, class BinaryReductionOp, class BinaryTransformOp >\nT transform_reduce( InputIt1 first1, InputIt1 last1, InputIt2 first2, T init,\n                    BinaryReductionOp reduce, BinaryTransformOp transform );\n\n// (3)\ntemplate< class InputIt, class T, class BinaryReductionOp, class UnaryTransformOp >\nT transform_reduce( InputIt first, InputIt last, T init, BinaryReductionOp reduce, UnaryTransformOp transform );\n\n// (4)\ntemplate< class ExecutionPolicy, class ForwardIt1, class ForwardIt2, class T >\nT transform_reduce( ExecutionPolicy&& policy, ForwardIt1 first1, ForwardIt1 last1, ForwardIt2 first2, T init );\n\n// (5)\ntemplate< class ExecutionPolicy,\n          class ForwardIt1,\n          class ForwardIt2,\n          class T,\n          class BinaryReductionOp,\n          class BinaryTransformOp >\nT transform_reduce( ExecutionPolicy&& policy, ForwardIt1 first1, ForwardIt1 last1, ForwardIt2 first2, T init,\n                    BinaryReductionOp reduce, BinaryTransformOp transform );\n\n// (6)\ntemplate< class ExecutionPolicy, class ForwardIt, class T, class BinaryReductionOp, class UnaryTransformOp >\nT transform_reduce( ExecutionPolicy&& policy, ForwardIt first, ForwardIt last, T init,\n                    BinaryReductionOp reduce, UnaryTransformOp transform );\n")))}u.isMDXComponent=!0},16221:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const l={},o=void 0,i={unversionedId:"std/algo/ordinary/_codes/transform_reduce/since-cpp20",id:"std/algo/ordinary/_codes/transform_reduce/since-cpp20",title:"since-cpp20",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/transform_reduce/since-cpp20.mdx",sourceDirName:"std/algo/ordinary/_codes/transform_reduce",slug:"/std/algo/ordinary/_codes/transform_reduce/since-cpp20",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/transform_reduce/since-cpp20",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/transform_reduce/since-cpp20.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],d={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class InputIt1, class InputIt2, class T >\nconstexpr T transform_reduce( InputIt1 first1, InputIt1 last1, InputIt2 first2, T init );\n\n// (2)\ntemplate< class InputIt1, class InputIt2, class T, class BinaryReductionOp, class BinaryTransformOp >\nconstexpr T transform_reduce( InputIt1 first1, InputIt1 last1, InputIt2 first2, T init,\n                              BinaryReductionOp reduce, BinaryTransformOp transform );\n\n// (3)\ntemplate< class InputIt, class T, class BinaryReductionOp, class UnaryTransformOp >\nconstexpr T transform_reduce( InputIt first, InputIt last, T init, BinaryReductionOp reduce,\n                              UnaryTransformOp transform );\n\n// (4)\ntemplate< class ExecutionPolicy, class ForwardIt1, class ForwardIt2, class T >\nconstexpr T transform_reduce( ExecutionPolicy&& policy, ForwardIt1 first1, ForwardIt1 last1, ForwardIt2 first2,\n                              T init );\n\n// (5)\ntemplate< class ExecutionPolicy,\n          class ForwardIt1,\n          class ForwardIt2,\n          class T,\n          class BinaryReductionOp,\n          class BinaryTransformOp >\nT transform_reduce( ExecutionPolicy&& policy, ForwardIt1 first1, ForwardIt1 last1, ForwardIt2 first2, T init,\n                    BinaryReductionOp reduce, BinaryTransformOp transform );\n\n// (6)\ntemplate< class ExecutionPolicy, class ForwardIt, class T, class BinaryReductionOp, class UnaryTransformOp >\nT transform_reduce( ExecutionPolicy&& policy, ForwardIt first, ForwardIt last, T init,\n                    BinaryReductionOp reduce, UnaryTransformOp transform );\n")))}u.isMDXComponent=!0},37479:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>N,contentTitle:()=>k,default:()=>_,frontMatter:()=>f,metadata:()=>y,toc:()=>g});var r=n(87462),a=n(67294),l=n(3905),o=n(55059),i=n(22307),s=n(99801),c=n(18510),d=n(99372),u=n(98088),p=n(16221),m=n(62129);const f={title:"transform_reduce algorithm",sidebar_label:"transform_reduce(  )",description:"transform_reduce algorithm C++ documentation",hide_title:!0,tags:["algorithm","transform_reduce","transform","reduce","fold"],cppreference_origin_rel:"w/cpp/algorithm/transform_reduce"},k=void 0,y={unversionedId:"std/algo/ordinary/transform_reduce",id:"std/algo/ordinary/transform_reduce",title:"transform_reduce algorithm",description:"transform_reduce algorithm C++ documentation",source:"@site/content/docs/std/algo/ordinary/transform_reduce.mdx",sourceDirName:"std/algo/ordinary",slug:"/std/algo/ordinary/transform_reduce",permalink:"/CppLangNet/docs/std/algo/ordinary/transform_reduce",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/transform_reduce.mdx",tags:[{label:"algorithm",permalink:"/CppLangNet/docs/tags/algorithm"},{label:"transform_reduce",permalink:"/CppLangNet/docs/tags/transform-reduce"},{label:"transform",permalink:"/CppLangNet/docs/tags/transform"},{label:"reduce",permalink:"/CppLangNet/docs/tags/reduce"},{label:"fold",permalink:"/CppLangNet/docs/tags/fold"}],version:"current",frontMatter:{title:"transform_reduce algorithm",sidebar_label:"transform_reduce(  )",description:"transform_reduce algorithm C++ documentation",hide_title:!0,tags:["algorithm","transform_reduce","transform","reduce","fold"],cppreference_origin_rel:"w/cpp/algorithm/transform_reduce"},sidebar:"defaultSidebar",previous:{title:"inclusive_scan(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/inclusive_scan"},next:{title:"transform_exclusive_scan(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/transform_exclusive_scan"}},N={},g=[{value:"Parameters",id:"parameters",level:3},{value:"Type requirements",id:"type-requirements",level:4},{value:"Return value",id:"return-value",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"Notes",id:"notes",level:3},{value:"Examples",id:"examples",level:3}],v=(b="Term_ImplementationDefined",function(e){return console.warn("Component "+b+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",e)});var b;const h={toc:g};function _(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"stdtransform_reduce-algorithm"},"std::transform_reduce() algorithm"),(0,l.kt)(s.Z,{content:{"since-cpp20":(0,l.kt)(p.default,{mdxType:"Signature_SinceCpp20"}),"since-cpp17":(0,l.kt)(m.default,{mdxType:"Signature_SinceCpp17"})},mdxType:"SwitchView"}),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"(1)")," Equivalent to ",(0,l.kt)("inlineCode",{parentName:"li"},"std::transform_reduce(first1, last1, first2, init, std::plus<>(), std::multiplies<>())"),",\neffectively parallelized version of the default ",(0,l.kt)("a",{parentName:"li",href:"/docs/std/algo/ordinary/inner_product"},(0,l.kt)("inlineCode",{parentName:"a"},"std::inner_product")),".")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"(2)")," Applies transform to each pair of elements from the ranges [",(0,l.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,l.kt)("inlineCode",{parentName:"p"},"last"),") and the range starting at ",(0,l.kt)("inlineCode",{parentName:"p"},"first2"),"\nand reduces the results (possibly permuted and aggregated in unspecified manner) along with the initial value ",(0,l.kt)("inlineCode",{parentName:"p"},"init")," over reduce.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"(3)")," Applies transform to each element in the range [",(0,l.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,l.kt)("inlineCode",{parentName:"p"},"last"),") and reduces the results\n(possibly permuted and aggregated in unspecified manner) along with the initial value ",(0,l.kt)("inlineCode",{parentName:"p"},"init")," over reduce")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"(4 - 6)")," Same as ",(0,l.kt)("strong",{parentName:"p"},"(1 - 3)"),", but executed according to policy."),(0,l.kt)("admonition",{parentName:"li",title:"Overload Resolution",type:"important"},(0,l.kt)("p",{parentName:"admonition"},"These overloads participate in overload resolution only if"),(0,l.kt)(d.OS,{v:"cpp20",mdxType:"Until"}," ",(0,l.kt)("code",null,"std::is_execution_policy_v<std::decay_t<ExecutionPolicy>>")," is ",(0,l.kt)("code",null,"true"),". "),(0,l.kt)(d.U6,{v:"cpp20",mdxType:"Since"}," ",(0,l.kt)("code",null,"std::is_execution_policy_v<std::remove_cvref_t<ExecutionPolicy>>")," is ",(0,l.kt)("code",null,"true"),". ")))),(0,l.kt)("p",null,"The behavior is non-deterministic if ",(0,l.kt)("inlineCode",{parentName:"p"},"reduce")," is not associative or not commutative."),(0,l.kt)("admonition",{title:"Undefined Behaviour",type:"danger"},(0,l.kt)("p",{parentName:"admonition"},"The ",(0,l.kt)(c.Z,{title:(0,l.kt)(u.ZP,{mdxType:"Term_UndefinedBehaviour"}),mdxType:"Tooltip"},"behavior is undefined")," if ",(0,l.kt)("code",null,"reduce")," or ",(0,l.kt)("code",null,"transform")," modifies any element or invalidates any iterator in the input ranges,\nincluding their end iterators.")),(0,l.kt)("h3",{id:"parameters"},"Parameters"),(0,l.kt)(o.ZP,{mdxType:"SymbolTable"},(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)(a.Fragment,null," ",(0,l.kt)("code",null,"first")," ",(0,l.kt)("br",null)," ",(0,l.kt)("code",null,"last")," "),mdxType:"Symbol"},"The range of elements to apply the algorithm to."),(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"init"),mdxType:"Symbol"},"The initial value of the generalized sum."),(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"policy"),mdxType:"Symbol"},"The execution policy to use. See ",(0,l.kt)("a",{href:"#"},"execution policy")," for details."),(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"reduce"),mdxType:"Symbol"},"Binary ",(0,l.kt)("a",{href:"/docs/named_req/FunctionObject"},"FunctionObject")," that will be applied in unspecified order to the result of ",(0,l.kt)("code",null,"transform"),", the results of other ",(0,l.kt)("code",null,"reduce")," and ",(0,l.kt)("code",null,"init"),"."),(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"transform"),mdxType:"Symbol"},"Binary ",(0,l.kt)("a",{href:"/docs/named_req/FunctionObject"},"FunctionObject")," that will be applied to each element in the input range(s).")),(0,l.kt)("h4",{id:"type-requirements"},"Type requirements"),(0,l.kt)(o.ZP,{mdxType:"SymbolTable"},(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"InputIt"),mdxType:"Symbol"},(0,l.kt)("a",{href:"/docs/named_req/LegacyInputIterator"},"LegacyInputIterator")),(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"ForwardIt"),mdxType:"Symbol"},(0,l.kt)("a",{href:"/docs/named_req/LegacyForwardIterator"},"LegacyForwardIterator"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"(3, 6)"),":"),(0,l.kt)(o.ZP,{mdxType:"SymbolTable"},(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"T"),mdxType:"Symbol"},(0,l.kt)("a",{href:"/docs/named_req/MoveConstructible"},"MoveConstructible"))),(0,l.kt)("p",{parentName:"li"},"The following expressions have to be convertible to ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"reduce(init, transform(*first))")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"reduce(transform(*first), init)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"reduce(init, init)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"reduce(transform(*first), transform(*first))")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"(2, 5)"),":"),(0,l.kt)(o.ZP,{mdxType:"SymbolTable"},(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"T"),mdxType:"Symbol"},(0,l.kt)("a",{href:"/docs/named_req/MoveConstructible"},"MoveConstructible"))),(0,l.kt)("p",{parentName:"li"},"The following expressions have to be convertible to ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"reduce(init, transform(*first1, *first2))")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"reduce(transform(*first1, *first2), init)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"reduce(init, init)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"reduce(transform(*first1, *first2)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transform(*first1, *first2))"))))),(0,l.kt)("h3",{id:"return-value"},"Return value"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"(2)")," Generalized sum of ",(0,l.kt)("inlineCode",{parentName:"li"},"init")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"transform(*first, *first2)"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"transform(*(first + 1), *(first2 + 1))"),", ..., over ",(0,l.kt)("inlineCode",{parentName:"li"},"reduce"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"(3)")," Generalized sum of ",(0,l.kt)("inlineCode",{parentName:"li"},"init")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"transform(*first)"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"transform(*(first + 1))"),", ... ",(0,l.kt)("inlineCode",{parentName:"li"},"transform(*(last - 1))")," over ",(0,l.kt)("inlineCode",{parentName:"li"},"reduce"),".")),(0,l.kt)("p",null,"The results of ",(0,l.kt)("inlineCode",{parentName:"p"},"transform")," or of ",(0,l.kt)("inlineCode",{parentName:"p"},"reduce")," may be grouped and arranged in arbitrary order."),(0,l.kt)("p",null,"Formallly, the generalized sum ",(0,l.kt)("inlineCode",{parentName:"p"},"GSUM(op, a1, ..., aN)")," is defined as follows:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If ",(0,l.kt)("inlineCode",{parentName:"li"},"N = 1"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"a1")),(0,l.kt)("li",{parentName:"ul"},"If ",(0,l.kt)("inlineCode",{parentName:"li"},"N > 1"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"op(GSUM(op, b 1, ..., b K), GSUM(op, b M, ..., b N))")," where",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"b1"),", ..., ",(0,l.kt)("inlineCode",{parentName:"li"},"bN")," may be any permutation of ",(0,l.kt)("inlineCode",{parentName:"li"},"a1"),", ..., ",(0,l.kt)("inlineCode",{parentName:"li"},"aN")),(0,l.kt)("li",{parentName:"ul"},"and ",(0,l.kt)("inlineCode",{parentName:"li"},"1 < K + 1 = M \u2264 N"))))),(0,l.kt)("admonition",{type:"important"},(0,l.kt)("p",{parentName:"admonition"},"If ",(0,l.kt)("inlineCode",{parentName:"p"},"first == last")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"first1 == last1"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"init")," is returned, unmodified.")),(0,l.kt)("h3",{id:"complexity"},"Complexity"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"(1, 2, 4, 5)")," ",(0,l.kt)("strong",{parentName:"li"},"O(last1 - first1)")," applications each of reduce and transform."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"(3, 6)")," ",(0,l.kt)("strong",{parentName:"li"},"O(last - first)")," applications each of transform and reduce.")),(0,l.kt)("h3",{id:"exceptions"},"Exceptions"),(0,l.kt)("p",null,"The overloads with a template parameter named ",(0,l.kt)("inlineCode",{parentName:"p"},"ExecutionPolicy")," report errors as follows:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If execution of a function invoked as part of the algorithm throws an exception and ",(0,l.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy")," is one of the ",(0,l.kt)("a",{parentName:"li",href:"#"},(0,l.kt)("strong",{parentName:"a"},"standard policies")),", ",(0,l.kt)("a",{parentName:"li",href:"#"},(0,l.kt)("inlineCode",{parentName:"a"},"std::terminate"))," is called.\nFor any other ",(0,l.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy"),", the behavior is ",(0,l.kt)(c.Z,{title:(0,l.kt)(v,{mdxType:"Term_ImplementationDefined"}),mdxType:"Tooltip"},(0,l.kt)("strong",{parentName:"li"},"implementation-defined")),"."),(0,l.kt)("li",{parentName:"ul"},"If the algorithm fails to allocate memory, ",(0,l.kt)("inlineCode",{parentName:"li"},"std::bad_alloc")," is thrown.")),(0,l.kt)("h3",{id:"notes"},"Notes"),(0,l.kt)("p",null,"In the unary-binary overload ",(0,l.kt)("strong",{parentName:"p"},"(3, 6)"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"transform")," is not applied to ",(0,l.kt)("inlineCode",{parentName:"p"},"init"),"."),(0,l.kt)("h3",{id:"examples"},"Examples"),(0,l.kt)(i.Z,{columns:["8fr","4fr"],mdxType:"Columns"},(0,l.kt)("div",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='Main.cpp' showLineNumbers",title:"'Main.cpp'",showLineNumbers:!0},'#if PARALLEL\n#include <execution>\n#define PAR std::execution::par,\n#else\n#define PAR\n#endif\n\n#include <algorithm>\n#include <functional>\n#include <iostream>\n#include <iterator>\n#include <locale>\n#include <numeric>\n#include <vector>\n\n// to parallelize non-associate accumulative operation, you\'d better choose\n// transform_reduce instead of reduce; e.g., a + b * b != b + a * a\nvoid print_sum_squared(long const num)\n{\n    std::cout.imbue(std::locale{"en_US.UTF8"});\n    std::cout << "num = " << num << \'\\n\';\n\n    // create an immutable vector filled with pattern: 1,2,3,4, 1,2,3,4 ...\n    const std::vector<long> v { [n = num * 4] {\n        std::vector<long> v;\n        v.reserve(n);\n        std::generate_n(std::back_inserter(v), n,\n            [i = 0]() mutable { return 1 + i++ % 4; });\n        return v;\n    }()};\n\n    auto squared_sum = [](auto sum, auto val) { return sum + val * val; };\n\n    auto sum1 = std::accumulate(v.cbegin(), v.cend(), 0L, squared_sum);\n    std::cout << "accumulate(): " << sum1 << \'\\n\';\n\n    auto sum2 = std::reduce(PAR v.cbegin(), v.cend(), 0L, squared_sum);\n    std::cout << "reduce(): " << sum2 << \'\\n\';\n\n    auto sum3 = std::transform_reduce(PAR v.cbegin(), v.cend(), 0L, std::plus{},\n                                      [](auto val) { return val * val; });\n    std::cout << "transform_reduce(): " << sum3 << "\\n\\n";\n}\n\nint main()\n{\n    print_sum_squared(1);\n    print_sum_squared(1\'000);\n    print_sum_squared(1\'000\'000);\n}\n'))),(0,l.kt)("div",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Possible output"',title:'"Possible','output"':!0},"num = 1\naccumulate(): 30\nreduce(): 30\ntransform_reduce(): 30\n\nnum = 1,000\naccumulate(): 30,000\nreduce(): -7,025,681,278,312,630,348\ntransform_reduce(): 30,000\n\nnum = 1,000,000\naccumulate(): 30,000,000\nreduce(): -5,314,886,882,370,003,032\ntransform_reduce(): 30,000,000\n\n// Compile-options for parallel execution on POSIX:\n// g++ -O2 -std=c++17 -Wall -Wextra -pedantic -DPARALLEL ./example.cpp -ltbb -o tr; ./tr\n")))))}_.isMDXComponent=!0}}]);