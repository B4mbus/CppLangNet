"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[57103],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var i=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=i.createContext({}),c=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=c(e.components);return i.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(t),f=r,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||o;return t?i.createElement(m,a(a({ref:n},p),{},{components:t})):i.createElement(m,a({ref:n},p))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var c=2;c<o;c++)a[c]=t[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9495:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var i=t(87462),r=(t(67294),t(3905));const o={title:"Conditions \xbb Exercises",description:"Lesson: exercises for conditions in C++",tags:["condition","if","else","else-if","compound","bool","boolean","exercise"],hide_title:!0},a="Conditions \xbb Exercises",s={unversionedId:"course/basics/conditions/exercises",id:"course/basics/conditions/exercises",title:"Conditions \xbb Exercises",description:"Lesson: exercises for conditions in C++",source:"@site/content/learn/course/basics/conditions/exercises.mdx",sourceDirName:"course/basics/conditions",slug:"/course/basics/conditions/exercises",permalink:"/CppLangNet/learn/course/basics/conditions/exercises",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/learn/course/basics/conditions/exercises.mdx",tags:[{label:"condition",permalink:"/CppLangNet/learn/tags/condition"},{label:"if",permalink:"/CppLangNet/learn/tags/if"},{label:"else",permalink:"/CppLangNet/learn/tags/else"},{label:"else-if",permalink:"/CppLangNet/learn/tags/else-if"},{label:"compound",permalink:"/CppLangNet/learn/tags/compound"},{label:"bool",permalink:"/CppLangNet/learn/tags/bool"},{label:"boolean",permalink:"/CppLangNet/learn/tags/boolean"},{label:"exercise",permalink:"/CppLangNet/learn/tags/exercise"}],version:"current",frontMatter:{title:"Conditions \xbb Exercises",description:"Lesson: exercises for conditions in C++",tags:["condition","if","else","else-if","compound","bool","boolean","exercise"],hide_title:!0},sidebar:"defaultSidebar",previous:{title:"Conditions \xbb Common problems",permalink:"/CppLangNet/learn/course/basics/conditions/common-problems"},next:{title:"Introduction",permalink:"/CppLangNet/learn/course/basics/arrays/introduction"}},l={},c=[],p={toc:c};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"conditions--exercises"},"Conditions \xbb Exercises"),(0,r.kt)("p",null,"Suppose we want to sell pool tickets at different prices depending on age.\nHere are the criteria:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"children under 6: free"),(0,r.kt)("li",{parentName:"ul"},"persons aged 6 to 17 inclusive: $4"),(0,r.kt)("li",{parentName:"ul"},"adults up to 59 years of age inclusive: $8"),(0,r.kt)("li",{parentName:"ul"},"people from 60 years of age: $6")),(0,r.kt)("p",null,"We will use a ",(0,r.kt)("inlineCode",{parentName:"p"},"else if")," construct to check the following conditions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n\nint main()\n{\n    std::cout << "SWIMMING POOL - TICKETS\\n";\n    std::cout << "Please enter your year of birth: ";\n\n    int age;\n    std::cin >> age;\n\n    if (age < 6)\n        std::cout << "You can enter for free";\n    // highlight-next-line\n    else if (age <= 17)\n        std::cout << "Ticket price: $4";\n    // highlight-next-line\n    else if (age <= 59)\n        std::cout << "Ticket price: $8";\n    else\n        std::cout << "Ticket price: $6";\n}\n')),(0,r.kt)("p",null,"Meeting the condition in any one of ",(0,r.kt)("inlineCode",{parentName:"p"},"if"),"s (including ",(0,r.kt)("inlineCode",{parentName:"p"},"else if"),"s) interrupts a further checking\nof next ",(0,r.kt)("inlineCode",{parentName:"p"},"else if")," statements."),(0,r.kt)("admonition",{type:"important"},(0,r.kt)("p",{parentName:"admonition"},"Neither ",(0,r.kt)("inlineCode",{parentName:"p"},"else if"),", nor ",(0,r.kt)("inlineCode",{parentName:"p"},"else")," is even taken into account when one of the previous ",(0,r.kt)("inlineCode",{parentName:"p"},"if"),"s or ",(0,r.kt)("inlineCode",{parentName:"p"},"else if"),"s\ncondition in the chain was evaluated to ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),".")))}u.isMDXComponent=!0}}]);