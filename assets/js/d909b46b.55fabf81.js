"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[32978],{3905:(t,e,r)=>{r.d(e,{Zo:()=>l,kt:()=>f});var n=r(67294);function c(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function a(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){c(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function s(t,e){if(null==t)return{};var r,n,c=function(t,e){if(null==t)return{};var r,n,c={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(c[r]=t[r]);return c}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(c[r]=t[r])}return c}var i=n.createContext({}),p=function(t){var e=n.useContext(i),r=e;return t&&(r="function"==typeof t?t(e):a(a({},e),t)),r},l=function(t){var e=p(t.components);return n.createElement(i.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var r=t.components,c=t.mdxType,o=t.originalType,i=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),u=p(r),f=c,m=u["".concat(i,".").concat(f)]||u[f]||d[f]||o;return r?n.createElement(m,a(a({ref:e},l),{},{components:r})):n.createElement(m,a({ref:e},l))}));function f(t,e){var r=arguments,c=e&&e.mdxType;if("string"==typeof t||c){var o=r.length,a=new Array(o);a[0]=u;var s={};for(var i in e)hasOwnProperty.call(e,i)&&(s[i]=e[i]);s.originalType=t,s.mdxType="string"==typeof t?t:c,a[1]=s;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},54722:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=r(87462),c=(r(67294),r(3905));const o={},a=void 0,s={unversionedId:"std/algo/ordinary/_codes/set_symmetric_difference/since-cpp20",id:"std/algo/ordinary/_codes/set_symmetric_difference/since-cpp20",title:"since-cpp20",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/set_symmetric_difference/since-cpp20.mdx",sourceDirName:"std/algo/ordinary/_codes/set_symmetric_difference",slug:"/std/algo/ordinary/_codes/set_symmetric_difference/since-cpp20",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/set_symmetric_difference/since-cpp20",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/set_symmetric_difference/since-cpp20.mdx",tags:[],version:"current",frontMatter:{}},i={},p=[],l={toc:p};function d(t){let{components:e,...r}=t;return(0,c.kt)("wrapper",(0,n.Z)({},l,r,{components:e,mdxType:"MDXLayout"}),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class InputIt1, class InputIt2, class OutputIt >\nconstexpr OutputIt set_symmetric_difference( InputIt1 first1, InputIt1 last1,\n                                             InputIt2 first2, InputIt2 last2,\n                                             OutputIt d_first );\n\n// (2)\ntemplate< class InputIt1, class InputIt2, class OutputIt, class Compare >\nconstexpr OutputIt set_symmetric_difference( InputIt1 first1, InputIt1 last1,\n                                             InputIt2 first2, InputIt2 last2,\n                                             OutputIt d_first, Compare comp );\n\n// (3)\ntemplate< class ExecutionPolicy, class ForwardIt1,\n          class ForwardIt2, class ForwardIt3 >\nForwardIt3 set_symmetric_difference( ExecutionPolicy&& policy,\n                                     ForwardIt1 first1, ForwardIt1 last1,\n                                     ForwardIt2 first2, ForwardIt2 last2,\n                                     ForwardIt3 d_first );\n\n// (4)\ntemplate< class ExecutionPolicy, class ForwardIt1,\n          class ForwardIt2, class ForwardIt3, class Compare >\nForwardIt3 set_symmetric_difference( ExecutionPolicy&& policy,\n                                     ForwardIt1 first1, ForwardIt1 last1,\n                                     ForwardIt2 first2, ForwardIt2 last2,\n                                     ForwardIt3 d_first, Compare comp );\n")))}d.isMDXComponent=!0}}]);