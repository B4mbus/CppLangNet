"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[46156],{78318:(e,t,a)=>{a.d(t,{ZP:()=>s});var n=a(87462),r=(a(67294),a(3905));const i={toc:[]};function s(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},i,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <string>\n\nint main()\n{\n    std::string playerName1;\n    std::string playerName2;\n    std::string playerName3;\n\n    std::cout << "Please enter the name of player 1: ";\n    std::cin >> playerName1;\n\n    std::cout << "Please enter the name of player 2: ";\n    std::cin >> playerName2;\n\n    std::cout << "Please enter the name of player 3: ";\n    std::cin >> playerName3;\n}\n')))}s.isMDXComponent=!0},41115:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var n=a(87462),r=a(67294),i=a(3905),s=a(11687),o=(a(18510),a(56693),a(42677),a(78318));const l={sidebar_position:1,title:"Introduction",description:"Lesson: introduction to arrays in C++",hide_title:!0,pagination_next:"course/basics/arrays/dynamic-arrays"},d=void 0,c={unversionedId:"course/basics/arrays/introduction",id:"course/basics/arrays/introduction",title:"Introduction",description:"Lesson: introduction to arrays in C++",source:"@site/content/learn/course/basics/arrays/introduction.mdx",sourceDirName:"course/basics/arrays",slug:"/course/basics/arrays/introduction",permalink:"/CppLangNet/learn/course/basics/arrays/introduction",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/learn/course/basics/arrays/introduction.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Introduction",description:"Lesson: introduction to arrays in C++",hide_title:!0,pagination_next:"course/basics/arrays/dynamic-arrays"},sidebar:"defaultSidebar",previous:{title:"Conditions \xbb Exercises",permalink:"/CppLangNet/learn/course/basics/conditions/exercises"},next:{title:"2. Dynamic arrays",permalink:"/CppLangNet/learn/course/basics/arrays/dynamic-arrays"}},m={},p=[{value:"Motivation",id:"motivation",level:2},{value:"What is an array?",id:"what-is-an-array",level:2},{value:"Arrays in C++",id:"arrays-in-c",level:2},{value:"Fixed-size vs dynamic arrays",id:"fixed-size-vs-dynamic-arrays",level:3},{value:"Common operations",id:"common-operations",level:3}],u={toc:p};function h(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"When writing programs, you will often come across situations where you need to work with multiple variables that are of the same type.\nThat is where arrays come in. In this lesson, we will explore the use of arrays and how they can simplify your code."),(0,i.kt)("p",null,"We will first cover the easiest way, using the ",(0,i.kt)("a",{parentName:"p",href:"/docs/std/containers/arrays/vector/"},(0,i.kt)("inlineCode",{parentName:"a"},"std::vector"))," container."),(0,i.kt)("h2",{id:"motivation"},"Motivation"),(0,i.kt)("p",null,"Let's assume that we want to store the nicknames of players who are on a game server.\nEach name is essentially a text, so we will store it inside a variable\nof type ",(0,i.kt)("a",{parentName:"p",href:"/docs/std/containers/strings/string/"},(0,i.kt)("inlineCode",{parentName:"a"},"std::string")),"."),(0,i.kt)(r.Fragment,null,(0,i.kt)(o.ZP,{mdxType:"Code_Motivation"})),(0,i.kt)("p",null,"This code is only capable of handling exactly three players. In a situation where we have 5 players wanting to play,\nwe will have to write the same lines of code a couple of times more. Doing this will quickly become tiring and is generally a bad idea.\nInstead, we will introduce an array."),(0,i.kt)("h2",{id:"what-is-an-array"},"What is an array?"),(0,i.kt)(s.Z,{center:!0,border:!0,maxheight:"300px",src:"/img/tutorials/course/basic/arrays/car-brand-names-en.png",alt:"An array containing car brand names",mdxType:"Image"}),(0,i.kt)("br",null),(0,i.kt)("p",null,"An array is a container that can store some number of elements of a certain type.\nLook at the picture above. Inside the array we put names of vehicle brands.\nNote that each element has its own unique ",(0,i.kt)("strong",{parentName:"p"},"index"),"."),(0,i.kt)("admonition",{title:"Array indices",type:"important"},(0,i.kt)("p",{parentName:"admonition"},"Elements of an array are indexed from zero upwards.\nThe first element has an index ",(0,i.kt)("inlineCode",{parentName:"p"},"0"),", the second is at ",(0,i.kt)("inlineCode",{parentName:"p"},"1"),", third at ",(0,i.kt)("inlineCode",{parentName:"p"},"2")," and so on.")),(0,i.kt)("p",null,"Indices are necessary to distinguish array elements.\nUsing them, we can specify which element we want to access."),(0,i.kt)("h2",{id:"arrays-in-c"},"Arrays in C++"),(0,i.kt)("p",null,"There are a few ways to create an array in C++:"),(0,i.kt)("p",null,"Safe \u2705:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a dynamic array using ",(0,i.kt)("a",{parentName:"li",href:"/docs/std/containers/arrays/vector/"},(0,i.kt)("inlineCode",{parentName:"a"},"std::vector<T>"))),(0,i.kt)("li",{parentName:"ul"},"a fixed-size array using ",(0,i.kt)("a",{parentName:"li",href:"/docs/std/containers/arrays/array/"},(0,i.kt)("inlineCode",{parentName:"a"},"std::array<T, Num>")))),(0,i.kt)("p",null,"Unsafe \u274c:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a dynamic C-style array (e.g ",(0,i.kt)("inlineCode",{parentName:"li"},"int* array = new int[5]"),")"),(0,i.kt)("li",{parentName:"ul"},"a fixed-size C-style array (e.g ",(0,i.kt)("inlineCode",{parentName:"li"},"int array[5]"),")")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Unsafe and non-standard \u274c"),(0,i.kt)("div",null,(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a variable-length C-style array (e.g ",(0,i.kt)("inlineCode",{parentName:"li"},"int array[UserInput]"),")")))),(0,i.kt)("p",null,"We will focus on the first option, because it is safe and easy to use. We'll also briefly mention the second option, but\nyou'll find a more detailed explanation later in the course. Then we will talk briefly about the C-style arrays,\nwhich are not recommended to use."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Were you told to use C-style arrays?"),(0,i.kt)("div",null,(0,i.kt)("p",null,"C-style arrays are unfortunately still often taught in schools and universities. There are a few reasons for that, which\nwe won't discuss here. C++ is a language that is constantly evolving, and the C-style arrays were replaced\nby the safer alternatives mentioned above."),(0,i.kt)("p",null,"With that said, I should mention that a C-style array is not a bad thing in general. A programmer that is fully aware of\nissues that can occur when using them, and is able to avoid them, can use them safely. However, this is not the case\nfor beginners. There are ",(0,i.kt)("strong",{parentName:"p"},"a lot")," of problems you can encounter when using them, and it is very easy to make a mistake.\nKeep in mind that ",(0,i.kt)("inlineCode",{parentName:"p"},"std::vector")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"std::array")," cover 100% of use cases of C-style arrays, meaning that\nthere is no situation where not using C-style array would stand in your way."))),(0,i.kt)("h3",{id:"fixed-size-vs-dynamic-arrays"},"Fixed-size vs dynamic arrays"),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"fixed-size array")," has a constant number of elements, which has to be known at compile time.\nThis means that we cannot read the number of elements needed from a user and then create the array of exactly that size.\nWe have to specify it directly in the code. The ",(0,i.kt)("a",{parentName:"p",href:"/docs/std/containers/arrays/array/"},(0,i.kt)("inlineCode",{parentName:"a"},"std::array"))," is used for this purpose."),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"dynamic array")," on the other hand can grow and shrink as needed. In C++ we use ",(0,i.kt)("a",{parentName:"p",href:"/docs/std/containers/arrays/vector/"},(0,i.kt)("inlineCode",{parentName:"a"},"std::vector")),"\nfor this purpose."),(0,i.kt)("p",null,"The limitations of fixed-size arrays we mentioned above make it harder to use than dynamic arrays.\nBecause of that, we will focus on the ",(0,i.kt)("inlineCode",{parentName:"p"},"vector")," in the following lessons."),(0,i.kt)("h3",{id:"common-operations"},"Common operations"),(0,i.kt)("p",null,"There are a lot of things you can do with an array. We'll go through the most common operations that will cover most of your needs:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"creating an array"),(0,i.kt)("li",{parentName:"ol"},"accessing elements"),(0,i.kt)("li",{parentName:"ol"},"adding elements"),(0,i.kt)("li",{parentName:"ol"},"reading the number of elements"),(0,i.kt)("li",{parentName:"ol"},"removing elements"),(0,i.kt)("li",{parentName:"ol"},"displaying its contents")),(0,i.kt)("p",null,"Later in the course you'll learn how to run built-in algorithms such as sorting, searching, transforming and so on."))}h.isMDXComponent=!0},42677:(e,t,a)=>{a.d(t,{ZP:()=>s});var n=a(87462),r=(a(67294),a(3905));const i={toc:[]};function s(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},i,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"important"},(0,r.kt)("p",{parentName:"admonition"},"This section requires improvement. You can help by editing this doc page.")))}s.isMDXComponent=!0},56693:(e,t,a)=>{a.d(t,{ZP:()=>s});var n=a(87462),r=(a(67294),a(3905));const i={toc:[]};function s(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},i,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Note, this article is not finished! You can help by editing this doc page.")))}s.isMDXComponent=!0},11687:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(87462),r=a(67294),i=a(44996),s=a(72412);function o(e){let t=null;if(e.desc){const a=e.center?{textAlign:"center",display:"block"}:{};t=r.createElement("small",{style:a},(0,s.Z)(e.desc))}const a=e.fullwidth||e.center,o={border:e.border?"1px solid gray":void 0,display:a?"block":"inline-block"},l=e.style||{};l.borderRadius=e.borderRadius||void 0,l.minWidth=e.minwidth||void 0,l.width=e.width||void 0,l.maxWidth=e.maxwidth||void 0,l.minHeight=e.minheight||void 0,l.height=e.height||void 0,l.maxHeight=e.maxheight||void 0,l.display="block",l.imageRendering="-webkit-optimize-contrast",e.center&&(l.margin="0 auto");const d={...e};return"string"==typeof e.src&&(d.src=e.src.startsWith("/img/")?(0,i.Z)(e.src):e.src),delete d.border,delete d.borderRadius,delete d.center,delete d.fullwidth,delete d.style,delete d.minwidth,delete d.width,delete d.maxwidth,delete d.minheight,delete d.height,delete d.maxheight,delete d.desc,r.createElement(r.Fragment,null,r.createElement("div",{style:o},r.createElement("img",(0,n.Z)({},d,{style:l}))),t)}o.isMDXComponent=!0},18510:(e,t,a)=>{a.d(t,{Z:()=>d});var n=a(67294),r=a(44996),i=a(34386),s=a(72412);const o="TooltipContent_Lvru",l="TooltipTitle_ukF2";function d(e){let{url:t,title:a,maxWidth:d,children:c}=e;let m=d||"clamp(250px, 25vw, 800px)";"string"==typeof m&&m.endsWith("vw")&&(m=`clamp(250px, ${m}, 800px)`);const p="function"==typeof a?n.createElement(a):a,u=(t||"").startsWith("/")?(0,r.Z)(t):t,h=t?n.createElement("a",{href:u,target:"_blank",rel:"noreferrer"},c):c;return n.createElement(i.Z,{componentsProps:{tooltip:{style:{maxWidth:m}}},title:n.createElement("span",{className:l},(0,s.Z)(p)),placement:"top",arrow:!0},n.createElement("span",{className:o},h))}d.isMDXComponent=!0},72412:(e,t,a)=>{function n(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}a.d(t,{Z:()=>n})}}]);