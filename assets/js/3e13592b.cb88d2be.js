"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[2023],{14064:(e,t,n)=>{n.d(t,{ZP:()=>r});var a=n(87462),l=(n(67294),n(3905));const o={toc:[]};function r(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Aspects and semantics that are ",(0,l.kt)("strong",{parentName:"p"},"implementation-defined")," are not guaranteed by\nthe standard in any way, rather they are left out to the implementation (compiler vendor standard library, most of the times).\nFor example, most mathematical functions incur some ",(0,l.kt)("strong",{parentName:"p"},"implementation-defined")," behaviour."))}r.isMDXComponent=!0},85162:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(67294),l=n(86010);const o="tabItem_Ymn6";function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(o,r),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>_});var a=n(87462),l=n(67294),o=n(86010),r=n(12466),i=n(76775),s=n(91980),c=n(67392),p=n(50012);function m(e){return function(e){return l.Children.map(e,(e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:l}}=e;return{value:t,label:n,attributes:a,default:l}}))}function d(e){const{values:t,children:n}=e;return(0,l.useMemo)((()=>{const e=t??m(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function u(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(o),(0,l.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function k(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=d(e),[r,i]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!u({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[s,c]=h({queryString:n,groupId:a}),[m,k]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,p.Nk)(n);return[a,(0,l.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),g=(()=>{const e=s??m;return u({value:e,tabValues:o})?e:null})();(0,l.useLayoutEffect)((()=>{g&&i(g)}),[g]);return{selectedValue:r,selectValue:(0,l.useCallback)((e=>{if(!u({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),k(e)}),[c,k,o]),tabValues:o}}var g=n(72389);const f="tabList__CuJ",y="tabItem_LNqP";function v(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:c}=e;const p=[],{blockElementScrollPositionUntilNextRender:m}=(0,r.o5)(),d=e=>{const t=e.currentTarget,n=p.indexOf(t),a=c[n].value;a!==i&&(m(t),s(a))},u=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:r}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>p.push(e),onKeyDown:u,onClick:d},r,{className:(0,o.Z)("tabs__item",y,r?.className,{"tabs__item--active":i===t})}),n??t)})))}function N(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function b(e){const t=k(e);return l.createElement("div",{className:(0,o.Z)("tabs-container",f)},l.createElement(v,(0,a.Z)({},e,t)),l.createElement(N,(0,a.Z)({},e,t)))}function _(e){const t=(0,g.Z)();return l.createElement(b,(0,a.Z)({key:String(t)},e))}},98839:(e,t,n)=>{n.d(t,{z:()=>a});const a=n(67294).createContext({name:"Unknown",folder:"unknown"})},22307:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(87462),l=n(67294);const o="columns_Terr";function r(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,l.createElement("div",(0,a.Z)({className:o,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}r.isMDXComponent=!0},99801:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),l=n(74866),o=n(85162),r=n(99372),i=n(72412);const s={};function c(e){const t=e.content||{};return a.createElement(l.Z,null,Object.entries(t).map(((e,t)=>{let[n,c]=e;return c.value||c.simplified||c.detailed?a.createElement(o.Z,{value:n,label:r.gJ.get(n),default:c.default||0==t},c.simplified?a.createElement(a.Fragment,null,a.createElement(l.Z,{groupId:"view_mode",className:s.smallTabs},a.createElement(o.Z,{value:"simplified",label:"Simplified",default:!0},(0,i.Z)(c.simplified)),a.createElement(o.Z,{value:"detailed",label:"Detailed"},(0,i.Z)(c.detailed)))):c.value):a.createElement(o.Z,{value:n,label:r.gJ.get(n),default:0==t},(0,i.Z)(c))})))}},55059:(e,t,n)=>{n.d(t,{mN:()=>p,ZP:()=>c});var a=n(67294),l=n(72412);const o={symbolTable:"symbolTable_yosy",symbolName:"symbolName__gUy",symbolDesc:"symbolDesc_wDaQ",symbolProp:"symbolProp_oAcv",accessPublic:"accessPublic_LfqG",accessProtected:"accessProtected_bDL6",accessPrivate:"accessPrivate_Ab5O",modStatic:"modStatic_ZSC5",modConstexpr:"modConstexpr_iypt",modConst:"modConst_osuL",modVolatile:"modVolatile_ePYM",modVirtual:"modVirtual_jNz7"};var r=n(98839);const i={None:{Order:0,ShortName:"",FullName:"",Style:o.accessPublic},Public:{Order:1,ShortName:"pub",FullName:"public",Style:o.accessPublic},Protected:{Order:2,ShortName:"prot",FullName:"protected",Style:o.accessProtected},Private:{Order:3,ShortName:"priv",FullName:"private",Style:o.accessPrivate}},s=e=>e.none?i.None:e.pub||e.public?i.Public:e.prot||e.protected?i.Protected:e.priv||e.private?i.Private:i.Public;function c(e){return(t=>{if(0===t.length)return null;const n=t.sort(((e,t)=>s(e).Order<s(t).Order));return a.createElement("table",{"data-no-traits":`${e.noTraits||"false"}`,className:o.symbolTable},a.createElement("tbody",null,n))})(a.Children.toArray(e.children))}function p(e){a.useContext(r.z);let t=(0,l.Z)(e.name),n=null;e.desc?n=e.desc:e.children&&(n=e.children);const i=e.linkName||e.autoLink;!e.noLink&&i&&(t=a.createElement("a",{href:e.link||`${e.linkName||e.name}`},t));const c=(e,t,n)=>!0===e?a.createElement("span",{className:o[t]},n):null;return a.createElement("tr",null,!e.none&&a.createElement("td",{className:o.symbolProp},(e=>{const t=s(e);return a.createElement("span",{className:t.Style},t.ShortName)})(e),c(e.static,"modStatic","static"),c(e.constexpr,"modConstexpr","constexpr"),c(e.const,"modConst","const"),c(e.volatile,"modVolatile","volatile"),c(e.virtual,"modVirtual","virtual")),a.createElement("td",{className:o.symbolName},t),a.createElement("td",{className:o.symbolDesc},(0,l.Z)(n)))}p.isMDXComponent=!0,c.isMDXComponent=!0,c.Symbol=p},18510:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),l=n(44996),o=n(34386),r=n(72412);const i="TooltipContent_Lvru",s="TooltipTitle_ukF2";function c(e){let{url:t,title:n,maxWidth:c,children:p}=e;let m=c||"clamp(250px, 25vw, 800px)";"string"==typeof m&&m.endsWith("vw")&&(m=`clamp(250px, ${m}, 800px)`);const d="function"==typeof n?a.createElement(n):n,u=(t||"").startsWith("/")?(0,l.Z)(t):t,h=t?a.createElement("a",{href:u,target:"_blank",rel:"noreferrer"},p):p;return a.createElement(o.Z,{componentsProps:{tooltip:{style:{maxWidth:m}}},title:a.createElement("span",{className:s},(0,r.Z)(d)),placement:"top",arrow:!0},a.createElement("span",{className:i},h))}c.isMDXComponent=!0},99372:(e,t,n)=>{n.d(t,{gJ:()=>p,eH:()=>h,U6:()=>d,OS:()=>u});var a=n(67294),l=n(95999);const o="markedText_c6kK",r="since_c1Q3",i="until_jXK6",s="removed_A_Kf",c="versionNumber_BiUX",p=new Map;function m(e){let{children:t,className:n}=e;return a.createElement("span",{className:o+(n?" "+n:"")},t)}function d(e){let{children:t,v:n}=e;return a.createElement(m,{className:r},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",p.get(`since-${n}`),")")))}function u(e){let{children:t,v:n}=e;return a.createElement(m,{className:i},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",p.get(`until-${n}`),")")))}function h(e){let{children:t,v:n}=e;return a.createElement(m,{className:s},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",p.get(`removed-${n}`),")")))}p.set("cpp98","C++98"),p.set("cpp03","C++03"),p.set("cpp11","C++11"),p.set("cpp14","C++14"),p.set("cpp17","C++17"),p.set("cpp20","C++20"),p.set("cpp23","C++23"),p.set("deprecated-",a.createElement(l.Z,null,"deprecated")),p.set("deprecated-cpp98",a.createElement(l.Z,null,"deprecated in C++98")),p.set("deprecated-cpp03",a.createElement(l.Z,null,"deprecated in C++03")),p.set("deprecated-cpp11",a.createElement(l.Z,null,"deprecated in C++11")),p.set("deprecated-cpp14",a.createElement(l.Z,null,"deprecated in C++14")),p.set("deprecated-cpp17",a.createElement(l.Z,null,"deprecated in C++17")),p.set("deprecated-cpp20",a.createElement(l.Z,null,"deprecated in C++20")),p.set("deprecated-cpp23",a.createElement(l.Z,null,"deprecated in C++23")),p.set("until-cpp98",a.createElement(l.Z,null,"until C++98")),p.set("until-cpp03",a.createElement(l.Z,null,"until C++03")),p.set("until-cpp11",a.createElement(l.Z,null,"until C++11")),p.set("until-cpp14",a.createElement(l.Z,null,"until C++14")),p.set("until-cpp17",a.createElement(l.Z,null,"until C++17")),p.set("until-cpp20",a.createElement(l.Z,null,"until C++20")),p.set("until-cpp23",a.createElement(l.Z,null,"until C++23")),p.set("since-cpp98",a.createElement(l.Z,null,"since C++98")),p.set("since-cpp03",a.createElement(l.Z,null,"since C++03")),p.set("since-cpp11",a.createElement(l.Z,null,"since C++11")),p.set("since-cpp14",a.createElement(l.Z,null,"since C++14")),p.set("since-cpp17",a.createElement(l.Z,null,"since C++17")),p.set("since-cpp20",a.createElement(l.Z,null,"since C++20")),p.set("since-cpp23",a.createElement(l.Z,null,"since C++23")),p.set("removed-",a.createElement(l.Z,null,"deleted")),p.set("removed-cpp98",a.createElement(l.Z,null,"removed in C++98")),p.set("removed-cpp03",a.createElement(l.Z,null,"removed in C++03")),p.set("removed-cpp11",a.createElement(l.Z,null,"removed in C++11")),p.set("removed-cpp14",a.createElement(l.Z,null,"removed in C++14")),p.set("removed-cpp17",a.createElement(l.Z,null,"removed in C++17")),p.set("removed-cpp20",a.createElement(l.Z,null,"removed in C++20")),p.set("removed-cpp23",a.createElement(l.Z,null,"removed in C++23"))},72412:(e,t,n)=>{function a(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>a})},56031:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(87462),l=(n(67294),n(3905));const o={},r=void 0,i={unversionedId:"std/algo/ordinary/_codes/nth_element/since-cpp17",id:"std/algo/ordinary/_codes/nth_element/since-cpp17",title:"since-cpp17",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/nth_element/since-cpp17.mdx",sourceDirName:"std/algo/ordinary/_codes/nth_element",slug:"/std/algo/ordinary/_codes/nth_element/since-cpp17",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/nth_element/since-cpp17",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/nth_element/since-cpp17.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],p={toc:c};function m(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class RandomIt >\nvoid nth_element( RandomIt first, RandomIt nth, RandomIt last );\n\n// (2)\ntemplate< class RandomIt, class Compare >\nvoid nth_element( RandomIt first, RandomIt nth, RandomIt last, Compare comp );\n\n// (3)\ntemplate< class ExecutionPolicy, class RandomIt >\nvoid nth_element( ExecutionPolicy&& policy, RandomIt first, RandomIt nth, RandomIt last );\n\n// (4)\ntemplate< class ExecutionPolicy, class RandomIt, class Compare >\nvoid nth_element( ExecutionPolicy&& policy, RandomIt first, RandomIt nth, RandomIt last, Compare comp );\n")))}m.isMDXComponent=!0},2713:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(87462),l=(n(67294),n(3905));const o={},r=void 0,i={unversionedId:"std/algo/ordinary/_codes/nth_element/since-cpp20",id:"std/algo/ordinary/_codes/nth_element/since-cpp20",title:"since-cpp20",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/nth_element/since-cpp20.mdx",sourceDirName:"std/algo/ordinary/_codes/nth_element",slug:"/std/algo/ordinary/_codes/nth_element/since-cpp20",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/nth_element/since-cpp20",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/nth_element/since-cpp20.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],p={toc:c};function m(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class RandomIt >\nconstexpr void nth_element( RandomIt first, RandomIt nth, RandomIt last );\n\n// (2)\ntemplate< class RandomIt, class Compare >\nconstexpr void nth_element( RandomIt first, RandomIt nth, RandomIt last, Compare comp );\n\n// (3)\ntemplate< class ExecutionPolicy, class RandomIt >\nvoid nth_element( ExecutionPolicy&& policy, RandomIt first, RandomIt nth, RandomIt last );\n\n// (4)\ntemplate< class ExecutionPolicy, class RandomIt, class Compare >\nvoid nth_element( ExecutionPolicy&& policy, RandomIt first, RandomIt nth, RandomIt last, Compare comp );\n")))}m.isMDXComponent=!0},79646:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(87462),l=(n(67294),n(3905));const o={},r=void 0,i={unversionedId:"std/algo/ordinary/_codes/nth_element/until-cpp17",id:"std/algo/ordinary/_codes/nth_element/until-cpp17",title:"until-cpp17",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/nth_element/until-cpp17.mdx",sourceDirName:"std/algo/ordinary/_codes/nth_element",slug:"/std/algo/ordinary/_codes/nth_element/until-cpp17",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/nth_element/until-cpp17",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/nth_element/until-cpp17.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],p={toc:c};function m(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class RandomIt >\nvoid nth_element( RandomIt first, RandomIt nth, RandomIt last );\n\n// (2)\ntemplate< class RandomIt, class Compare >\nvoid nth_element( RandomIt first, RandomIt nth, RandomIt last, Compare comp );\n")))}m.isMDXComponent=!0},10110:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>y,contentTitle:()=>g,default:()=>b,frontMatter:()=>k,metadata:()=>f,toc:()=>v});var a=n(87462),l=n(67294),o=n(3905),r=n(55059),i=n(22307),s=n(99801),c=n(18510),p=n(99372),m=n(14064),d=n(79646),u=n(56031),h=n(2713);const k={title:"nth_element algorithm",sidebar_label:"nth_element(  )",description:"nth_element algorithm C++ documentation",hide_title:!0,tags:["algorithm","nth_element","partial_sort","sort"],cppreference_origin_rel:"w/cpp/algorithm/nth_element"},g=void 0,f={unversionedId:"std/algo/ordinary/nth_element",id:"std/algo/ordinary/nth_element",title:"nth_element algorithm",description:"nth_element algorithm C++ documentation",source:"@site/content/docs/std/algo/ordinary/nth_element.mdx",sourceDirName:"std/algo/ordinary",slug:"/std/algo/ordinary/nth_element",permalink:"/CppLangNet/docs/std/algo/ordinary/nth_element",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/nth_element.mdx",tags:[{label:"algorithm",permalink:"/CppLangNet/docs/tags/algorithm"},{label:"nth_element",permalink:"/CppLangNet/docs/tags/nth-element"},{label:"partial_sort",permalink:"/CppLangNet/docs/tags/partial-sort"},{label:"sort",permalink:"/CppLangNet/docs/tags/sort"}],version:"current",frontMatter:{title:"nth_element algorithm",sidebar_label:"nth_element(  )",description:"nth_element algorithm C++ documentation",hide_title:!0,tags:["algorithm","nth_element","partial_sort","sort"],cppreference_origin_rel:"w/cpp/algorithm/nth_element"},sidebar:"defaultSidebar",previous:{title:"partial_sort(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/partial_sort_copy"},next:{title:"is_sorted(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/is_sorted"}},y={},v=[{value:"Parameters",id:"parameters",level:3},{value:"Type requirements",id:"type-requirements",level:4},{value:"Return value",id:"return-value",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"Notes",id:"notes",level:3},{value:"Examples",id:"examples",level:3}],N={toc:v};function b(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},N,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"stdnth_element-algorithm"},"std::nth_element() algorithm"),(0,o.kt)(s.Z,{content:{"since-cpp20":(0,o.kt)(h.default,{mdxType:"Signature_SinceCpp20"}),"since-cpp17":(0,o.kt)(u.default,{mdxType:"Signature_SinceCpp17"}),"until-cpp17":(0,o.kt)(d.default,{mdxType:"Signature_UntilCpp17"})},mdxType:"SwitchView"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"#"},(0,o.kt)("inlineCode",{parentName:"a"},"std::nth_element"))," is a partial sorting algorithm that rearranges elements in [",(0,o.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,o.kt)("inlineCode",{parentName:"p"},"last"),") such that:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The element pointed at by ",(0,o.kt)("inlineCode",{parentName:"li"},"nth")," is changed to whatever element would occur in that position if [",(0,o.kt)("inlineCode",{parentName:"li"},"first"),"; ",(0,o.kt)("inlineCode",{parentName:"li"},"last"),") were sorted."),(0,o.kt)("li",{parentName:"ul"},"All of the elements before this new nth element are ",(0,o.kt)("strong",{parentName:"li"},"less than")," or ",(0,o.kt)("strong",{parentName:"li"},"equal")," to the elements after the new ",(0,o.kt)("inlineCode",{parentName:"li"},"nth")," element."),(0,o.kt)("li",{parentName:"ul"},"If ",(0,o.kt)("inlineCode",{parentName:"li"},"nth == last")," then the function has no effect.")),(0,o.kt)("p",null,"More formally, ",(0,o.kt)("a",{parentName:"p",href:"#"},(0,o.kt)("inlineCode",{parentName:"a"},"nth_element"))," partially sorts the range [",(0,o.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,o.kt)("inlineCode",{parentName:"p"},"last "),") in ascending order so that the condition\n",(0,o.kt)("inlineCode",{parentName:"p"},"!(*j < *i)")," (for ",(0,o.kt)("strong",{parentName:"p"},"(1, 3)"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"!comp(*j, *i)")," for ",(0,o.kt)("strong",{parentName:"p"},"(2, 4)"),") is met for any ",(0,o.kt)("inlineCode",{parentName:"p"},"i")," in the range [",(0,o.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,o.kt)("inlineCode",{parentName:"p"},"nth"),")\nand for any ",(0,o.kt)("inlineCode",{parentName:"p"},"j")," in the range [",(0,o.kt)("inlineCode",{parentName:"p"},"nth"),"; ",(0,o.kt)("inlineCode",{parentName:"p"},"last"),")."),(0,o.kt)("p",null,"The element placed in the ",(0,o.kt)("inlineCode",{parentName:"p"},"nth")," position is exactly the element that would occur in this position if the range was fully sorted."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"(1)")," Elements are compared using ",(0,o.kt)("inlineCode",{parentName:"p"},"operator<"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"(2)")," Elements are compared using the given binary comparison function ",(0,o.kt)("inlineCode",{parentName:"p"},"comp"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"(3, 4)")," Same as ",(0,o.kt)("strong",{parentName:"p"},"(1)")," and ",(0,o.kt)("strong",{parentName:"p"},"(2)"),", but executed according to policy."),(0,o.kt)("admonition",{parentName:"li",title:"Overload Resolution",type:"important"},(0,o.kt)("p",{parentName:"admonition"},"These overloads participate in overload resolution only if"),(0,o.kt)(p.OS,{v:"cpp20",mdxType:"Until"}," ",(0,o.kt)("code",null,"std::is_execution_policy_v<std::decay_t<ExecutionPolicy>>")," is ",(0,o.kt)("code",null,"true"),". "),(0,o.kt)(p.U6,{v:"cpp20",mdxType:"Since"}," ",(0,o.kt)("code",null,"std::is_execution_policy_v<std::remove_cvref_t<ExecutionPolicy>>")," is ",(0,o.kt)("code",null,"true"),". ")))),(0,o.kt)("h3",{id:"parameters"},"Parameters"),(0,o.kt)(r.ZP,{mdxType:"SymbolTable"},(0,o.kt)(r.mN,{none:!0,noLink:!0,name:(0,o.kt)(l.Fragment,null," ",(0,o.kt)("code",null,"first")," ",(0,o.kt)("br",null)," ",(0,o.kt)("code",null,"last")," "),mdxType:"Symbol"},"The range of elements to sort."),(0,o.kt)(r.mN,{none:!0,noLink:!0,name:(0,o.kt)("code",null,"nth"),mdxType:"Symbol"},"The iterator defining the sort partition point."),(0,o.kt)(r.mN,{none:!0,noLink:!0,name:(0,o.kt)("code",null,"policy"),mdxType:"Symbol"},"The execution policy to use. See ",(0,o.kt)("a",{href:"#"},"execution policy")," for details."),(0,o.kt)(r.mN,{none:!0,noLink:!0,name:(0,o.kt)("code",null,"cmp"),mdxType:"Symbol"},(0,o.kt)("p",null,"Comparison function object (i.e. an object that satisfies the requirements of ",(0,o.kt)("a",{parentName:"p",href:"/docs/named_req/Compare"},"Compare"),").\nThe signature of the comparison function should be equivalent to the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"bool cmp(const Type1 &a, const Type2 &b);\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The signature does not need to have ",(0,o.kt)("inlineCode",{parentName:"li"},"const&"),", but must not modify arguments."),(0,o.kt)("li",{parentName:"ul"},"Must accept all values of type (possibly const) ",(0,o.kt)("inlineCode",{parentName:"li"},"Type")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"Type2"),", regardless of ",(0,o.kt)("a",{parentName:"li",href:"#"},"value category")," (so ",(0,o.kt)("inlineCode",{parentName:"li"},"Type1&")," is not allowed, ",(0,o.kt)(p.U6,{v:"cpp11",mdxType:"Since"},"nor is ",(0,o.kt)("code",null,"Type1")," unless for ",(0,o.kt)("code",null,"Type1")," a move is equivalent to a copy"),")"),(0,o.kt)("li",{parentName:"ul"},"The types ",(0,o.kt)("inlineCode",{parentName:"li"},"Type1")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"Type2")," must be such that an object of type ",(0,o.kt)("inlineCode",{parentName:"li"},"RandomIt")," can be implicitly converted to both of them.")))),(0,o.kt)("h4",{id:"type-requirements"},"Type requirements"),(0,o.kt)(r.ZP,{mdxType:"SymbolTable"},(0,o.kt)(r.mN,{none:!0,noLink:!0,name:(0,o.kt)("code",null,"RandomIt"),mdxType:"Symbol"},(0,o.kt)("a",{href:"/docs/named_req/ValueSwappable"},"ValueSwappable")," ",(0,o.kt)("br",null),(0,o.kt)("a",{href:"/docs/named_req/LegacyRandomAccessIterator"},"LegacyRandomAccessIterator")),(0,o.kt)(r.mN,{none:!0,noLink:!0,name:(0,o.kt)(l.Fragment,null," Type of dereferenced ",(0,o.kt)("code",null,"RandomIt")," "),mdxType:"Symbol"},(0,o.kt)("a",{href:"/docs/named_req/MoveAssignable"},"MoveAssignable")," ",(0,o.kt)("br",null),(0,o.kt)("a",{href:"/docs/named_req/MoveConstructible"},"MoveConstructible")),(0,o.kt)(r.mN,{none:!0,noLink:!0,name:(0,o.kt)("code",null,"Compare"),mdxType:"Symbol"},(0,o.kt)("a",{href:"/docs/named_req/Compare"},"Compare"))),(0,o.kt)("h3",{id:"return-value"},"Return value"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"(none)")),(0,o.kt)("h3",{id:"complexity"},"Complexity"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"(1, 2)")," Linear in ",(0,o.kt)("inlineCode",{parentName:"p"},"std::distance(first, last)")," on average."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"(3, 4)")," Given ",(0,o.kt)("inlineCode",{parentName:"p"},"N")," as ",(0,o.kt)("inlineCode",{parentName:"p"},"last - first"),":\n",(0,o.kt)("strong",{parentName:"p"},"O(N)")," applications of the predicate, and ",(0,o.kt)("strong",{parentName:"p"},"O(N ","*"," log(N))")," swaps."),(0,o.kt)("h3",{id:"exceptions"},"Exceptions"),(0,o.kt)("p",null,"The overloads with a template parameter named ",(0,o.kt)("inlineCode",{parentName:"p"},"ExecutionPolicy")," report errors as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If execution of a function invoked as part of the algorithm throws an exception and ",(0,o.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy")," is one of the ",(0,o.kt)("a",{parentName:"li",href:"#"},(0,o.kt)("strong",{parentName:"a"},"standard policies")),", ",(0,o.kt)("a",{parentName:"li",href:"#"},(0,o.kt)("inlineCode",{parentName:"a"},"std::terminate"))," is called.\nFor any other ",(0,o.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy"),", the behavior is ",(0,o.kt)(c.Z,{title:(0,o.kt)(m.ZP,{mdxType:"Term_ImplementationDefined"}),mdxType:"Tooltip"},(0,o.kt)("strong",{parentName:"li"},"implementation-defined")),"."),(0,o.kt)("li",{parentName:"ul"},"If the algorithm fails to allocate memory, ",(0,o.kt)("inlineCode",{parentName:"li"},"std::bad_alloc")," is thrown.")),(0,o.kt)("h3",{id:"notes"},"Notes"),(0,o.kt)("p",null,"The algorithm used is typically ",(0,o.kt)("strong",{parentName:"p"},"Introselect")," although other ",(0,o.kt)("strong",{parentName:"p"},"Selection algorithm")," with suitable average-case complexity are allowed."),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)(i.Z,{columns:["8fr","4fr"],mdxType:"Columns"},(0,o.kt)("div",null,(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='Main.cpp' showLineNumbers",title:"'Main.cpp'",showLineNumbers:!0},'#include <algorithm>\n#include <cassert>\n#include <functional>\n#include <iostream>\n#include <numeric>\n#include <vector>\n\nvoid printVec(const std::vector<int>& vec)\n{\n    std::cout << "v = {";\n    for (auto n {vec.size()}; const int i : vec)\n        std::cout << i << (--n ? ", " : "");\n    std::cout << "};\\n";\n}\n\nint main()\n{\n    std::vector<int> v {5, 10, 6, 4, 3, 2, 6, 7, 9, 3};\n    printVec(v);\n\n    auto m = v.begin() + v.size() / 2;\n    std::nth_element(v.begin(), m, v.end());\n    std::cout << "\\nThe median is " << v[v.size() / 2] << \'\\n\';\n    // The consequence of the inequality of elements before/after the Nth one:\n    assert(std::accumulate(v.begin(), m, 0) < std::accumulate(m, v.end(), 0));\n    printVec(v);\n\n    // Note: comp function changed\n    std::nth_element(v.begin(), v.begin() + 1, v.end(), std::greater{});\n    std::cout << "\\nThe second largest element is " << v[1] << \'\\n\';\n    std::cout << "The largest element is " << v[0] << \'\\n\';\n    printVec(v);\n}\n'))),(0,o.kt)("div",null,(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Output"',title:'"Output"'},"v = {5, 10, 6, 4, 3, 2, 6, 7, 9, 3};\n\nThe median is 6\nv = {3, 2, 3, 4, 5, 6, 10, 7, 9, 6};\n\nThe second largest element is 9\nThe largest element is 10\nv = {10, 9, 6, 7, 6, 3, 5, 4, 3, 2};\n")))))}b.isMDXComponent=!0}}]);