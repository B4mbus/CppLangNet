"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[44478],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=r,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||o;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},96214:(e,t,n)=>{var a=n(64836);t.Z=void 0;var r=a(n(64938)),o=n(85893),i=(0,r.default)((0,o.jsx)("path",{d:"M9.4 16.6 4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0 4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z"}),"Code");t.Z=i},95175:(e,t,n)=>{var a=n(64836);t.Z=void 0;var r=a(n(64938)),o=n(85893),i=(0,r.default)((0,o.jsx)("path",{d:"m4 18 8.5-6L4 6v12zm9-12v12l8.5-6L13 6z"}),"FastForward");t.Z=i},71498:(e,t,n)=>{var a=n(64836);t.Z=void 0;var r=a(n(64938)),o=n(85893),i=(0,r.default)((0,o.jsx)("path",{d:"M11 18V6l-8.5 6 8.5 6zm.5-6 8.5 6V6l-8.5 6z"}),"FastRewind");t.Z=i},94265:(e,t,n)=>{var a=n(64836);t.Z=void 0;var r=a(n(64938)),o=n(85893),i=(0,r.default)([(0,o.jsx)("path",{d:"M14 14v1.17L17.17 12 14 8.83V10H6v4z",opacity:".3"},"0"),(0,o.jsx)("path",{d:"m20 12-8-8v4H4v8h8v4l8-8zM6 14v-4h8V8.83L17.17 12 14 15.17V14H6z"},"1")],"ForwardTwoTone");t.Z=i},53247:(e,t,n)=>{var a=n(64836);t.Z=void 0;var r=a(n(64938)),o=n(85893),i=(0,r.default)((0,o.jsx)("path",{d:"M6 19h4V5H6v14zm8-14v14h4V5h-4z"}),"Pause");t.Z=i},70655:(e,t,n)=>{var a=n(64836);t.Z=void 0;var r=a(n(64938)),o=n(85893),i=(0,r.default)((0,o.jsx)("path",{d:"M8 5v14l11-7z"}),"PlayArrow");t.Z=i},94229:(e,t,n)=>{var a=n(64836);t.Z=void 0;var r=a(n(64938)),o=n(85893),i=(0,r.default)((0,o.jsx)("path",{d:"M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z"}),"Settings");t.Z=i},65990:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>N,contentTitle:()=>y,default:()=>x,frontMatter:()=>b,metadata:()=>v,toc:()=>w});var a=n(87462),r=(n(67294),n(3905)),o=n(74866),i=n(85162),l=n(11687),s=n(66830),u=n(22307),p=n(42677);n(56693);const c={toc:[]};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'showLineNumbers title="Print each number from an array"',showLineNumbers:!0,title:'"Print',each:!0,number:!0,from:!0,an:!0,'array"':!0},"#include <iostream>\n#include <vector>\n\nint main()\n{\n  // highlight-start\n  std::vector<int> numbers = { 13, 42, -1, 0, -3, -5 };\n\n  for (int n : numbers)\n  {\n    std::cout << n << ' ';\n  }\n  // highlight-end\n}\n")))}m.isMDXComponent=!0;var d=n(18169);(0,d.Qb)({showControlButtons:!0,runOnStart:!0,stages:[{highlights:[(0,d.r7)(2,2,11)]},{highlights:[(0,d.r7)(2,15,16)]},{highlights:[(0,d.Pb)(0,2,10,20)]},{highlights:[0]},{highlights:[1]},{highlights:[2]},{highlights:[3]}]});const h=(0,d.r7)(2,5,10),f=[(0,d.r7)(0,29,31),(0,d.r7)(0,33,35),(0,d.r7)(0,37,39),(0,d.r7)(0,41,42),(0,d.r7)(0,44,46),(0,d.r7)(0,48,50)],g=e=>[{highlights:[(0,d._V)(2,"default")]},{highlights:[h,f[e]]},{highlights:[3,f[e]]},{highlights:[4,f[e]]},{highlights:[5,f[e]]}],k=(0,d.Qb)({showControlButtons:!0,runOnStart:!1,autoPlayInterval:400,stages:[{highlights:[0]},...g(0),...g(1),...g(2),...g(3),...g(4),...g(5)]}),b={sidebar_position:6,sidebar_label:"6. Loops",title:"Loops",description:"Lesson: loops basics in C++ language",tags:["loop","for","while","range-based-for"],hide_title:!0},y=void 0,v={unversionedId:"course/basics/loops",id:"course/basics/loops",title:"Loops",description:"Lesson: loops basics in C++ language",source:"@site/content/learn/course/basics/loops.mdx",sourceDirName:"course/basics",slug:"/course/basics/loops",permalink:"/CppLangNet/learn/course/basics/loops",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/learn/course/basics/loops.mdx",tags:[{label:"loop",permalink:"/CppLangNet/learn/tags/loop"},{label:"for",permalink:"/CppLangNet/learn/tags/for"},{label:"while",permalink:"/CppLangNet/learn/tags/while"},{label:"range-based-for",permalink:"/CppLangNet/learn/tags/range-based-for"}],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,sidebar_label:"6. Loops",title:"Loops",description:"Lesson: loops basics in C++ language",tags:["loop","for","while","range-based-for"],hide_title:!0},sidebar:"defaultSidebar",previous:{title:"Exercises",permalink:"/CppLangNet/learn/course/basics/arrays/exercises"},next:{title:"Functions",permalink:"/CppLangNet/learn/course/basics/functions/"}},N={},w=[{value:"Motivation",id:"motivation",level:2},{value:"Explanation",id:"explanation",level:2},{value:"Range-based <code>for</code>",id:"range-based-for",level:3},{value:"Altering the content",id:"altering-the-content",level:4},{value:"With an initializer list",id:"with-an-initializer-list",level:4},{value:"There&#39;s more",id:"theres-more",level:4},{value:"<code>while</code> loop",id:"while-loop",level:3},{value:"<code>for</code> loop",id:"for-loop",level:3},{value:"Iterating through arrays",id:"iterating-through-arrays",level:4},{value:"Empty parenthesis",id:"empty-parenthesis",level:4},{value:"Breaking a loop (<code>break</code>)",id:"breaking-a-loop-break",level:3},{value:"Skipping a single iteration (<code>continue</code>)",id:"skipping-a-single-iteration-continue",level:3},{value:"Examples",id:"examples",level:2},{value:"Potential errors",id:"potential-errors",level:2},{value:"Additional information",id:"additional-information",level:2}],C={toc:w};function x(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},C,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"loops"},"Loops"),(0,r.kt)("p",null,"In this lesson, we'll make the program execute a certain code multiple times, that is, we'll use a loop."),(0,r.kt)("h2",{id:"motivation"},"Motivation"),(0,r.kt)("p",null,"Loops are essential in programming because they allow us to repeat a set of instructions multiple times.\nThey are useful in various scenarios, including:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\ud83d\udda5 ",(0,r.kt)("strong",{parentName:"li"},"Array Operations"),": Often, we need to perform actions on each element of an array individually.\nUsing loops, we can effortlessly display or manipulate every element in the array."),(0,r.kt)("li",{parentName:"ul"},"\u2797 ",(0,r.kt)("strong",{parentName:"li"},"Mathematical Computations"),": Loops come in handy when performing repeated calculations, such as\ncounting factorials or generating a Fibonacci sequence. They enable us to execute the necessary\noperations multiple times, simplifying complex mathematical tasks."),(0,r.kt)("li",{parentName:"ul"},"\ud83d\udc7e ",(0,r.kt)("strong",{parentName:"li"},"Game Development"),": Imagine adding 10 new opponents to a level in a game. With loops, we can\neasily repeat the code that creates the opponents without having to write it 10 times.")),(0,r.kt)("p",null,"In summary, loops provide us with a way to automate repetitive tasks and efficiently process large\nsets of data. They significantly improve the flexibility and power of our programs by reducing code duplication."),(0,r.kt)("p",null,"In the previous lesson on vectors, we already demonstrated one loop that displayed all the elements of an array:"),(0,r.kt)(s.Z,{fullCode:(0,r.kt)(m,{mdxType:"FullCode_PrintNumbersRangeBasedFor"}),inspectionSetup:void 0,mdxType:"CustomCodeBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'showLineNumbers title="Print each number from an array"',showLineNumbers:!0,title:'"Print',each:!0,number:!0,from:!0,an:!0,'array"':!0},"for (int n : numbers)\n{\n  std::cout << n << ' ';\n}\n"))),(0,r.kt)("p",null,"This is the simplest version of a loop in C++, but there are other types of loops that we'll cover in this lesson."),(0,r.kt)("h2",{id:"explanation"},"Explanation"),(0,r.kt)("p",null,"In C++, there are three types of loops:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"for")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"range-based version"),(0,r.kt)("li",{parentName:"ul"},"basic version"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"while"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"do ... while")))),(0,r.kt)("p",null,"The most common used are ",(0,r.kt)("inlineCode",{parentName:"p"},"for")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"while"),", and we'll cover them in this lesson.\nIf you want to read about the ",(0,r.kt)("inlineCode",{parentName:"p"},"do ... while")," loop, see the article:\n",(0,r.kt)("a",{parentName:"p",href:"articles/do-while"},(0,r.kt)("strong",{parentName:"a"},(0,r.kt)("inlineCode",{parentName:"strong"},"do ... while")," loop")),"."),(0,r.kt)("admonition",{title:"Iteration (definition)",type:"important"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"Iteration")," - a single loop body execution.")),(0,r.kt)("h3",{id:"range-based-for"},"Range-based ",(0,r.kt)("inlineCode",{parentName:"h3"},"for")),(0,r.kt)("p",null,"This type of loop is most commonly used for working with arrays,\nalthough it can also be used in other ways."),(0,r.kt)(l.Z,{center:!0,border:!0,maxheight:"300px",src:"/img/tutorials/course/basic/loops/range-based-for-en.png",alt:"range-based 'for' loop scheme",desc:"Scheme",mdxType:"Image"}),(0,r.kt)("br",null),(0,r.kt)("p",null,"In the example provided in the ",(0,r.kt)("a",{parentName:"p",href:"#motivation"},(0,r.kt)("strong",{parentName:"a"},"Motivation"))," section, we have a special type of loop called the ",(0,r.kt)("strong",{parentName:"p"},"range-based for")," loop.\nIt's a variation of the regular ",(0,r.kt)("inlineCode",{parentName:"p"},"for")," loop used for working with collections of items. It is worth mentioning that\nan array in C++ is also a range, so we can use this loop to iterate over it."),(0,r.kt)("p",null,"Take a look at the example:"),(0,r.kt)(s.Z,{fullCode:(0,r.kt)(m,{mdxType:"FullCode_PrintNumbersRangeBasedFor"}),inspectionSetup:k,mdxType:"CustomCodeBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'showLineNumbers title="Print each number from an array"',showLineNumbers:!0,title:'"Print',each:!0,number:!0,from:!0,an:!0,'array"':!0},"std::vector<int> numbers = { 13, 42, -1, 0, -3, -5 };\n\nfor (int n : numbers)\n{\n    std::cout << n << ' ';\n}\n"))),(0,r.kt)("p",null,"This loop sequentially traverses each element of the array ",(0,r.kt)("inlineCode",{parentName:"p"},"numbers")," and writes it to the\nvariable ",(0,r.kt)("inlineCode",{parentName:"p"},"n"),". The block of code enclosed in the curly braces is then executed.\nIn this case it is a simple printing of the number."),(0,r.kt)("admonition",{title:"Colon",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Note that the variable name ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," is followed by ",(0,r.kt)("strong",{parentName:"p"},"a colon (",(0,r.kt)("inlineCode",{parentName:"strong"},":"),"), not a semicolon (",(0,r.kt)("inlineCode",{parentName:"strong"},";"),")"),"!\nWe do not use any equal sign (",(0,r.kt)("inlineCode",{parentName:"p"},"="),") in this notation, because the value of each element in turn\nwill be automatically assigned to ",(0,r.kt)("inlineCode",{parentName:"p"},"n"),".")),(0,r.kt)("h4",{id:"altering-the-content"},"Altering the content"),(0,r.kt)("p",null,"It is possible to modify each element of the array in the loop body. Let's write a program that\nwill increase each even number in the array by 100 and decrease each odd number by 100.\nuse the reference to the element. Before we explain exactly what it is and how it works, let's\nlook at the following example:"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"with_ref",label:"\u2705 Modify an original number",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"showLineNumbers",showLineNumbers:!0},"std::vector<int> numbers = { 13, 42, -1, 0, -3, -5 };\n\n// highlight-next-line\nfor (int& n : numbers)\n{\n  if (n % 2 == 0) {\n    n += 100;\n  }\n  else {\n    n -= 100;\n  }\n}\n\n// warning-next-line\n// numbers: { -87, 142, -101, 100, -103, -105 }\n"))),(0,r.kt)(i.Z,{value:"without_ref",label:"\u274c Modify a copy",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"showLineNumbers",showLineNumbers:!0},"std::vector<int> numbers = { 13, 42, -1, 0, -3, -5 };\n\n// warning-next-line\nfor (int n : numbers)\n{\n  if (n % 2 == 0) {\n    n += 100;\n  }\n  else {\n    n -= 100;\n  }\n}\n\n// warning-next-line\n// numbers: { 13, 42, -1, 0, -3, -5 }\n")))),(0,r.kt)("p",null,"In the first case, we used a ",(0,r.kt)("strong",{parentName:"p"},"reference")," type, which is denoted by the ampersand (",(0,r.kt)("inlineCode",{parentName:"p"},"&"),") right after the\ntype name. For now the key thing to know is:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"using a reference type (e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"for (int& n : numbers)"),")",(0,r.kt)("br",{parentName:"li"}),"In this case, the variable ",(0,r.kt)("inlineCode",{parentName:"li"},"n")," uses a ",(0,r.kt)("strong",{parentName:"li"},"reference type")," allowing you to modify the original element of the array.\nThis is because with each iteration of the loop, the variable ",(0,r.kt)("inlineCode",{parentName:"li"},"n")," becomes an ",(0,r.kt)("em",{parentName:"li"},"alias")," of the currently processed element."),(0,r.kt)("li",{parentName:"ul"},"using a non-reference (e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"for (int n : numbers)"),")",(0,r.kt)("br",{parentName:"li"}),"On the other hand, if we don't use a reference type, with each iteration of the loop, a ",(0,r.kt)("strong",{parentName:"li"},"copy")," of the currently processed element\nis created and assigned to the variable ",(0,r.kt)("inlineCode",{parentName:"li"},"n"),". This means that the original element of the array cannot be modified.")),(0,r.kt)("p",null,"This applies to any type, not only an ",(0,r.kt)("inlineCode",{parentName:"p"},"int"),". This means that it is equally possible to modify the elements of an array of strings,\nreal numbers (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"float"),") and custom types that we will cover in the next lessons."),(0,r.kt)("p",null,"We'll talk more about references in one of the next lessons: ",(0,r.kt)("a",{parentName:"p",href:"../references"},"References"),"."),(0,r.kt)("h4",{id:"with-an-initializer-list"},"With an initializer list"),(0,r.kt)("p",null,"This loop can also be used with the so-called ",(0,r.kt)("em",{parentName:"p"},"initializer list")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"numbers",label:"Numbers",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'showLineNumbers title="Print each number from an initializer list"',showLineNumbers:!0,title:'"Print',each:!0,number:!0,from:!0,an:!0,initializer:!0,'list"':!0},"for (int number : { 2, 1, 3, 7 })\n{\n  std::cout << number << ' ';\n}\n"))),(0,r.kt)(i.Z,{value:"strings",label:"Strings",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'showLineNumbers title="Print each number from an initializer list"',showLineNumbers:!0,title:'"Print',each:!0,number:!0,from:!0,an:!0,initializer:!0,'list"':!0},'for (std::string str : { "hello", "world", "using", "initializer", "list" })\n{\n  std::cout << str << \' \';\n}\n')))),(0,r.kt)("p",null,"Note that you cannot use the range-based ",(0,r.kt)("inlineCode",{parentName:"p"},"for")," loop to modify the elements of an initializer list,\nso the following code will produce an error:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="\u274c Cannot modify elements of an initializer list"',title:'"\u274c',Cannot:!0,modify:!0,elements:!0,of:!0,an:!0,initializer:!0,'list"':!0},"// error-next-line\nfor (int& a_number_from_list : { 2, 1, 3, 7 })\n")),(0,r.kt)("h4",{id:"theres-more"},"There's more"),(0,r.kt)("p",null,"Range-based for loops are simple and easy to use, but at the same time are very flexible.\nWe only scratched the surface of what you can do with them. We'll cover them in more detail later\nin the course."),(0,r.kt)("h3",{id:"while-loop"},(0,r.kt)("inlineCode",{parentName:"h3"},"while")," loop"),(0,r.kt)(l.Z,{center:!0,border:!0,maxheight:"300px",src:"/img/tutorials/course/basic/loops/while-en.png",alt:"'while' loop scheme",desc:"Scheme",mdxType:"Image"}),(0,r.kt)("br",null),(0,r.kt)("p",null,"We are now intentionally moving into the ",(0,r.kt)("inlineCode",{parentName:"p"},"while")," loop, rather than the basic ",(0,r.kt)("inlineCode",{parentName:"p"},"for"),", as this will make\nthe explanation easier. The while loop executes its body as long as the condition is met:"),(0,r.kt)(u.Z,{columns:["2fr","1fr"],mdxType:"Columns"},(0,r.kt)("div",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",0:!0,className:"language-cpp",metastring:'title="Print numbers from 0 to 3"',title:'"Print',numbers:!0,from:!0,to:!0,'3"':!0},"int number = 0;\nwhile (number <= 3)\n{\n    std::cout << number << ' ';\n    number++;\n}\n"))),(0,r.kt)("div",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Result"',title:'"Result"'},"0 1 2 3\n")))),(0,r.kt)("p",null,"The condition will be checked ",(0,r.kt)("strong",{parentName:"p"},"before")," each loop execution and as long as it is satisfied,\ni.e. as long as ",(0,r.kt)("inlineCode",{parentName:"p"},"number")," is less than or equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"3")," in this case, the body will be executed."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"printing the ",(0,r.kt)("inlineCode",{parentName:"li"},"number")),(0,r.kt)("li",{parentName:"ul"},"increasing ",(0,r.kt)("inlineCode",{parentName:"li"},"number")," by 1")),(0,r.kt)("p",null,"After the last loop execution, the value of ",(0,r.kt)("inlineCode",{parentName:"p"},"number")," will be equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"4"),", so the condition will not be\nsatisfied, causing the loop to terminate and the computer to proceed with the next instructions."),(0,r.kt)("h3",{id:"for-loop"},(0,r.kt)("inlineCode",{parentName:"h3"},"for")," loop"),(0,r.kt)(l.Z,{center:!0,border:!0,maxheight:"300px",src:"/img/tutorials/course/basic/loops/for-en.png",alt:" Schema of a 'for' loop",desc:"Schema",mdxType:"Image"}),(0,r.kt)("br",null),(0,r.kt)("p",null,"This loop is a simplification of a certain ",(0,r.kt)("strong",{parentName:"p"},"very")," frequently repeated pattern, and it is\ntypically used to step through some range (such as numeric range)."),(0,r.kt)("p",null,"Let's start with an example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",0:!0,className:"language-cpp",metastring:'title="Display numbers from 0 to 9"',title:'"Display',numbers:!0,from:!0,to:!0,'9"':!0},"for (int i = 0; i < 10; i++)\n{\n    std::cout << i << ' ';\n}\n")),(0,r.kt)("p",null,"The above loop displays the numbers from 0 to 9. The round bracket at ",(0,r.kt)("inlineCode",{parentName:"p"},"for")," consists of three parts,\nseparated by ",(0,r.kt)("strong",{parentName:"p"}," semicolons"),":"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Fragment"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"int i = 0")),(0,r.kt)("td",{parentName:"tr",align:null},"initial instruction (usually the creation of a variable)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"i < 10")),(0,r.kt)("td",{parentName:"tr",align:null},"condition")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"i++")),(0,r.kt)("td",{parentName:"tr",align:null},"iteration expression")))),(0,r.kt)("p",null,"When a program starts executing a ",(0,r.kt)("inlineCode",{parentName:"p"},"for")," loop, it executes the initial statement once - in our case\ncreates a variable and gives it the value ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),".\nThe program then:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"checks the condition",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"unfulfilled: leave the loop"),(0,r.kt)("li",{parentName:"ul"},"fulfilled: go to the point 2"))),(0,r.kt)("li",{parentName:"ol"},"executes the loop body"),(0,r.kt)("li",{parentName:"ol"},"performs an iteration expression and goes to pt. 1")),(0,r.kt)("p",null,"The above ",(0,r.kt)("inlineCode",{parentName:"p"},"for")," loop is equivalent to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"int i = 0;\nwhile (i < 10)\n{\n    std::cout << i << ' ';\n    i++;\n}\n")),(0,r.kt)("h4",{id:"iterating-through-arrays"},"Iterating through arrays"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"for")," loop is very often used to iterate through arrays, in situations where\nwe either need access to the iteration number or we do not want to iterate\nover the entire range."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Iterating over an entire array"',title:'"Iterating',over:!0,an:!0,entire:!0,'array"':!0},'std::vector<int> numbers = {10, 13, 15, 18, 60};\nfor (int i = 0; i < numbers.size(); i++)\n{\n    std::cout << "numbers[" << i << "]: " << numbers[i] << \'}\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Iterating over half of an array"',title:'"Iterating',over:!0,half:!0,of:!0,an:!0,'array"':!0},'std::vector<int> numbers = {10, 13, 15, 18, 60};\nfor (int i = 0; i < numbers.size() / 2; i++)\n{\n    std::cout << "numbers[" << i << "]: " << numbers[i] << \'}\n}\n')),(0,r.kt)("h4",{id:"empty-parenthesis"},"Empty parenthesis"),(0,r.kt)("p",null,"The code given in the ",(0,r.kt)("inlineCode",{parentName:"p"},"for")," loop parentheses is optional. ",(0,r.kt)("strong",{parentName:"p"},"The semicolons are required"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="For loop with empty parentheses"',title:'"For',loop:!0,with:!0,empty:!0,'parentheses"':!0},"for ( ; ; )\n{\n    // code\n}\n")),(0,r.kt)("p",null,"The above will make the ",(0,r.kt)("inlineCode",{parentName:"p"},"for")," loop execute infinitely (due to the empty condition),\nunless we manually break it..."),(0,r.kt)("h3",{id:"breaking-a-loop-break"},"Breaking a loop (",(0,r.kt)("inlineCode",{parentName:"h3"},"break"),")"),(0,r.kt)("p",null,"We can stop the loop at any point using the ",(0,r.kt)("inlineCode",{parentName:"p"},"break")," statement:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"for (int i = 0; i < 10; i++)\n{\n    if (i == 5)\n    // highlight-next-line\n        break;\n    std::cout << i << ' ';\n}\n")),(0,r.kt)("p",null,"This loop will display numbers from 0 to 4, because at ",(0,r.kt)("inlineCode",{parentName:"p"},"i")," equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"5")," the execution of the loop will be aborted.\nWe can break the ",(0,r.kt)("inlineCode",{parentName:"p"},"while")," loop in the same way."),(0,r.kt)("h3",{id:"skipping-a-single-iteration-continue"},"Skipping a single iteration (",(0,r.kt)("inlineCode",{parentName:"h3"},"continue"),")"),(0,r.kt)("p",null,"To skip further execution of the current loop iteration we use the ",(0,r.kt)("inlineCode",{parentName:"p"},"continue")," statement:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"for (int i = 0; i < 10; i++)\n{\n    if (i == 5)\n    // highlight-next-line\n        continue;\n    std::cout << i << ' ';\n}\n")),(0,r.kt)("p",null,"The loop will display the numbers from ",(0,r.kt)("inlineCode",{parentName:"p"},"0")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"9"),", excluding the number ",(0,r.kt)("inlineCode",{parentName:"p"},"5"),", because before it executes the\ndisplay instruction (",(0,r.kt)("inlineCode",{parentName:"p"},"std::cout"),") the program will jump to the next iteration."),(0,r.kt)("admonition",{title:"For loop and continue",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Note that using ",(0,r.kt)("inlineCode",{parentName:"p"},"continue")," in a ",(0,r.kt)("inlineCode",{parentName:"p"},"for")," loop does not omit the ",(0,r.kt)("em",{parentName:"p"},"iteration expression")," (",(0,r.kt)("a",{parentName:"p",href:"#for-loop"},"see diagram above"),").")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)(p.ZP,{mdxType:"ImproveSection"}),(0,r.kt)("h2",{id:"potential-errors"},"Potential errors"),(0,r.kt)(p.ZP,{mdxType:"ImproveSection"}),(0,r.kt)("h2",{id:"additional-information"},"Additional information"),(0,r.kt)(p.ZP,{mdxType:"ImproveSection"}))}x.isMDXComponent=!0},42677:(e,t,n)=>{n.d(t,{ZP:()=>i});var a=n(87462),r=(n(67294),n(3905));const o={toc:[]};function i(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"important"},(0,r.kt)("p",{parentName:"admonition"},"This section requires improvement. You can help by editing this doc page.")))}i.isMDXComponent=!0},56693:(e,t,n)=>{n.d(t,{ZP:()=>i});var a=n(87462),r=(n(67294),n(3905));const o={toc:[]};function i(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Note, this article is not finished! You can help by editing this doc page.")))}i.isMDXComponent=!0},85162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(67294),r=n(86010);const o="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>w});var a=n(87462),r=n(67294),o=n(86010),i=n(12466),l=n(76775),s=n(91980),u=n(67392),p=n(50012);function c(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function m(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=m(e),[i,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[s,u]=h({queryString:n,groupId:a}),[c,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,p.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),g=(()=>{const e=s??c;return d({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{g&&l(g)}),[g]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),f(e)}),[u,f,o]),tabValues:o}}var g=n(72389);const k="tabList__CuJ",b="tabItem_LNqP";function y(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.o5)(),m=e=>{const t=e.currentTarget,n=p.indexOf(t),a=u[n].value;a!==l&&(c(t),s(a))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>p.push(e),onKeyDown:d,onClick:m},i,{className:(0,o.Z)("tabs__item",b,i?.className,{"tabs__item--active":l===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=f(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",k)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(v,(0,a.Z)({},e,t)))}function w(e){const t=(0,g.Z)();return r.createElement(N,(0,a.Z)({key:String(t)},e))}},18169:(e,t,n)=>{function a(e){return"object"!=typeof e?"default":"highlight"===e.kind?e.variant:"default"}function r(e){return"object"!=typeof e?e:"highlight"===e.kind?e.content:e}function o(e,t){return{kind:"highlight",variant:t??"default",content:e}}function i(e,t,n,a){return{kind:"block",startLine:e,endLine:t,startColumn:n,endColumn:a}}function l(e,t,n){return{kind:"range",startLine:e,endLine:e,startColumn:t,endColumn:n}}function s(e){const t=getComputedStyle(e),n=parseFloat(t.paddingLeft)+parseFloat(t.paddingRight),a=parseFloat(t.borderLeftWidth)+parseFloat(t.borderRightWidth);return e.offsetWidth-n-a}function u(e,t,n){const a=function(e,t){let n=0,a=null;return function r(o){if(o.nodeType!==Node.TEXT_NODE)for(let i=0;i<o.childNodes.length;i++){const l=o.childNodes[i];if(r(l),a)return;if(l.nodeType!==Node.ELEMENT_NODE)continue;const u=l;if(u.classList.contains("token-line")){if(n===t){const t=u.firstChild;let n=0;(t.nodeType!==Node.ELEMENT_NODE||!t.classList.contains("token"))&&(n=t.getBoundingClientRect().width+2);const r=u.getBoundingClientRect(),o=s(u);return e.getBoundingClientRect(),void(a={top:r.top,left:r.left+n,width:o-n,height:r.height})}++n}}}(e),a}(e,t);if(!a)return null;const r=n.getBoundingClientRect();return a.top-=r.top,a.left-=r.left,a}function p(e,t){return u(e,t,e)}function c(e,t){if("number"==typeof t){const n=p(e,t);if(!n)return null;const a=s(e);return{top:n.top,left:n.left,width:.8*a,height:n.height}}return"block"===t.kind?function(e,t){const n=p(e,t.startLine),a=p(e,t.endLine);if(!n||!a)return null;const r=.61*parseFloat(getComputedStyle(e).fontSize||"16"),o=s(e),i=n.left+t.startColumn*r,l=(t.endColumn-t.startColumn)*r;return{top:n.top,left:i,width:0===t.endColumn?o:l,height:a.top+a.height-n.top}}(e,t):function(e,t){let n=0,a=0,r=null,o=0,i=null,l=0;if(function e(s){if(s.nodeType===Node.TEXT_NODE){const e=s.textContent||"";for(let u=0;u<e.length;u++){if(n===t.startLine&&a===t.startColumn&&(r=s,o=u),r&&n===t.endLine&&a===t.endColumn)return i=s,void(l=u);a++}}else for(let t=0;t<s.childNodes.length;t++){const r=s.childNodes[t];if(e(r),r.classList&&r.classList.contains("token-line")&&(n++,a=0),i)return}}(e),!r||!i)return{top:0,left:0,width:0,height:0};const s=function(){const e=document.createRange();e.setStart(r,o),e.setEnd(i,l);const t=e.getBoundingClientRect();return{top:t.top,left:t.left,width:t.width,height:t.height}}(),u=e.getBoundingClientRect();return{top:s.top-u.top,left:s.left-u.left,width:s.width,height:s.height}}(e,t)}function m(e){return{...e}}n.d(t,{CE:()=>u,Je:()=>c,MU:()=>r,Pb:()=>i,Qb:()=>m,US:()=>a,_V:()=>o,r7:()=>l})},22307:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(87462),r=n(67294);const o="columns_Terr";function i(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,r.createElement("div",(0,a.Z)({className:o,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}i.isMDXComponent=!0},66830:(e,t,n)=>{n.d(t,{Z:()=>E});var a=n(67294),r=n(60614),o=n(96214),i=n(73935);function l(e){if(!e.container)return null;const[t,n]=a.useState(null);return(0,a.useEffect)((()=>{const t=setInterval((()=>{const a=e.getPortalTarget();a&&(n(a),clearInterval(t))}),200);return()=>clearInterval(t)}),[e.container]),function(e,t,n){const r=a.useRef((()=>{const e=document.createElement("div");if(n.style)for(const t in n.style)e.style[t]=n.style[t];return e})());return(0,a.useEffect)((()=>{if(t)return t.prepend(r.current),()=>{t.removeChild(r.current)}}),[t,r]),t?(0,i.createPortal)(e,r.current):null}(e.children,t,{style:e.portalStyle})}function s(e){return a.createElement("button",{style:{marginRight:5,cursor:"pointer"},title:"Show the full source",onClick:e.onClick},a.createElement(o.Z,{fontSize:"small"}))}function u(e){return a.createElement(l,{container:e.container,getPortalTarget:()=>e.container.querySelector("pre+div"),portalStyle:e.portalStyle},e.children)}const p=function(e){return a.createElement(u,{container:e.container},a.createElement(s,{onClick:e.onShowFullCode}))};var c=n(18169),m=n(93946),d=n(70655),h=n(53247),f=n(71498),g=n(95175),k=n(94229);function b(e){return a.createElement("div",{className:"insp-flow-control-buttons"},e.running&&a.createElement(m.Z,{title:"Pause",color:"success",onClick:e.onPause},a.createElement(h.Z,null)),!e.running&&a.createElement(a.Fragment,null,"(paused)\xa0",a.createElement(m.Z,{title:"Resume",color:"success",onClick:e.onResume},a.createElement(d.Z,null))),a.createElement(m.Z,{title:"Step Backward",color:"info",onClick:e.onStepBackward},a.createElement(f.Z,null)),a.createElement(m.Z,{title:"Step Forward",color:"info",onClick:e.onStepForward},a.createElement(g.Z,null)),a.createElement(m.Z,{title:"Settings",color:"inherit"},a.createElement(k.Z,null)),a.createElement("span",{style:{marginLeft:5}},"Step"),a.createElement("span",{style:{minWidth:30,textAlign:"right"}},e.currentStep||1),"\xa0of ",e.totalSteps||1)}var y=n(94265);const v=function(e){const t=e.variant??"default",n=e.lineBounds.top+e.lineBounds.height/2;return a.createElement("span",{key:e.key,"data-variant":t,className:"insp-code-arrow",style:{top:n,left:`calc(${e.lineBounds.left}px - 2rem)`}},a.createElement(y.Z,{color:"inherit",fontSize:"inherit"}))};const N=function(e){const t=e.variant??"default";return a.createElement("div",{key:e.key,className:"insp-block-highlight","data-variant":t,style:{top:e.bounds.top-2,left:e.bounds.left-2,width:`calc(min(${e.bounds.width+4}px, 80vw))`,height:e.bounds.height+4}})};function w(e){return a.createElement(l,{container:e.container,getPortalTarget:()=>e.container.querySelector("pre>code"),portalStyle:e.portalStyle},e.children)}function C(e){return a.createElement(l,{container:e.container,getPortalTarget:()=>e.container.querySelector(".theme-code-block"),portalStyle:e.portalStyle},e.children)}function x(e){const[t,n]=a.useState(0),[r,o]=a.useState(null);let i;e.setup.stages&&(i=e.setup.stages[t]);const l=i?.highlights??[],s=i?.arrows??[],u=[],p=[];if(e.container&&l.length>0){const t=e.container.querySelector("pre>code");t&&(function(e,t,n){for(const a of t){const t=(0,c.MU)(a),r=(0,c.Je)(e,t);n.push(r)}}(t,l,u),function(e,t,n,a){for(const r of n){const n=(0,c.CE)(e,r.line,t);a.push({arrow:r,bounds:n})}}(t,e.container,s,p))}const m=null!==r,d=e.setup.stages.length,h=()=>{n((e=>(e+1)%d))},f=()=>{o(setInterval((()=>{h()}),e.setup.autoPlayInterval||1e3))},g=()=>{r&&(clearInterval(r),o(null))};return(0,a.useEffect)((()=>(e.setup.runOnStart&&f(),()=>{g()})),[]),a.createElement(a.Fragment,null,e.setup.showControlButtons&&a.createElement(b,{running:m,onResume:f,onPause:g,onStepForward:()=>{g(),h()},onStepBackward:()=>{g(),n((e=>(e-1+d)%d))},currentStep:t+1,totalSteps:d}),a.createElement(w,{container:e.container},u.map(((e,n)=>e&&a.createElement(N,{key:`hgh-${t}-${n}`,bounds:e,variant:(0,c.US)(l[n])})))),a.createElement(C,{container:e.container,portalStyle:{zIndex:1,position:"absolute"}},p.map(((e,n)=>a.createElement(v,{key:`arr-${t}-${n}`,arrow:e.arrow,lineBounds:e.bounds,variant:e.arrow.variant})))))}function E(e){const t=(0,a.useRef)(null),n=(0,a.useRef)(null),[o,i]=a.useState(!1),[l,s]=a.useState(null),[u,c]=a.useState(null);(0,a.useEffect)((()=>{s(t.current)}),[t]),(0,a.useEffect)((()=>{c(n.current)}),[n]);const m="number"==typeof e.maxLines,d={};if(m){const t=1.43*Math.max(5,e.maxLines);d.height=`${t}em`}(0,a.useEffect)((()=>{const e=o?n.current:t.current;if(!e)return;const a=e.querySelector(".prism-code");a&&(a.style.overflowY="auto",a.style.overflowX="auto");const r=e.querySelector(".prism-code")?.parentNode;r&&(r.style.display="flex",r.style.height=`${d.height}`,r.style.overflow="hidden",r.style.resize="vertical",r.style.minHeight="40px",r.style.maxHeight="90vh",r.style.flexDirection="column")}),[o,t,n]);const h=()=>{const e=()=>i(!o),t=document;t.startViewTransition?t.startViewTransition(e):e()};return a.createElement(a.Fragment,null,e.inspectionSetup&&a.createElement(x,{container:l,setup:e.inspectionSetup}),a.createElement("div",{ref:t,style:{display:o?"none":"block"}},e.children),e.fullCode&&a.createElement(a.Fragment,null,a.createElement(p,{container:l,onShowFullCode:h}),a.createElement("div",{ref:n,style:{display:o?"block":"none"}},"string"==typeof e.fullCode?a.createElement(r.Z,{language:"cpp"},e.fullCode):e.fullCode),a.createElement(p,{container:u,onShowFullCode:h})))}E.isMDXComponent=!0},11687:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(87462),r=n(67294),o=n(44996),i=n(72412);function l(e){let t=null;if(e.desc){const n=e.center?{textAlign:"center",display:"block"}:{};t=r.createElement("small",{style:n},(0,i.Z)(e.desc))}const n=e.fullwidth||e.center,l={border:e.border?"1px solid gray":void 0,display:n?"block":"inline-block"},s=e.style||{};s.borderRadius=e.borderRadius||void 0,s.minWidth=e.minwidth||void 0,s.width=e.width||void 0,s.maxWidth=e.maxwidth||void 0,s.minHeight=e.minheight||void 0,s.height=e.height||void 0,s.maxHeight=e.maxheight||void 0,s.display="block",s.imageRendering="-webkit-optimize-contrast",e.center&&(s.margin="0 auto");const u={...e};return"string"==typeof e.src&&(u.src=e.src.startsWith("/img/")?(0,o.Z)(e.src):e.src),delete u.border,delete u.borderRadius,delete u.center,delete u.fullwidth,delete u.style,delete u.minwidth,delete u.width,delete u.maxwidth,delete u.minheight,delete u.height,delete u.maxheight,delete u.desc,r.createElement(r.Fragment,null,r.createElement("div",{style:l},r.createElement("img",(0,a.Z)({},u,{style:s}))),t)}l.isMDXComponent=!0},72412:(e,t,n)=>{function a(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>a})}}]);