"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[26156,97021,80828,52730,19458],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,g=u["".concat(o,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(g,l(l({ref:t},c),{},{components:n})):a.createElement(g,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294),r=n(86010);const i="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,l),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>y});var a=n(87462),r=n(67294),i=n(86010),l=n(12466),s=n(76775),o=n(91980),p=n(67392),c=n(50012);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function u(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o._X)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=u(e),[l,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[o,p]=g({queryString:n,groupId:a}),[d,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,i]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),f=(()=>{const e=o??d;return m({value:e,tabValues:i})?e:null})();(0,r.useLayoutEffect)((()=>{f&&s(f)}),[f]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);s(e),p(e),b(e)}),[p,b,i]),tabValues:i}}var f=n(72389);const k="tabList__CuJ",_="tabItem_LNqP";function v(e){let{className:t,block:n,selectedValue:s,selectValue:o,tabValues:p}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.o5)(),u=e=>{const t=e.currentTarget,n=c.indexOf(t),a=p[n].value;a!==s&&(d(t),o(a))},m=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:u},l,{className:(0,i.Z)("tabs__item",_,l?.className,{"tabs__item--active":s===t})}),n??t)})))}function N(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function h(e){const t=b(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",k)},r.createElement(v,(0,a.Z)({},e,t)),r.createElement(N,(0,a.Z)({},e,t)))}function y(e){const t=(0,f.Z)();return r.createElement(h,(0,a.Z)({key:String(t)},e))}},98839:(e,t,n)=>{n.d(t,{z:()=>a});const a=n(67294).createContext({name:"Unknown",folder:"unknown"})},22307:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(87462),r=n(67294);const i="columns_Terr";function l(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,r.createElement("div",(0,a.Z)({className:i,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}l.isMDXComponent=!0},99801:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(67294),r=n(74866),i=n(85162),l=n(99372),s=n(72412);const o={};function p(e){const t=e.content||{};return a.createElement(r.Z,null,Object.entries(t).map(((e,t)=>{let[n,p]=e;return p.value||p.simplified||p.detailed?a.createElement(i.Z,{value:n,label:l.gJ.get(n),default:p.default||0==t},p.simplified?a.createElement(a.Fragment,null,a.createElement(r.Z,{groupId:"view_mode",className:o.smallTabs},a.createElement(i.Z,{value:"simplified",label:"Simplified",default:!0},(0,s.Z)(p.simplified)),a.createElement(i.Z,{value:"detailed",label:"Detailed"},(0,s.Z)(p.detailed)))):p.value):a.createElement(i.Z,{value:n,label:l.gJ.get(n),default:0==t},(0,s.Z)(p))})))}},55059:(e,t,n)=>{n.d(t,{mN:()=>c,ZP:()=>p});var a=n(67294),r=n(72412);const i={symbolTable:"symbolTable_yosy",symbolName:"symbolName__gUy",symbolDesc:"symbolDesc_wDaQ",symbolProp:"symbolProp_oAcv",accessPublic:"accessPublic_LfqG",accessProtected:"accessProtected_bDL6",accessPrivate:"accessPrivate_Ab5O",modStatic:"modStatic_ZSC5",modConstexpr:"modConstexpr_iypt",modConst:"modConst_osuL",modVolatile:"modVolatile_ePYM",modVirtual:"modVirtual_jNz7"};var l=n(98839);const s={None:{Order:0,ShortName:"",FullName:"",Style:i.accessPublic},Public:{Order:1,ShortName:"pub",FullName:"public",Style:i.accessPublic},Protected:{Order:2,ShortName:"prot",FullName:"protected",Style:i.accessProtected},Private:{Order:3,ShortName:"priv",FullName:"private",Style:i.accessPrivate}},o=e=>e.none?s.None:e.pub||e.public?s.Public:e.prot||e.protected?s.Protected:e.priv||e.private?s.Private:s.Public;function p(e){return(t=>{if(0===t.length)return null;const n=t.sort(((e,t)=>o(e).Order<o(t).Order));return a.createElement("table",{"data-no-traits":`${e.noTraits||"false"}`,className:i.symbolTable},a.createElement("tbody",null,n))})(a.Children.toArray(e.children))}function c(e){a.useContext(l.z);let t=(0,r.Z)(e.name),n=null;e.desc?n=e.desc:e.children&&(n=e.children);const s=e.linkName||e.autoLink;!e.noLink&&s&&(t=a.createElement("a",{href:e.link||`${e.linkName||e.name}`},t));const p=(e,t,n)=>!0===e?a.createElement("span",{className:i[t]},n):null;return a.createElement("tr",null,!e.none&&a.createElement("td",{className:i.symbolProp},(e=>{const t=o(e);return a.createElement("span",{className:t.Style},t.ShortName)})(e),p(e.static,"modStatic","static"),p(e.constexpr,"modConstexpr","constexpr"),p(e.const,"modConst","const"),p(e.volatile,"modVolatile","volatile"),p(e.virtual,"modVirtual","virtual")),a.createElement("td",{className:i.symbolName},t),a.createElement("td",{className:i.symbolDesc},(0,r.Z)(n)))}c.isMDXComponent=!0,p.isMDXComponent=!0,p.Symbol=c},99372:(e,t,n)=>{n.d(t,{gJ:()=>c,eH:()=>g,U6:()=>u,OS:()=>m});var a=n(67294),r=n(95999);const i="markedText_c6kK",l="since_c1Q3",s="until_jXK6",o="removed_A_Kf",p="versionNumber_BiUX",c=new Map;function d(e){let{children:t,className:n}=e;return a.createElement("span",{className:i+(n?" "+n:"")},t)}function u(e){let{children:t,v:n}=e;return a.createElement(d,{className:l},t,"\xa0",a.createElement("span",{className:p},a.createElement("small",null,"(",c.get(`since-${n}`),")")))}function m(e){let{children:t,v:n}=e;return a.createElement(d,{className:s},t,"\xa0",a.createElement("span",{className:p},a.createElement("small",null,"(",c.get(`until-${n}`),")")))}function g(e){let{children:t,v:n}=e;return a.createElement(d,{className:o},t,"\xa0",a.createElement("span",{className:p},a.createElement("small",null,"(",c.get(`removed-${n}`),")")))}c.set("cpp98","C++98"),c.set("cpp03","C++03"),c.set("cpp11","C++11"),c.set("cpp14","C++14"),c.set("cpp17","C++17"),c.set("cpp20","C++20"),c.set("cpp23","C++23"),c.set("deprecated-",a.createElement(r.Z,null,"deprecated")),c.set("deprecated-cpp98",a.createElement(r.Z,null,"deprecated in C++98")),c.set("deprecated-cpp03",a.createElement(r.Z,null,"deprecated in C++03")),c.set("deprecated-cpp11",a.createElement(r.Z,null,"deprecated in C++11")),c.set("deprecated-cpp14",a.createElement(r.Z,null,"deprecated in C++14")),c.set("deprecated-cpp17",a.createElement(r.Z,null,"deprecated in C++17")),c.set("deprecated-cpp20",a.createElement(r.Z,null,"deprecated in C++20")),c.set("deprecated-cpp23",a.createElement(r.Z,null,"deprecated in C++23")),c.set("until-cpp98",a.createElement(r.Z,null,"until C++98")),c.set("until-cpp03",a.createElement(r.Z,null,"until C++03")),c.set("until-cpp11",a.createElement(r.Z,null,"until C++11")),c.set("until-cpp14",a.createElement(r.Z,null,"until C++14")),c.set("until-cpp17",a.createElement(r.Z,null,"until C++17")),c.set("until-cpp20",a.createElement(r.Z,null,"until C++20")),c.set("until-cpp23",a.createElement(r.Z,null,"until C++23")),c.set("since-cpp98",a.createElement(r.Z,null,"since C++98")),c.set("since-cpp03",a.createElement(r.Z,null,"since C++03")),c.set("since-cpp11",a.createElement(r.Z,null,"since C++11")),c.set("since-cpp14",a.createElement(r.Z,null,"since C++14")),c.set("since-cpp17",a.createElement(r.Z,null,"since C++17")),c.set("since-cpp20",a.createElement(r.Z,null,"since C++20")),c.set("since-cpp23",a.createElement(r.Z,null,"since C++23")),c.set("removed-",a.createElement(r.Z,null,"deleted")),c.set("removed-cpp98",a.createElement(r.Z,null,"removed in C++98")),c.set("removed-cpp03",a.createElement(r.Z,null,"removed in C++03")),c.set("removed-cpp11",a.createElement(r.Z,null,"removed in C++11")),c.set("removed-cpp14",a.createElement(r.Z,null,"removed in C++14")),c.set("removed-cpp17",a.createElement(r.Z,null,"removed in C++17")),c.set("removed-cpp20",a.createElement(r.Z,null,"removed in C++20")),c.set("removed-cpp23",a.createElement(r.Z,null,"removed in C++23"))},72412:(e,t,n)=>{function a(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>a})},68549:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={},l=void 0,s={unversionedId:"std/algo/ranges/_codes/stable_partition/since-cpp20-detailed",id:"std/algo/ranges/_codes/stable_partition/since-cpp20-detailed",title:"since-cpp20-detailed",description:"",source:"@site/content/docs/std/algo/ranges/_codes/stable_partition/since-cpp20-detailed.mdx",sourceDirName:"std/algo/ranges/_codes/stable_partition",slug:"/std/algo/ranges/_codes/stable_partition/since-cpp20-detailed",permalink:"/CppLangNet/docs/std/algo/ranges/_codes/stable_partition/since-cpp20-detailed",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ranges/_codes/stable_partition/since-cpp20-detailed.mdx",tags:[],version:"current",frontMatter:{}},o={},p=[],c={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate<\n  std::bidirectional_iterator I,\n  std::sentinel_for<I> S,\n  class Proj = std::identity,\n  std::indirect_unary_predicate<std::projected<I, Proj>> Pred\n>\n  requires std::permutable<I>\nranges::subrange<I>\n    stable_partition( I first, S last, Pred pred, Proj proj = {} );\n\n// (2)\ntemplate<\n  ranges::bidirectional_range R,\n  class Proj = std::identity,\n  std::indirect_unary_predicate<std::projected<ranges::iterator_t<R>, Proj>> Pred\n>\n  requires std::permutable<ranges::iterator_t<R>>\nranges::borrowed_subrange_t<R>\n    stable_partition( R&& r, Pred pred, Proj proj = {} );\n")))}d.isMDXComponent=!0},67321:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={},l=void 0,s={unversionedId:"std/algo/ranges/_codes/stable_partition/since-cpp20-simplified",id:"std/algo/ranges/_codes/stable_partition/since-cpp20-simplified",title:"since-cpp20-simplified",description:"The type of arguments are generic and have the following constraints:",source:"@site/content/docs/std/algo/ranges/_codes/stable_partition/since-cpp20-simplified.mdx",sourceDirName:"std/algo/ranges/_codes/stable_partition",slug:"/std/algo/ranges/_codes/stable_partition/since-cpp20-simplified",permalink:"/CppLangNet/docs/std/algo/ranges/_codes/stable_partition/since-cpp20-simplified",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ranges/_codes/stable_partition/since-cpp20-simplified.mdx",tags:[],version:"current",frontMatter:{}},o={},p=[],c={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\nranges::subrange<I>\n    stable_partition( I first, S last, Pred pred, Proj proj = {} );\n\n// (2)\nranges::borrowed_subrange_t<R>\n    stable_partition( R&& r, Pred pred, Proj proj = {} );\n")),(0,r.kt)("p",null,"The type of arguments are generic and have the following constraints:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"I")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"std::bidirectional_iterator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"S")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"std::sentinel_for<I>")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"R")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"std::ranges::bidirectional_range")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Pred"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"(1)")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"std::indirect_unary_predicate<std::projected<I, Proj>>")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"(2)")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"std::indirect_unary_predicate<std::projected<ranges::iterator_t<R>, Proj>>")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Proj")," - ",(0,r.kt)("strong",{parentName:"li"},"(none)"))),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Proj"),"  template argument has the following default type ",(0,r.kt)("inlineCode",{parentName:"p"},"std::identity")," for all overloads."),(0,r.kt)("p",null,"Additionally, each overload has the following constraints:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"(1)")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"std::permutable<I>")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"(2)")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"std::permutable<ranges::iterator_t<R>>"))))}d.isMDXComponent=!0},53371:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={},l=void 0,s={unversionedId:"std/algo/ranges/_codes/stable_partition/since-cpp26-detailed",id:"std/algo/ranges/_codes/stable_partition/since-cpp26-detailed",title:"since-cpp26-detailed",description:"",source:"@site/content/docs/std/algo/ranges/_codes/stable_partition/since-cpp26-detailed.mdx",sourceDirName:"std/algo/ranges/_codes/stable_partition",slug:"/std/algo/ranges/_codes/stable_partition/since-cpp26-detailed",permalink:"/CppLangNet/docs/std/algo/ranges/_codes/stable_partition/since-cpp26-detailed",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ranges/_codes/stable_partition/since-cpp26-detailed.mdx",tags:[],version:"current",frontMatter:{}},o={},p=[],c={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate<\n  std::bidirectional_iterator I,\n  std::sentinel_for<I> S,\n  class Proj = std::identity,\n  std::indirect_unary_predicate<std::projected<I, Proj>> Pred\n>\n  requires std::permutable<I>\nconstexpr ranges::subrange<I>\n    stable_partition( I first, S last, Pred pred, Proj proj = {} );\n\n// (2)\ntemplate<\n  ranges::bidirectional_range R,\n  class Proj = std::identity,\n  std::indirect_unary_predicate<std::projected<ranges::iterator_t<R>, Proj>> Pred\n>\n  requires std::permutable<ranges::iterator_t<R>>\nconstexpr ranges::borrowed_subrange_t<R>\n    stable_partition( R&& r, Pred pred, Proj proj = {} );\n")))}d.isMDXComponent=!0},17857:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={},l=void 0,s={unversionedId:"std/algo/ranges/_codes/stable_partition/since-cpp26-simplified",id:"std/algo/ranges/_codes/stable_partition/since-cpp26-simplified",title:"since-cpp26-simplified",description:"The type of arguments are generic and have the following constraints:",source:"@site/content/docs/std/algo/ranges/_codes/stable_partition/since-cpp26-simplified.mdx",sourceDirName:"std/algo/ranges/_codes/stable_partition",slug:"/std/algo/ranges/_codes/stable_partition/since-cpp26-simplified",permalink:"/CppLangNet/docs/std/algo/ranges/_codes/stable_partition/since-cpp26-simplified",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ranges/_codes/stable_partition/since-cpp26-simplified.mdx",tags:[],version:"current",frontMatter:{}},o={},p=[],c={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\nconstexpr ranges::subrange<I>\n    stable_partition( I first, S last, Pred pred, Proj proj = {} );\n\n// (2)\nconstexpr ranges::borrowed_subrange_t<R>\n    stable_partition( R&& r, Pred pred, Proj proj = {} );\n")),(0,r.kt)("p",null,"The type of arguments are generic and have the following constraints:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"I")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"std::bidirectional_iterator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"S")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"std::sentinel_for<I>")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"R")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"std::ranges::bidirectional_range")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Pred"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"(1)")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"std::indirect_unary_predicate<std::projected<I, Proj>>")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"(2)")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"std::indirect_unary_predicate<std::projected<ranges::iterator_t<R>, Proj>>")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Proj")," - ",(0,r.kt)("strong",{parentName:"li"},"(none)"))),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Proj"),"  template argument has the following default type ",(0,r.kt)("inlineCode",{parentName:"p"},"std::identity")," for all overloads."),(0,r.kt)("p",null,"Additionally, each overload has the following constraints:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"(1)")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"std::permutable<I>")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"(2)")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"std::permutable<ranges::iterator_t<R>>"))))}d.isMDXComponent=!0},10166:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>g,default:()=>v,frontMatter:()=>m,metadata:()=>b,toc:()=>k});var a=n(87462),r=n(67294),i=n(3905),l=n(55059),s=n(22307),o=n(99801),p=n(68549),c=n(67321),d=n(53371),u=n(17857);const m={title:"ranges::stable_partition algorithm",sidebar_label:"ranges::stable_partition(  )",description:"ranges::stable_partition algorithm C++ documentation",hide_title:!0,tags:["ranges","algorithm","partition","stable","stable_partition"],cppreference_origin_rel:"w/cpp/algorithm/ranges/stable_partition"},g=void 0,b={unversionedId:"std/algo/ranges/stable_partition",id:"std/algo/ranges/stable_partition",title:"ranges::stable_partition algorithm",description:"ranges::stable_partition algorithm C++ documentation",source:"@site/content/docs/std/algo/ranges/stable_partition.mdx",sourceDirName:"std/algo/ranges",slug:"/std/algo/ranges/stable_partition",permalink:"/CppLangNet/docs/std/algo/ranges/stable_partition",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ranges/stable_partition.mdx",tags:[{label:"ranges",permalink:"/CppLangNet/docs/tags/ranges"},{label:"algorithm",permalink:"/CppLangNet/docs/tags/algorithm"},{label:"partition",permalink:"/CppLangNet/docs/tags/partition"},{label:"stable",permalink:"/CppLangNet/docs/tags/stable"},{label:"stable_partition",permalink:"/CppLangNet/docs/tags/stable-partition"}],version:"current",frontMatter:{title:"ranges::stable_partition algorithm",sidebar_label:"ranges::stable_partition(  )",description:"ranges::stable_partition algorithm C++ documentation",hide_title:!0,tags:["ranges","algorithm","partition","stable","stable_partition"],cppreference_origin_rel:"w/cpp/algorithm/ranges/stable_partition"},sidebar:"defaultSidebar",previous:{title:"ranges::partition_copy(  )",permalink:"/CppLangNet/docs/std/algo/ranges/partition_copy"},next:{title:"ranges::partition_point(  )",permalink:"/CppLangNet/docs/std/algo/ranges/partition_point"}},f={},k=[{value:"Parameters",id:"parameters",level:3},{value:"Return value",id:"return-value",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"Possible implementation",id:"possible-implementation",level:3},{value:"Notes",id:"notes",level:3},{value:"Examples",id:"examples",level:3}],_={toc:k};function v(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},_,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"stdrangesstable_partition-algorithm"},"std::ranges::stable_partition() algorithm"),(0,i.kt)(o.Z,{content:{"since-cpp20":{simplified:(0,i.kt)(c.default,{mdxType:"Signature_SinceCpp20_Simplified"}),detailed:(0,i.kt)(p.default,{mdxType:"Signature_SinceCpp20_Detailed"})},"since-cpp26":{simplified:(0,i.kt)(u.default,{mdxType:"Signature_SinceCpp26_Simplified"}),detailed:(0,i.kt)(d.default,{mdxType:"Signature_SinceCpp26_Detailed"})}},mdxType:"SwitchView"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"(1)")," Reorders the elements in the range [",(0,i.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,i.kt)("inlineCode",{parentName:"p"},"last"),") in such a way that the projection ",(0,i.kt)("inlineCode",{parentName:"p"},"proj")," of all elements for which the predicate ",(0,i.kt)("inlineCode",{parentName:"p"},"pred")," returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," precede the projection ",(0,i.kt)("inlineCode",{parentName:"p"},"proj")," of elements for which predicate ",(0,i.kt)("inlineCode",{parentName:"p"},"pred")," returns ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,i.kt)("p",{parentName:"li"},"The algorithms is stable, the relative order of elements is preserved.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"(2)")," Same as ",(0,i.kt)("strong",{parentName:"p"},"(1)"),", but uses ",(0,i.kt)("inlineCode",{parentName:"p"},"r")," as the range, as if using ",(0,i.kt)("inlineCode",{parentName:"p"},"ranges::begin(r)")," as ",(0,i.kt)("inlineCode",{parentName:"p"},"first")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"ranges::end(r)")," as ",(0,i.kt)("inlineCode",{parentName:"p"},"last"),"."))),(0,i.kt)("p",null,"The function-like entities described on this page are ",(0,i.kt)("a",{parentName:"p",href:"/docs/std/algo/niebloids"},(0,i.kt)("strong",{parentName:"a"},"niebloids")),"."),(0,i.kt)("h3",{id:"parameters"},"Parameters"),(0,i.kt)(l.ZP,{mdxType:"SymbolTable"},(0,i.kt)(l.mN,{none:!0,noLink:!0,name:(0,i.kt)(r.Fragment,null," ",(0,i.kt)("code",null,"first")," ",(0,i.kt)("br",null)," ",(0,i.kt)("code",null,"last")," "),mdxType:"Symbol"},"The range of elements to reorder."),(0,i.kt)(l.mN,{none:!0,noLink:!0,name:(0,i.kt)("code",null,"r"),mdxType:"Symbol"},"The range of elements to reorder."),(0,i.kt)(l.mN,{none:!0,noLink:!0,name:(0,i.kt)("code",null,"pred"),mdxType:"Symbol"},"The predicate to apply to the projected elements."),(0,i.kt)(l.mN,{none:!0,noLink:!0,name:(0,i.kt)("code",null,"proj"),mdxType:"Symbol"},"The projection to apply to the elements.")),(0,i.kt)("h3",{id:"return-value"},"Return value"),(0,i.kt)("p",null,"An object equal to"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"{\n  pivot,\n  last\n}\n")),(0,i.kt)("p",null,"Where pivot is an iterator to the first element of the second group."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"(2)")," Same as ",(0,i.kt)("strong",{parentName:"li"},"(1)")," if ",(0,i.kt)("inlineCode",{parentName:"li"},"r")," is an lvalue or of a ",(0,i.kt)("a",{parentName:"li",href:"#"},(0,i.kt)("inlineCode",{parentName:"a"},"borrowed_range"))," type. Otherwise returns ",(0,i.kt)("a",{parentName:"li",href:"#"},(0,i.kt)("inlineCode",{parentName:"a"},"std::ranges::dangling")),".")),(0,i.kt)("h3",{id:"complexity"},"Complexity"),(0,i.kt)("p",null,"Given ",(0,i.kt)("inlineCode",{parentName:"p"},"N")," ",(0,i.kt)("inlineCode",{parentName:"p"},"ranges::distance(first, last)"),":"),(0,i.kt)("p",null,"The complexity is at worst ",(0,i.kt)("strong",{parentName:"p"},"N * log(N)")," swaps, and only ",(0,i.kt)("strong",{parentName:"p"},"O(N)")," swaps in case an extra memory buffer is used."),(0,i.kt)("p",null,"Exactly ",(0,i.kt)("inlineCode",{parentName:"p"},"N")," applications of the predicate ",(0,i.kt)("inlineCode",{parentName:"p"},"pred")," and projection ",(0,i.kt)("inlineCode",{parentName:"p"},"proj"),"."),(0,i.kt)("h3",{id:"exceptions"},"Exceptions"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"(none)")),(0,i.kt)("h3",{id:"possible-implementation"},"Possible implementation"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"stable_partition(1) and stable_partition(2)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"struct stable_partition_fn\n{\n    template<std::bidirectional_iterator I, std::sentinel_for<I> S,\n             class Proj = std::identity,\n             std::indirect_unary_predicate<std::projected<I, Proj>> Pred>\n    requires std::permutable<I>\n    constexpr ranges::subrange<I>\n        operator()(I first, S last, Pred pred, Proj proj = {}) const\n    {\n        first = ranges::find_if_not(first, last, pred, proj);\n        I mid = first;\n        while (mid != last)\n        {\n            mid = ranges::find_if(mid, last, pred, proj);\n            if (mid == last)\n                break;\n            I last2 = ranges::find_if_not(mid, last, pred, proj);\n            ranges::rotate(first, mid, last2);\n            first = ranges::next(first, ranges::distance(mid, last2));\n            mid = last2;\n        }\n        return {std::move(first), std::move(mid)};\n    }\n\n    template<ranges::bidirectional_range R, class Proj = std::identity,\n             std::indirect_unary_predicate<\n                 std::projected<ranges::iterator_t<R>, Proj>> Pred>\n    requires std::permutable<ranges::iterator_t<R>>\n    constexpr ranges::borrowed_subrange_t<R>\n        operator()(R&& r, Pred pred, Proj proj = {}) const\n    {\n        return (*this)(ranges::begin(r), ranges::end(r), std::move(pred), std::move(proj));\n    }\n};\n\ninline constexpr stable_partition_fn stable_partition {};\n"))),(0,i.kt)("h3",{id:"notes"},"Notes"),(0,i.kt)("p",null,"This function attempts to allocate a temporary buffer. If the allocation fails, the less efficient algorithm is chosen."),(0,i.kt)("h3",{id:"examples"},"Examples"),(0,i.kt)(s.Z,{columns:["8fr","4fr"],mdxType:"Columns"},(0,i.kt)("div",null,(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='Main.cpp' showLineNumbers",title:"'Main.cpp'",showLineNumbers:!0},'#include <algorithm>\n#include <iostream>\n#include <iterator>\n#include <vector>\n\nnamespace rng = std::ranges;\n\ntemplate<std::permutable I, std::sentinel_for<I> S>\nconstexpr void stable_sort(I first, S last)\n{\n    if (first == last)\n        return;\n\n    auto pivot = *rng::next(first, rng::distance(first, last) / 2, last);\n    auto left = [pivot](const auto& em) { return em < pivot; };\n    auto tail1 = rng::stable_partition(first, last, left);\n    auto right = [pivot](const auto& em) { return !(pivot < em); };\n    auto tail2 = rng::stable_partition(tail1, right);\n\n    stable_sort(first, tail1.begin());\n    stable_sort(tail2.begin(), tail2.end());\n}\n\nvoid print(const auto rem, auto first, auto last, bool end = true)\n{\n    std::cout << rem;\n    for (; first != last; ++first)\n        std::cout << *first << \' \';\n    std::cout << (end ? "\\n" : "");\n}\n\nint main()\n{\n    const auto original = {9, 6, 5, 2, 3, 1, 7, 8};\n\n    std::vector<int> vi {};\n    auto even = [](int x) { return 0 == (x % 2); };\n\n    print("Original vector:\\t", original.begin(), original.end(), "\\n");\n\n    vi = original;\n    const auto ret1 = rng::stable_partition(vi, even);\n    print("Stable partitioned:\\t", vi.begin(), ret1.begin(), 0);\n    print("\u2502 ", ret1.begin(), ret1.end());\n\n    vi = original;\n    const auto ret2 = rng::partition(vi, even);\n    print("Partitioned:\\t\\t", vi.begin(), ret2.begin(), 0);\n    print("\u2502 ", ret2.begin(), ret2.end());\n\n\n    vi = {16, 30, 44, 30, 15, 24, 10, 18, 12, 35};\n    print("Unsorted vector: ", vi.begin(), vi.end());\n\n    stable_sort(rng::begin(vi), rng::end(vi));\n    print("Sorted vector:   ", vi.begin(), vi.end());\n}\n'))),(0,i.kt)("div",null,(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Possible Output"',title:'"Possible','Output"':!0},"Original vector:        9 6 5 2 3 1 7 8\nStable partitioned:     6 2 8 \u2502 9 5 3 1 7\nPartitioned:            8 6 2 \u2502 5 3 1 7 9\nUnsorted vector: 16 30 44 30 15 24 10 18 12 35 \nSorted vector:   10 12 15 16 18 24 30 30 35 44\n")))))}v.isMDXComponent=!0}}]);