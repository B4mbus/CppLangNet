"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[99482],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),f=u(n),g=a,m=f["".concat(c,".").concat(g)]||f[g]||p[g]||i;return n?r.createElement(m,s(s({ref:t},l),{},{components:n})):r.createElement(m,s({ref:t},l))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=f;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var u=2;u<i;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},76983:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const i={title:"Exercises - Functions"},s="Functions >> Exercises",o={unversionedId:"course/basics/functions/exercises",id:"course/basics/functions/exercises",title:"Exercises - Functions",description:"Counting occurrences",source:"@site/content/learn/course/basics/functions/exercises.mdx",sourceDirName:"course/basics/functions",slug:"/course/basics/functions/exercises",permalink:"/CppLangNet/learn/course/basics/functions/exercises",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/learn/course/basics/functions/exercises.mdx",tags:[],version:"current",frontMatter:{title:"Exercises - Functions"},sidebar:"defaultSidebar",previous:{title:"Common problems - Functions",permalink:"/CppLangNet/learn/course/basics/functions/common-problems"},next:{title:"8. Structures",permalink:"/CppLangNet/learn/course/basics/structures"}},c={},u=[{value:"Counting occurrences",id:"counting-occurrences",level:2},{value:"Number of vowels",id:"number-of-vowels",level:2},{value:"Anagram detection",id:"anagram-detection",level:2},{value:"Convert int to string",id:"convert-int-to-string",level:2}],l={toc:u};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"functions--exercises"},"Functions >> Exercises"),(0,a.kt)("h2",{id:"counting-occurrences"},"Counting occurrences"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Task:")," Write a function that takes a string and a character, and returns the number of times the character appears in the string."),(0,a.kt)("h2",{id:"number-of-vowels"},"Number of vowels"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Task:")," Write a function that takes a string and returns the number of vowels in that string."),(0,a.kt)("h2",{id:"anagram-detection"},"Anagram detection"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Task:")," Write a function that takes two strings and returns ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," if the strings are ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Anagram"},"anagrams"),"\nof each other, and ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Hint"),(0,a.kt)("div",null,(0,a.kt)("p",null,"Count the number of occurrences of each character in each string, and compare the two counts."))),(0,a.kt)("h2",{id:"convert-int-to-string"},"Convert int to string"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Task:")," Write a function that takes an integer and returns a string representation of that integer. Do not use standard library functions\nlike ",(0,a.kt)("inlineCode",{parentName:"p"},"std::to_string")," or its equivalents."),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Hint"),(0,a.kt)("div",null,(0,a.kt)("p",null,"Use ",(0,a.kt)("code",null,"string.insert(0, 1, 'x')")," to insert a character at the beginning of a string, e.g:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Inserting a character at the beginning of a string"',title:'"Inserting',a:!0,character:!0,at:!0,the:!0,beginning:!0,of:!0,'string"':!0},'std::string s = "abc";\ns.insert(0, 1, \'x\');\n// s is now "xabc"\n')))))}p.isMDXComponent=!0}}]);