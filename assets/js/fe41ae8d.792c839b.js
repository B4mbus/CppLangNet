"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[54637],{14064:(e,t,n)=>{n.d(t,{ZP:()=>i});var a=n(87462),r=(n(67294),n(3905));const o={toc:[]};function i(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Aspects and semantics that are ",(0,r.kt)("strong",{parentName:"p"},"implementation-defined")," are not guaranteed by\nthe standard in any way, rather they are left out to the implementation (compiler vendor standard library, most of the times).\nFor example, most mathematical functions incur some ",(0,r.kt)("strong",{parentName:"p"},"implementation-defined")," behaviour."))}i.isMDXComponent=!0},98088:(e,t,n)=>{n.d(t,{ZP:()=>i});var a=n(87462),r=(n(67294),n(3905));const o={toc:[]};function i(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("b",null,"Undefined behaviour")," is a property of a program that's incorrect, but likely compiles. It is incorrect in a way, that the error is only invoked in certain conditions at runtime.",(0,r.kt)("p",null,"Common cases include: ",(0,r.kt)("strong",{parentName:"p"},"out of bounds access"),", ",(0,r.kt)("strong",{parentName:"p"},"reading uninitialized objects"),", ",(0,r.kt)("strong",{parentName:"p"},"dangling pointers/references")," or ",(0,r.kt)("strong",{parentName:"p"},"signed overflow"),"."))}i.isMDXComponent=!0},85162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(67294),r=n(86010);const o="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>C});var a=n(87462),r=n(67294),o=n(86010),i=n(12466),l=n(76775),s=n(91980),c=n(67392),p=n(50012);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function u(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function y(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=u(e),[i,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[s,c]=f({queryString:n,groupId:a}),[d,y]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,p.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),k=(()=>{const e=s??d;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{k&&l(k)}),[k]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),y(e)}),[c,y,o]),tabValues:o}}var k=n(72389);const g="tabList__CuJ",v="tabItem_LNqP";function h(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:c}=e;const p=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),u=e=>{const t=e.currentTarget,n=p.indexOf(t),a=c[n].value;a!==l&&(d(t),s(a))},m=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:u},i,{className:(0,o.Z)("tabs__item",v,i?.className,{"tabs__item--active":l===t})}),n??t)})))}function b(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=y(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",g)},r.createElement(h,(0,a.Z)({},e,t)),r.createElement(b,(0,a.Z)({},e,t)))}function C(e){const t=(0,k.Z)();return r.createElement(N,(0,a.Z)({key:String(t)},e))}},98839:(e,t,n)=>{n.d(t,{z:()=>a});const a=n(67294).createContext({name:"Unknown",folder:"unknown"})},22307:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(87462),r=n(67294);const o="columns_Terr";function i(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,r.createElement("div",(0,a.Z)({className:o,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}i.isMDXComponent=!0},99801:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),r=n(74866),o=n(85162),i=n(99372),l=n(72412);const s={};function c(e){const t=e.content||{};return a.createElement(r.Z,null,Object.entries(t).map(((e,t)=>{let[n,c]=e;return c.value||c.simplified||c.detailed?a.createElement(o.Z,{value:n,label:i.gJ.get(n),default:c.default||0==t},c.simplified?a.createElement(a.Fragment,null,a.createElement(r.Z,{groupId:"view_mode",className:s.smallTabs},a.createElement(o.Z,{value:"simplified",label:"Simplified",default:!0},(0,l.Z)(c.simplified)),a.createElement(o.Z,{value:"detailed",label:"Detailed"},(0,l.Z)(c.detailed)))):c.value):a.createElement(o.Z,{value:n,label:i.gJ.get(n),default:0==t},(0,l.Z)(c))})))}},55059:(e,t,n)=>{n.d(t,{mN:()=>p,ZP:()=>c});var a=n(67294),r=n(72412);const o={symbolTable:"symbolTable_yosy",symbolName:"symbolName__gUy",symbolDesc:"symbolDesc_wDaQ",symbolProp:"symbolProp_oAcv",accessPublic:"accessPublic_LfqG",accessProtected:"accessProtected_bDL6",accessPrivate:"accessPrivate_Ab5O",modStatic:"modStatic_ZSC5",modConstexpr:"modConstexpr_iypt",modConst:"modConst_osuL",modVolatile:"modVolatile_ePYM",modVirtual:"modVirtual_jNz7"};var i=n(98839);const l={None:{Order:0,ShortName:"",FullName:"",Style:o.accessPublic},Public:{Order:1,ShortName:"pub",FullName:"public",Style:o.accessPublic},Protected:{Order:2,ShortName:"prot",FullName:"protected",Style:o.accessProtected},Private:{Order:3,ShortName:"priv",FullName:"private",Style:o.accessPrivate}},s=e=>e.none?l.None:e.pub||e.public?l.Public:e.prot||e.protected?l.Protected:e.priv||e.private?l.Private:l.Public;function c(e){return(t=>{if(0===t.length)return null;const n=t.sort(((e,t)=>s(e).Order<s(t).Order));return a.createElement("table",{"data-no-traits":`${e.noTraits||"false"}`,className:o.symbolTable},a.createElement("tbody",null,n))})(a.Children.toArray(e.children))}function p(e){a.useContext(i.z);let t=(0,r.Z)(e.name),n=null;e.desc?n=e.desc:e.children&&(n=e.children);const l=e.linkName||e.autoLink;!e.noLink&&l&&(t=a.createElement("a",{href:e.link||`${e.linkName||e.name}`},t));const c=(e,t,n)=>!0===e?a.createElement("span",{className:o[t]},n):null;return a.createElement("tr",null,!e.none&&a.createElement("td",{className:o.symbolProp},(e=>{const t=s(e);return a.createElement("span",{className:t.Style},t.ShortName)})(e),c(e.static,"modStatic","static"),c(e.constexpr,"modConstexpr","constexpr"),c(e.const,"modConst","const"),c(e.volatile,"modVolatile","volatile"),c(e.virtual,"modVirtual","virtual")),a.createElement("td",{className:o.symbolName},t),a.createElement("td",{className:o.symbolDesc},(0,r.Z)(n)))}p.isMDXComponent=!0,c.isMDXComponent=!0,c.Symbol=p},18510:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),r=n(44996),o=n(34386),i=n(72412);const l="TooltipContent_Lvru",s="TooltipTitle_ukF2";function c(e){let{url:t,title:n,maxWidth:c,children:p}=e;let d=c||"clamp(250px, 25vw, 800px)";"string"==typeof d&&d.endsWith("vw")&&(d=`clamp(250px, ${d}, 800px)`);const u="function"==typeof n?a.createElement(n):n,m=(t||"").startsWith("/")?(0,r.Z)(t):t,f=t?a.createElement("a",{href:m,target:"_blank",rel:"noreferrer"},p):p;return a.createElement(o.Z,{componentsProps:{tooltip:{style:{maxWidth:d}}},title:a.createElement("span",{className:s},(0,i.Z)(u)),placement:"top",arrow:!0},a.createElement("span",{className:l},f))}c.isMDXComponent=!0},99372:(e,t,n)=>{n.d(t,{gJ:()=>p,eH:()=>f,U6:()=>u,OS:()=>m});var a=n(67294),r=n(95999);const o="markedText_c6kK",i="since_c1Q3",l="until_jXK6",s="removed_A_Kf",c="versionNumber_BiUX",p=new Map;function d(e){let{children:t,className:n}=e;return a.createElement("span",{className:o+(n?" "+n:"")},t)}function u(e){let{children:t,v:n}=e;return a.createElement(d,{className:i},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",p.get(`since-${n}`),")")))}function m(e){let{children:t,v:n}=e;return a.createElement(d,{className:l},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",p.get(`until-${n}`),")")))}function f(e){let{children:t,v:n}=e;return a.createElement(d,{className:s},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",p.get(`removed-${n}`),")")))}p.set("cpp98","C++98"),p.set("cpp03","C++03"),p.set("cpp11","C++11"),p.set("cpp14","C++14"),p.set("cpp17","C++17"),p.set("cpp20","C++20"),p.set("cpp23","C++23"),p.set("deprecated-",a.createElement(r.Z,null,"deprecated")),p.set("deprecated-cpp98",a.createElement(r.Z,null,"deprecated in C++98")),p.set("deprecated-cpp03",a.createElement(r.Z,null,"deprecated in C++03")),p.set("deprecated-cpp11",a.createElement(r.Z,null,"deprecated in C++11")),p.set("deprecated-cpp14",a.createElement(r.Z,null,"deprecated in C++14")),p.set("deprecated-cpp17",a.createElement(r.Z,null,"deprecated in C++17")),p.set("deprecated-cpp20",a.createElement(r.Z,null,"deprecated in C++20")),p.set("deprecated-cpp23",a.createElement(r.Z,null,"deprecated in C++23")),p.set("until-cpp98",a.createElement(r.Z,null,"until C++98")),p.set("until-cpp03",a.createElement(r.Z,null,"until C++03")),p.set("until-cpp11",a.createElement(r.Z,null,"until C++11")),p.set("until-cpp14",a.createElement(r.Z,null,"until C++14")),p.set("until-cpp17",a.createElement(r.Z,null,"until C++17")),p.set("until-cpp20",a.createElement(r.Z,null,"until C++20")),p.set("until-cpp23",a.createElement(r.Z,null,"until C++23")),p.set("since-cpp98",a.createElement(r.Z,null,"since C++98")),p.set("since-cpp03",a.createElement(r.Z,null,"since C++03")),p.set("since-cpp11",a.createElement(r.Z,null,"since C++11")),p.set("since-cpp14",a.createElement(r.Z,null,"since C++14")),p.set("since-cpp17",a.createElement(r.Z,null,"since C++17")),p.set("since-cpp20",a.createElement(r.Z,null,"since C++20")),p.set("since-cpp23",a.createElement(r.Z,null,"since C++23")),p.set("removed-",a.createElement(r.Z,null,"deleted")),p.set("removed-cpp98",a.createElement(r.Z,null,"removed in C++98")),p.set("removed-cpp03",a.createElement(r.Z,null,"removed in C++03")),p.set("removed-cpp11",a.createElement(r.Z,null,"removed in C++11")),p.set("removed-cpp14",a.createElement(r.Z,null,"removed in C++14")),p.set("removed-cpp17",a.createElement(r.Z,null,"removed in C++17")),p.set("removed-cpp20",a.createElement(r.Z,null,"removed in C++20")),p.set("removed-cpp23",a.createElement(r.Z,null,"removed in C++23"))},72412:(e,t,n)=>{function a(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>a})},15700:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={},i=void 0,l={unversionedId:"std/algo/ordinary/_codes/partition/since-cpp17",id:"std/algo/ordinary/_codes/partition/since-cpp17",title:"since-cpp17",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/partition/since-cpp17.mdx",sourceDirName:"std/algo/ordinary/_codes/partition",slug:"/std/algo/ordinary/_codes/partition/since-cpp17",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/partition/since-cpp17",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/partition/since-cpp17.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],p={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class ForwardIt, class UnaryPredicate >\nForwardIt partition( ForwardIt first, ForwardIt last, UnaryPredicate p );\n\n// (2)\ntemplate< class ExecutionPolicy, class ForwardIt, class UnaryPredicate >\nForwardIt partition( ExecutionPolicy&& policy,\n                     ForwardIt first, ForwardIt last, UnaryPredicate p );\n")))}d.isMDXComponent=!0},66245:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={},i=void 0,l={unversionedId:"std/algo/ordinary/_codes/partition/since-cpp20",id:"std/algo/ordinary/_codes/partition/since-cpp20",title:"since-cpp20",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/partition/since-cpp20.mdx",sourceDirName:"std/algo/ordinary/_codes/partition",slug:"/std/algo/ordinary/_codes/partition/since-cpp20",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/partition/since-cpp20",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/partition/since-cpp20.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],p={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class ForwardIt, class UnaryPredicate >\nconstexpr ForwardIt partition( ForwardIt first, ForwardIt last, UnaryPredicate p );\n\n// (2)\ntemplate< class ExecutionPolicy, class ForwardIt, class UnaryPredicate >\nForwardIt partition( ExecutionPolicy&& policy,\n                     ForwardIt first, ForwardIt last, UnaryPredicate p );\n")))}d.isMDXComponent=!0},13680:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={},i=void 0,l={unversionedId:"std/algo/ordinary/_codes/partition/until-cpp17",id:"std/algo/ordinary/_codes/partition/until-cpp17",title:"until-cpp17",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/partition/until-cpp17.mdx",sourceDirName:"std/algo/ordinary/_codes/partition",slug:"/std/algo/ordinary/_codes/partition/until-cpp17",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/partition/until-cpp17",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/partition/until-cpp17.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],p={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class ForwardIt, class UnaryPredicate >\nForwardIt partition( ForwardIt first, ForwardIt last, UnaryPredicate p );\n")))}d.isMDXComponent=!0},44023:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>v,contentTitle:()=>k,default:()=>N,frontMatter:()=>y,metadata:()=>g,toc:()=>h});var a=n(87462),r=n(67294),o=n(3905),i=n(55059),l=n(22307),s=n(99801),c=n(18510),p=n(99372),d=(n(98088),n(14064)),u=n(13680),m=n(15700),f=n(66245);const y={title:"partition algorithm",sidebar_label:"partition(  )",description:"partition algorithm C++ documentation",hide_title:!0,tags:["algorithm","partition"],cppreference_origin_rel:"w/cpp/algorithm/partition"},k=void 0,g={unversionedId:"std/algo/ordinary/partition",id:"std/algo/ordinary/partition",title:"partition algorithm",description:"partition algorithm C++ documentation",source:"@site/content/docs/std/algo/ordinary/partition.mdx",sourceDirName:"std/algo/ordinary",slug:"/std/algo/ordinary/partition",permalink:"/CppLangNet/docs/std/algo/ordinary/partition",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/partition.mdx",tags:[{label:"algorithm",permalink:"/CppLangNet/docs/tags/algorithm"},{label:"partition",permalink:"/CppLangNet/docs/tags/partition"}],version:"current",frontMatter:{title:"partition algorithm",sidebar_label:"partition(  )",description:"partition algorithm C++ documentation",hide_title:!0,tags:["algorithm","partition"],cppreference_origin_rel:"w/cpp/algorithm/partition"},sidebar:"defaultSidebar",previous:{title:"is_partitioned(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/is_partitioned"},next:{title:"partition_copy(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/partition_copy"}},v={},h=[{value:"Parameters",id:"parameters",level:3},{value:"Type requirements",id:"type-requirements",level:4},{value:"Return value",id:"return-value",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"Possible implementation",id:"possible-implementation",level:3},{value:"Examples",id:"examples",level:3}],b={toc:h};function N(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"stdpartition-algorithm"},"std::partition() algorithm"),(0,o.kt)(s.Z,{content:{"since-cpp20":(0,o.kt)(f.default,{mdxType:"Signature_SinceCpp20"}),"since-cpp17":(0,o.kt)(m.default,{mdxType:"Signature_SinceCpp17"}),"until-cpp17":(0,o.kt)(u.default,{mdxType:"Signature_UntilCpp17"})},mdxType:"SwitchView"}),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"(1)")," Reorders the elements in the range [",(0,o.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,o.kt)("inlineCode",{parentName:"p"},"last"),") in such a way that all elements for which the predicate ",(0,o.kt)("inlineCode",{parentName:"p"},"p")," returns ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," precede the elements for which predicate ",(0,o.kt)("inlineCode",{parentName:"p"},"p")," returns ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,o.kt)("admonition",{parentName:"li",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Relative order of the elements is not preserved."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"(2)")," Same as ",(0,o.kt)("strong",{parentName:"p"},"(1)"),", but executed according to ",(0,o.kt)("inlineCode",{parentName:"p"},"policy"),"."),(0,o.kt)("admonition",{parentName:"li",title:"Overload Resolution",type:"important"},(0,o.kt)("p",{parentName:"admonition"},"These overloads participate in overload resolution only if"),(0,o.kt)(p.OS,{v:"cpp20",mdxType:"Until"}," ",(0,o.kt)("code",null,"std::is_execution_policy_v<std::decay_t<ExecutionPolicy>>")," ")," ",(0,o.kt)(p.U6,{v:"cpp20",mdxType:"Since"}," ",(0,o.kt)("code",null,"std::is_execution_policy_v<std::remove_cvref_t<ExecutionPolicy>>")," ")," is ",(0,o.kt)("code",null,"true"),"."))),(0,o.kt)("h3",{id:"parameters"},"Parameters"),(0,o.kt)(i.ZP,{mdxType:"SymbolTable"},(0,o.kt)(i.mN,{none:!0,noLink:!0,name:(0,o.kt)(r.Fragment,null," ",(0,o.kt)("code",null,"first")," ",(0,o.kt)("br",null)," ",(0,o.kt)("code",null,"last")," "),mdxType:"Symbol"},"The range of elements to reorder."),(0,o.kt)(i.mN,{none:!0,noLink:!0,name:(0,o.kt)("code",null,"policy"),mdxType:"Symbol"},"The execution policy to use. See ",(0,o.kt)("a",{href:"#"},"execution policy")," for details."),(0,o.kt)(i.mN,{none:!0,noLink:!0,name:(0,o.kt)("code",null,"p"),mdxType:"Symbol"},(0,o.kt)("p",null,"Unary predicate which returns ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," for the required element."),(0,o.kt)("p",null,"The expression ",(0,o.kt)("inlineCode",{parentName:"p"},"p(v)")," must be convertible to ",(0,o.kt)("inlineCode",{parentName:"p"},"bool")," for every argument ",(0,o.kt)("inlineCode",{parentName:"p"},"v")," of type (possibly const) ",(0,o.kt)("inlineCode",{parentName:"p"},"VT"),", where ",(0,o.kt)("inlineCode",{parentName:"p"},"VT")," is the value type of ",(0,o.kt)("inlineCode",{parentName:"p"},"InputIt"),", regardless of value category, and must not modify ",(0,o.kt)("inlineCode",{parentName:"p"},"v"),". Thus, a parameter type of ",(0,o.kt)("inlineCode",{parentName:"p"},"VT&")," is not allowed ",(0,o.kt)(p.U6,{v:"cpp11",mdxType:"Since"},", nor is ",(0,o.kt)("code",null,"VT")," unless for ",(0,o.kt)("code",null,"VT")," a move is equivalent to a copy."),"."))),(0,o.kt)("h4",{id:"type-requirements"},"Type requirements"),(0,o.kt)(i.ZP,{mdxType:"SymbolTable"},(0,o.kt)(i.mN,{none:!0,noLink:!0,name:(0,o.kt)("code",null,"ForwardIt"),mdxType:"Symbol"},(0,o.kt)("a",{href:"/docs/named_req/LegacyForwardIterator"},"LegacyForwardIterator")," ",(0,o.kt)("br",null),(0,o.kt)("a",{href:"/docs/named_req/ValueSwappable"},"ValueSwappable"))),(0,o.kt)("p",null,"Implementations may carry out the operation more efficiently if ",(0,o.kt)("inlineCode",{parentName:"p"},"ForwardIt")," satisfies ",(0,o.kt)("a",{parentName:"p",href:"/docs/named_req/LegacyBidirectionalIterator"},"LegacyBidirectionalIterator"),"."),(0,o.kt)(i.ZP,{mdxType:"SymbolTable"},(0,o.kt)(i.mN,{none:!0,noLink:!0,name:(0,o.kt)("code",null,"UnaryPredicate"),mdxType:"Symbol"},(0,o.kt)("a",{href:"/docs/named_req/Predicate"},"Predicate"))),(0,o.kt)("h3",{id:"return-value"},"Return value"),(0,o.kt)("p",null,"Iterator to the first element of the second group."),(0,o.kt)("h3",{id:"complexity"},"Complexity"),(0,o.kt)("p",null,"Given ",(0,o.kt)("inlineCode",{parentName:"p"},"N")," as ",(0,o.kt)("inlineCode",{parentName:"p"},"std::distance(first, last)"),":"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"(1)")," Exactly ",(0,o.kt)("inlineCode",{parentName:"p"},"N")," applications of ",(0,o.kt)("inlineCode",{parentName:"p"},"p"),".\nAt most ",(0,o.kt)("inlineCode",{parentName:"p"},"N / 2")," swaps, if ",(0,o.kt)("inlineCode",{parentName:"p"},"ForwardIt")," meets the requirements of ",(0,o.kt)("a",{parentName:"p",href:"/docs/named_req/LegacyForwardIterator"},"LegacyForwardIterator"),",",(0,o.kt)("br",{parentName:"p"}),"\n","",(0,o.kt)("inlineCode",{parentName:"p"},"N")," swaps otherwise."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"(2)")," ",(0,o.kt)("strong",{parentName:"p"},"O(N ","*"," log(N))")," swaps and ",(0,o.kt)("strong",{parentName:"p"},"O(N)")," applications of ",(0,o.kt)("inlineCode",{parentName:"p"},"p"),"."),(0,o.kt)("h3",{id:"exceptions"},"Exceptions"),(0,o.kt)("p",null,"The overloads with a template parameter named ",(0,o.kt)("inlineCode",{parentName:"p"},"ExecutionPolicy")," report errors as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If execution of a function invoked as part of the algorithm throws an exception and ",(0,o.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy")," is one of the ",(0,o.kt)("a",{parentName:"li",href:"#"},(0,o.kt)("strong",{parentName:"a"},"standard policies")),", ",(0,o.kt)("a",{parentName:"li",href:"#"},(0,o.kt)("inlineCode",{parentName:"a"},"std::terminate"))," is called.\nFor any other ",(0,o.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy"),", the behavior is ",(0,o.kt)(c.Z,{title:(0,o.kt)(d.ZP,{mdxType:"Term_ImplementationDefined"}),mdxType:"Tooltip"},(0,o.kt)("strong",{parentName:"li"},"implementation-defined")),"."),(0,o.kt)("li",{parentName:"ul"},"If the algorithm fails to allocate memory, ",(0,o.kt)("inlineCode",{parentName:"li"},"std::bad_alloc")," is thrown.")),(0,o.kt)("h3",{id:"possible-implementation"},"Possible implementation"),(0,o.kt)("details",null,(0,o.kt)("summary",null,"partition (1)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"template<class ForwardIt, class UnaryPredicate>\nForwardIt partition(ForwardIt first, ForwardIt last, UnaryPredicate p)\n{\n    first = std::find_if_not(first, last, p);\n    if (first == last)\n        return first;\n\n    for (auto i = std::next(first); i != last; ++i)\n        if (p(*i))\n        {\n            std::iter_swap(i, first);\n            ++first;\n        }\n\n    return first;\n}\n"))),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)(l.Z,{columns:["8fr","4fr"],mdxType:"Columns"},(0,o.kt)("div",null,(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='Main.cpp' showLineNumbers",title:"'Main.cpp'",showLineNumbers:!0},'#include <algorithm>\n#include <forward_list>\n#include <iostream>\n#include <iterator>\n#include <vector>\n\ntemplate<class ForwardIt>\nvoid quicksort(ForwardIt first, ForwardIt last)\n{\n    if (first == last)\n        return;\n\n    auto pivot = *std::next(first, std::distance(first, last) / 2);\n    auto middle1 = std::partition(first, last, [pivot](const auto& em)\n    {\n        return em < pivot;\n    });\n    auto middle2 = std::partition(middle1, last, [pivot](const auto& em)\n    {\n        return !(pivot < em);\n    });\n\n    quicksort(first, middle1);\n    quicksort(middle2, last);\n}\n\nint main()\n{\n    std::vector<int> v {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};\n    std::cout << "Original vector: ";\n    for (int elem : v)\n        std::cout << elem << \' \';\n\n    auto it = std::partition(v.begin(), v.end(), [](int i) {return i % 2 == 0;});\n\n    std::cout << "\\nPartitioned vector: ";\n    std::copy(std::begin(v), it, std::ostream_iterator<int>(std::cout, " "));\n    std::cout << "* ";\n    std::copy(it, std::end(v), std::ostream_iterator<int>(std::cout, " "));\n\n    std::forward_list<int> fl {1, 30, -4, 3, 5, -4, 1, 6, -8, 2, -5, 64, 1, 92};\n    std::cout << "\\nUnsorted list: ";\n    for (int n : fl)\n        std::cout << n << \' \';\n\n    quicksort(std::begin(fl), std::end(fl));\n    std::cout << "\\nSorted using quicksort: ";\n    for (int fi : fl)\n        std::cout << fi << \' \';\n    std::cout << \'\\n\';\n}\n'))),(0,o.kt)("div",null,(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Output"',title:'"Output"'},"Original vector: 0 1 2 3 4 5 6 7 8 9 \nPartitioned vector: 0 8 2 6 4 * 5 3 7 1 9 \nUnsorted list: 1 30 -4 3 5 -4 1 6 -8 2 -5 64 1 92 \nSorted using quicksort: -8 -5 -4 -4 1 1 1 2 3 5 6 30 64 92\n")))))}N.isMDXComponent=!0}}]);