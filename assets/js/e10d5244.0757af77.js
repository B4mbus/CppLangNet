"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[71092],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,h=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},96214:(e,t,n)=>{var a=n(64836);t.Z=void 0;var r=a(n(64938)),o=n(85893),i=(0,r.default)((0,o.jsx)("path",{d:"M9.4 16.6 4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0 4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z"}),"Code");t.Z=i},95175:(e,t,n)=>{var a=n(64836);t.Z=void 0;var r=a(n(64938)),o=n(85893),i=(0,r.default)((0,o.jsx)("path",{d:"m4 18 8.5-6L4 6v12zm9-12v12l8.5-6L13 6z"}),"FastForward");t.Z=i},71498:(e,t,n)=>{var a=n(64836);t.Z=void 0;var r=a(n(64938)),o=n(85893),i=(0,r.default)((0,o.jsx)("path",{d:"M11 18V6l-8.5 6 8.5 6zm.5-6 8.5 6V6l-8.5 6z"}),"FastRewind");t.Z=i},94265:(e,t,n)=>{var a=n(64836);t.Z=void 0;var r=a(n(64938)),o=n(85893),i=(0,r.default)([(0,o.jsx)("path",{d:"M14 14v1.17L17.17 12 14 8.83V10H6v4z",opacity:".3"},"0"),(0,o.jsx)("path",{d:"m20 12-8-8v4H4v8h8v4l8-8zM6 14v-4h8V8.83L17.17 12 14 15.17V14H6z"},"1")],"ForwardTwoTone");t.Z=i},53247:(e,t,n)=>{var a=n(64836);t.Z=void 0;var r=a(n(64938)),o=n(85893),i=(0,r.default)((0,o.jsx)("path",{d:"M6 19h4V5H6v14zm8-14v14h4V5h-4z"}),"Pause");t.Z=i},70655:(e,t,n)=>{var a=n(64836);t.Z=void 0;var r=a(n(64938)),o=n(85893),i=(0,r.default)((0,o.jsx)("path",{d:"M8 5v14l11-7z"}),"PlayArrow");t.Z=i},94229:(e,t,n)=>{var a=n(64836);t.Z=void 0;var r=a(n(64938)),o=n(85893),i=(0,r.default)((0,o.jsx)("path",{d:"M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z"}),"Settings");t.Z=i},86297:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>f,frontMatter:()=>u,metadata:()=>m,toc:()=>h});var a=n(87462),r=n(67294),o=n(3905),i=n(22307),l=n(66830),s=n(11687),c=n(42677);n(56693);const u={sidebar_label:"8. Structures",title:"Structures",description:"Lesson: structures basics in C++",tags:["structure","object","class","object-oriented-programming","object-oriented","oop"],hide_title:!0},p=void 0,m={unversionedId:"course/basics/structures",id:"course/basics/structures",title:"Structures",description:"Lesson: structures basics in C++",source:"@site/content/learn/course/basics/structures.mdx",sourceDirName:"course/basics",slug:"/course/basics/structures",permalink:"/CppLangNet/learn/course/basics/structures",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/learn/course/basics/structures.mdx",tags:[{label:"structure",permalink:"/CppLangNet/learn/tags/structure"},{label:"object",permalink:"/CppLangNet/learn/tags/object"},{label:"class",permalink:"/CppLangNet/learn/tags/class"},{label:"object-oriented-programming",permalink:"/CppLangNet/learn/tags/object-oriented-programming"},{label:"object-oriented",permalink:"/CppLangNet/learn/tags/object-oriented"},{label:"oop",permalink:"/CppLangNet/learn/tags/oop"}],version:"current",frontMatter:{sidebar_label:"8. Structures",title:"Structures",description:"Lesson: structures basics in C++",tags:["structure","object","class","object-oriented-programming","object-oriented","oop"],hide_title:!0},sidebar:"defaultSidebar",previous:{title:"Exercises - Functions",permalink:"/CppLangNet/learn/course/basics/functions/exercises"},next:{title:"Inheritance",permalink:"/CppLangNet/learn/course/basics/inheritance"}},d={},h=[{value:"Motivation",id:"motivation",level:2},{value:"Creating structures",id:"creating-structures",level:2},{value:"Objects",id:"objects",level:2},{value:"Accessing fields",id:"accessing-fields",level:3},{value:"Passing objects to functions",id:"passing-objects-to-functions",level:3},{value:"Objects inside arrays",id:"objects-inside-arrays",level:3},{value:"Default field values",id:"default-field-values",level:3},{value:"Potential errors",id:"potential-errors",level:2},{value:"No semicolon after definition",id:"no-semicolon-after-definition",level:3},{value:"Invalid order",id:"invalid-order",level:3},{value:"Modifying inside structure definition",id:"modifying-inside-structure-definition",level:3}],g={toc:h};function f(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"structures"},"Structures"),(0,o.kt)("p",null,"In this lesson, you learn how to create data types made up of many\nsmaller elements - what in C++ we call structures."),(0,o.kt)("h2",{id:"motivation"},"Motivation"),(0,o.kt)(s.Z,{center:!0,maxheight:200,alt:"Goblin enemy presentation",src:"/img/tutorials/course/basic/structures/GoblinEnemy.gif",desc:(0,o.kt)(r.Fragment,null,"Goblin image by ",(0,o.kt)("a",{href:"https://luizmelo.itch.io/monsters-creatures-fantasy"},"LuizMelo")),mdxType:"Image"}),(0,o.kt)("br",null),(0,o.kt)("p",null,"If, for example, when creating a game \ud83c\udfae, we want to include opponents in our program,\nwe will usually have to write down some information about each of them."),(0,o.kt)("p",null,"Consider what data about the enemies in the game can be useful? It can be, for example:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"name \ud83d\udc7e"),(0,o.kt)("li",{parentName:"ul"},"health \ud83d\udc9a"),(0,o.kt)("li",{parentName:"ul"},"strength \ud83d\udcaa")),(0,o.kt)("p",null,"etc."),(0,o.kt)("p",null,"Using the knowledge we have acquired so far, if we wanted to write a program that stores this\ninformation, we could do it like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <string>\n\nint main() {\n    std::string enemyName = "Goblin";\n    float       enemyHealth = 50;\n    float       enemyStrength = 12;\n    // ...\n}\n')),(0,o.kt)("p",null,"When we want to have more opponents in the game, we will encounter a problem,\nor rather inconvenience:"),(0,o.kt)("p",null,"If we use multiple arrays for this purpose:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"std::vector< std::string >  enemyNames;\nstd::vector< float >        enemyHealth;\nstd::vector< float >        enemyStrength;\n")),(0,o.kt)("p",null,"then each opponent will be described under the same index in these tables:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"enemyNames[ index ]")," describes the name"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"enemyHealth[ index ]")," describes life points"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"enemyStrength[ index ]")," describes the points of strength")),(0,o.kt)("admonition",{type:"important"},(0,o.kt)("p",{parentName:"admonition"},'This method involves "spreading" information about a single opponent across multiple tables.')),(0,o.kt)("p",null,"Adding one enemy to a set in such a program would look like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'enemyNames.push_back("Goblin");\nenemyHealth.push_back(50);\nenemyStrength.push_back(10);\n')),(0,o.kt)("p",null,"The more information we want to store about our opponents, the more bothersome\nit will be. Fortunately, ",(0,o.kt)("strong",{parentName:"p"},"structures")," come to our aid here."),(0,o.kt)("h2",{id:"creating-structures"},"Creating structures"),(0,o.kt)("p",null,"Let's recall what data we need to store:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"name \ud83d\udc7e"),(0,o.kt)("li",{parentName:"ul"},"life \ud83d\udc9a"),(0,o.kt)("li",{parentName:"ul"},"strength \ud83d\udcaa")),(0,o.kt)("p",null,"We are about to add a structure that allows us to create an object that contains these 3 things."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <string>\n\nstruct Enemy\n{\n    std::string name;\n    float       health;\n    float       strength;\n};\n\nint main()\n{\n    // We leave it empty for now\n}\n")),(0,o.kt)("p",null,"The above code introduces a new ",(0,o.kt)("strong",{parentName:"p"},"structure")," - ",(0,o.kt)("inlineCode",{parentName:"p"},"Enemy"),"."),(0,o.kt)("admonition",{title:"Remember",type:"important"},(0,o.kt)("p",{parentName:"admonition"},"A ",(0,o.kt)("strong",{parentName:"p"},"structure")," is a description, a pattern, a recipe for how to create\nan object (in this case, an enemy).")),(0,o.kt)("p",null,"To create a structure, we write its name after the ",(0,o.kt)("inlineCode",{parentName:"p"},"struct")," keyword, then we put its contents\nbetween the curly braces ",(0,o.kt)("inlineCode",{parentName:"p"},"{")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"}"),"."),(0,o.kt)("p",null,"The contents can be, for example, variables."),(0,o.kt)("div",{id:"semicolon-at-structure-end"}),(0,o.kt)("admonition",{title:"Semicolon",type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"Note the ",(0,o.kt)("strong",{parentName:"p"},"obligatory")," semicolon after the curly braces to close the structure definition:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"struct Enemy\n{\n    std::string name;\n    float       health;\n    float       strength;\n    // highlight-next-line\n};\n"))),(0,o.kt)("h2",{id:"objects"},"Objects"),(0,o.kt)("p",null,"Here's how to create an object that uses the ",(0,o.kt)("inlineCode",{parentName:"p"},"Enemy")," structure\n(which is treated as a formula for creating an object):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"// prism-push-types:Enemy\nint main()\n{\n    Enemy boss;\n}\n")),(0,o.kt)("p",null,"Thus, we contained all these 3 fields (",(0,o.kt)("inlineCode",{parentName:"p"},"name"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"health")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"strength"),") inside one variable ",(0,o.kt)("inlineCode",{parentName:"p"},"boss"),"."),(0,o.kt)("admonition",{title:"Naming",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"From now on we will say that it ",(0,o.kt)("inlineCode",{parentName:"p"},"boss")," is an object of the type ",(0,o.kt)("inlineCode",{parentName:"p"},"Enemy"),".\nThis means that it was created using ",(0,o.kt)("inlineCode",{parentName:"p"},"Enemy")," structure as a formula.")),(0,o.kt)("h3",{id:"accessing-fields"},"Accessing fields"),(0,o.kt)("p",null,"As mentioned above, it ",(0,o.kt)("inlineCode",{parentName:"p"},"boss")," contains 3 things (fields), i.e. it consists of three variables.\nTo get to a specific member of this object, we need to use the following notation:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title=\"\ud83d\udd39 Set the name of the boss to 'Ogre'\"",title:'"\ud83d\udd39',Set:!0,the:!0,name:!0,of:!0,boss:!0,to:!0,"'Ogre'\"":!0},'boss.name = "Ogre";\n')),(0,o.kt)("p",null,"We use a dot ",(0,o.kt)("inlineCode",{parentName:"p"},".")," to refer to the object's field. In the same way, we can e.g.\nmodify the enemy's ",(0,o.kt)("em",{parentName:"p"},"strength"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="\ud83d\udd39 Modifying the fields of an object"',title:'"\ud83d\udd39',Modifying:!0,the:!0,fields:!0,of:!0,an:!0,'object"':!0},'boss.strength   = 50; // I set bosses strength to 50\n\n// Boss enables "fury" skill - strength increases\n// Health decreases by a half\nboss.strength   += 25;\nboss.health     *= 0.5f;\n')),(0,o.kt)("p",null,"... or display information about it:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="\ud83d\udd39 Using object fields"',title:'"\ud83d\udd39',Using:!0,object:!0,'fields"':!0},'#include <iostream>\n#include <string>\n\nstruct Enemy\n{\n    std::string name;\n    float       health;\n    float       strength;\n};\n\nint main()\n{\n    // I create boss object\n    Enemy boss;\n    // I assign values to its fields\n    boss.name       = "Ogre";\n    boss.health     = 250;\n    boss.strength   = 50;\n\n    std::cout   << boss.name        << " has "\n                << boss.health      << " hp and "\n                << boss.strength    << " strength."\n                << std::endl;\n}\n')),(0,o.kt)("h3",{id:"passing-objects-to-functions"},"Passing objects to functions"),(0,o.kt)("p",null,"Nothing prevents you from creating a function that takes an object of a certain structure\nas a parameter. A good example will be just displaying information about an enemy:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="\ud83d\udd39 A function that displays information about an opponent"',title:'"\ud83d\udd39',A:!0,function:!0,that:!0,displays:!0,information:!0,about:!0,an:!0,'opponent"':!0},'void printEnemyInfo(Enemy enemy)\n{\n    std::cout   << enemy.name       << " has "\n                << enemy.health     << " hp and "\n                << enemy.strength   << " strength."\n                << std::endl;\n}\n')),(0,o.kt)("admonition",{title:"Order",type:"danger"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"printEnemyInfo")," requires a type ",(0,o.kt)("inlineCode",{parentName:"p"},"Enemy")," to exist ",(0,o.kt)("strong",{parentName:"p"},"before")," the function itself is defined.\nThis means we need to put the function underneath the structure creation (see example below).")),(0,o.kt)("p",null,'Using the above information, we will create a "game" that will have two opponents:'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"ordinary enemy \ud83d\udc79:",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("strong",{parentName:"p"},"Goblin warrior"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"60")," health, ",(0,o.kt)("inlineCode",{parentName:"p"},"14")," strength")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"boss \ud83d\udc80:",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("strong",{parentName:"p"},"Ogre"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"250")," health, ",(0,o.kt)("inlineCode",{parentName:"p"},"50")," strength"))),(0,o.kt)(l.Z,{maxLines:25,mdxType:"CustomCodeBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="\ud83d\udd39 A fragment of a game code with an Ogre and a Goblin" showLineNumbers',title:'"\ud83d\udd39',A:!0,fragment:!0,of:!0,a:!0,game:!0,code:!0,with:!0,an:!0,Ogre:!0,and:!0,'Goblin"':!0,showLineNumbers:!0},'#include <iostream>\n#include <string>\n\n// Creating struct\nstruct Enemy\n{\n    std::string name;\n    float       health;\n    float       strength;\n};\n\n// Function that display information about an enemy\nvoid printEnemyInfo(Enemy enemy)\n{\n    std::cout   << enemy.name       << " has "\n                << enemy.health     << " hp and "\n                << enemy.strength   << " strength."\n                << std::endl;\n}\n\n// The main function\nint main()\n{\n    // I create boss and goblin objects\n    Enemy boss;\n    Enemy goblin;\n\n    // I setup goblin object fields\n    goblin.name     = "Goblin warrior";\n    goblin.health   = 60;\n    goblin.strength = 14;\n\n    // I setup boss object fields\n    boss.name       = "Ogre";\n    boss.health     = 250;\n    boss.strength   = 50;\n\n    // and print information about them\n    printEnemyInfo(goblin);\n    printEnemyInfo(boss);\n}\n'))),(0,o.kt)("h3",{id:"objects-inside-arrays"},"Objects inside arrays"),(0,o.kt)("p",null,"We can put objects inside arrays just like normal variables:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="\ud83d\udd39 Vector of enemies"',title:'"\ud83d\udd39',Vector:!0,of:!0,'enemies"':!0},"std::vector< Enemy > enemies;\n")),(0,o.kt)("p",null,"Below is an example of how to add to such an array:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="\ud83d\udd39 Adding objects inside vector"',title:'"\ud83d\udd39',Adding:!0,objects:!0,inside:!0,'vector"':!0},'// ...\n\nint main()\n{\n    std::vector< Enemy > enemies;\n\n    // (optional)\n    // A code block to limit the scope\n    // of local variables inside\n    {\n        // I create goblin variable \ud83d\udc49 locally \ud83d\udc48\n        Enemy goblin;\n        // I setup the fields\n        goblin.name     = "Goblin warrior";\n        goblin.health   = 60;\n        goblin.strength = 14;\n\n        // I add the object to the vector\n        // highlight-next-line\n        enemies.push_back( goblin );\n    }\n    // \ud83d\udc48 from this moment, goblin exists ONLY inside the vector\n\n    // Print every enemy in the vector\n    for (Enemy enemy : enemies)\n        printEnemyInfo(enemy);\n}\n')),(0,o.kt)("admonition",{title:"Example",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"After reading this lesson, review this sample program: ",(0,o.kt)("a",{parentName:"p",href:"../example-programs/combat-arena"},(0,o.kt)("strong",{parentName:"a"},"\ud83d\udc7e Battle Arena")),"\nand its overview. There you will see how arrays and structures are used in practice.")),(0,o.kt)("h3",{id:"default-field-values"},"Default field values"),(0,o.kt)("p",null,"We can give the structure elements default values, so we won't have to fill them in every time."),(0,o.kt)("p",null,"A good example of using the default value is a variable that stores the total amount of damage\nan opponent has dealt. To start with, for each enemy, this value will have to be equal ",(0,o.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,o.kt)("admonition",{title:"Field values",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"If you leave the structure field with no default value , e.g .:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"struct Car\n{\n    int numberOfWheels;\n};\n")),(0,o.kt)("p",{parentName:"admonition"},"it doesn't mean ",(0,o.kt)("inlineCode",{parentName:"p"},"numberOfWheels")," will be set to ",(0,o.kt)("inlineCode",{parentName:"p"},"0")," at the moment of object creation,\nyou have to do it ",(0,o.kt)("strong",{parentName:"p"},"manually"),"!")),(0,o.kt)("p",null,"To assign a default value to a structure field, we use the usual initialization,\nknown for creating variables:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title=\"\ud83d\udd39 Default value for 'totalDamage' \u2694\"",title:'"\ud83d\udd39',Default:!0,value:!0,for:!0,"'totalDamage'":!0,'\u2694"':!0},"// Creating the structure\nstruct Enemy\n{\n    std::string name;\n    float       health;\n    float       strength;\n\n    // highlight-next-line\n    float       totalDamage = 0;\n};\n")),(0,o.kt)("p",null,"Now when we create some enemy:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"Enemy snake; // snake as an example\n")),(0,o.kt)("p",null,"then the value of its field ",(0,o.kt)("inlineCode",{parentName:"p"},"totalDamage")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"snake.totalDamage\n")),(0,o.kt)("p",null,"will be set to ",(0,o.kt)("inlineCode",{parentName:"p"},"0")," automatically."),(0,o.kt)("p",null,"You can find out about it, e.g. by printing it:"),(0,o.kt)(i.Z,{columns:["2fr","1fr"],mdxType:"Columns"},(0,o.kt)("div",null,(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'int main() {\n    Enemy snake;\n    snake.name = "Snake";\n    // \ud83d\udfe1 Note, I\'m not setting "totalDamage" manually\n\n    std::cout   << snake.name\n                << " has dealt "\n                << snake.totalDamage\n                << " total damage";\n}\n'))),(0,o.kt)("div",null,(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="\ud83d\udd39 Result"',title:'"\ud83d\udd39','Result"':!0},"Snake has dealt 0 total damage\n")))),(0,o.kt)("h2",{id:"potential-errors"},"Potential errors"),(0,o.kt)(c.ZP,{mdxType:"ImproveSection"}),(0,o.kt)("p",null,"Here is a list of common errors related to this lesson:"),(0,o.kt)("h3",{id:"no-semicolon-after-definition"},"No semicolon after definition"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"#semicolon-at-structure-end"},"Just for the record.")),(0,o.kt)("h3",{id:"invalid-order"},"Invalid order"),(0,o.kt)("p",null,"Make sure the structure is defined ",(0,o.kt)("strong",{parentName:"p"},"before")," using it for the first time."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Wrong")," code example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="\ud83d\udd34 Incorrect order"',title:'"\ud83d\udd34',Incorrect:!0,'order"':!0},'// \u274c Error: usage of type "Enemy" before its definition\n// error-next-line\nvoid printEnemyInfo(Enemy enemy)\n{\n    std::cout   << enemy.name       << " has "\n                << enemy.health     << " hp and "\n                << enemy.strength   << " strength."\n                << std::endl;\n}\n\n// Creating the structure\nstruct Enemy\n{\n    std::string name;\n    float       health;\n    float       strength;\n};\n')),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"This problem can be solved in a different, more convenient way than moving the function\n",(0,o.kt)("inlineCode",{parentName:"p"},"printEnemyInfo")," below the structure definition, with the so-called ",(0,o.kt)("em",{parentName:"p"},"forward declaration"),".\nWe will mention it later in the course.")),(0,o.kt)("h3",{id:"modifying-inside-structure-definition"},"Modifying inside structure definition"),(0,o.kt)("p",null,"Variables ",(0,o.kt)("strong",{parentName:"p"},"cannot")," be modified inside a structure definition.\nIt is only possible to assign an initial value:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="\ud83d\udd34 Attempt to modify field in a wrong place"',title:'"\ud83d\udd34',Attempt:!0,to:!0,modify:!0,field:!0,in:!0,a:!0,wrong:!0,'place"':!0},"struct Enemy\n{\n    std::string name;\n    float       health;\n    float       strength;\n\n    int         totalDamage = 0; // OK \u2705\n\n    // \u274c Error: Attempt to modify field in a wrong place\n    // error-next-line\n    health = 250;\n};\n")))}f.isMDXComponent=!0},42677:(e,t,n)=>{n.d(t,{ZP:()=>i});var a=n(87462),r=(n(67294),n(3905));const o={toc:[]};function i(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"important"},(0,r.kt)("p",{parentName:"admonition"},"This section requires improvement. You can help by editing this doc page.")))}i.isMDXComponent=!0},56693:(e,t,n)=>{n.d(t,{ZP:()=>i});var a=n(87462),r=(n(67294),n(3905));const o={toc:[]};function i(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Note, this article is not finished! You can help by editing this doc page.")))}i.isMDXComponent=!0},18169:(e,t,n)=>{function a(e){return"object"!=typeof e?"default":"highlight"===e.kind?e.variant:"default"}function r(e){return"object"!=typeof e?e:"highlight"===e.kind?e.content:e}function o(e,t){return{kind:"highlight",variant:t??"default",content:e}}function i(e,t,n,a){return{kind:"block",startLine:e,endLine:t,startColumn:n,endColumn:a}}function l(e,t,n){return{kind:"range",startLine:e,endLine:e,startColumn:t,endColumn:n}}function s(e){const t=getComputedStyle(e),n=parseFloat(t.paddingLeft)+parseFloat(t.paddingRight),a=parseFloat(t.borderLeftWidth)+parseFloat(t.borderRightWidth);return e.offsetWidth-n-a}function c(e,t,n){const a=function(e,t){let n=0,a=null;return function r(o){if(o.nodeType!==Node.TEXT_NODE)for(let i=0;i<o.childNodes.length;i++){const l=o.childNodes[i];if(r(l),a)return;if(l.nodeType!==Node.ELEMENT_NODE)continue;const c=l;if(c.classList.contains("token-line")){if(n===t){const t=c.firstChild;let n=0;(t.nodeType!==Node.ELEMENT_NODE||!t.classList.contains("token"))&&(n=t.getBoundingClientRect().width+2);const r=c.getBoundingClientRect(),o=s(c);return e.getBoundingClientRect(),void(a={top:r.top,left:r.left+n,width:o-n,height:r.height})}++n}}}(e),a}(e,t);if(!a)return null;const r=n.getBoundingClientRect();return a.top-=r.top,a.left-=r.left,a}function u(e,t){return c(e,t,e)}function p(e,t){if("number"==typeof t){const n=u(e,t);if(!n)return null;const a=s(e);return{top:n.top,left:n.left,width:.8*a,height:n.height}}return"block"===t.kind?function(e,t){const n=u(e,t.startLine),a=u(e,t.endLine);if(!n||!a)return null;const r=.61*parseFloat(getComputedStyle(e).fontSize||"16"),o=s(e),i=n.left+t.startColumn*r,l=(t.endColumn-t.startColumn)*r;return{top:n.top,left:i,width:0===t.endColumn?o:l,height:a.top+a.height-n.top}}(e,t):function(e,t){let n=0,a=0,r=null,o=0,i=null,l=0;if(function e(s){if(s.nodeType===Node.TEXT_NODE){const e=s.textContent||"";for(let c=0;c<e.length;c++){if(n===t.startLine&&a===t.startColumn&&(r=s,o=c),r&&n===t.endLine&&a===t.endColumn)return i=s,void(l=c);a++}}else for(let t=0;t<s.childNodes.length;t++){const r=s.childNodes[t];if(e(r),r.classList&&r.classList.contains("token-line")&&(n++,a=0),i)return}}(e),!r||!i)return{top:0,left:0,width:0,height:0};const s=function(){const e=document.createRange();e.setStart(r,o),e.setEnd(i,l);const t=e.getBoundingClientRect();return{top:t.top,left:t.left,width:t.width,height:t.height}}(),c=e.getBoundingClientRect();return{top:s.top-c.top,left:s.left-c.left,width:s.width,height:s.height}}(e,t)}function m(e){return{...e}}n.d(t,{CE:()=>c,Je:()=>p,MU:()=>r,Pb:()=>i,Qb:()=>m,US:()=>a,_V:()=>o,r7:()=>l})},22307:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(87462),r=n(67294);const o="columns_Terr";function i(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,r.createElement("div",(0,a.Z)({className:o,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}i.isMDXComponent=!0},66830:(e,t,n)=>{n.d(t,{Z:()=>j});var a=n(67294),r=n(60614),o=n(96214),i=n(73935);function l(e){if(!e.container)return null;const[t,n]=a.useState(null);return(0,a.useEffect)((()=>{const t=setInterval((()=>{const a=e.getPortalTarget();a&&(n(a),clearInterval(t))}),200);return()=>clearInterval(t)}),[e.container]),function(e,t,n){const r=a.useRef((()=>{const e=document.createElement("div");if(n.style)for(const t in n.style)e.style[t]=n.style[t];return e})());return(0,a.useEffect)((()=>{if(t)return t.prepend(r.current),()=>{t.removeChild(r.current)}}),[t,r]),t?(0,i.createPortal)(e,r.current):null}(e.children,t,{style:e.portalStyle})}function s(e){return a.createElement("button",{style:{marginRight:5,cursor:"pointer"},title:"Show the full source",onClick:e.onClick},a.createElement(o.Z,{fontSize:"small"}))}function c(e){return a.createElement(l,{container:e.container,getPortalTarget:()=>e.container.querySelector("pre+div"),portalStyle:e.portalStyle},e.children)}const u=function(e){return a.createElement(c,{container:e.container},a.createElement(s,{onClick:e.onShowFullCode}))};var p=n(18169),m=n(93946),d=n(70655),h=n(53247),g=n(71498),f=n(95175),k=n(94229);function b(e){return a.createElement("div",{className:"insp-flow-control-buttons"},e.running&&a.createElement(m.Z,{title:"Pause",color:"success",onClick:e.onPause},a.createElement(h.Z,null)),!e.running&&a.createElement(a.Fragment,null,"(paused)\xa0",a.createElement(m.Z,{title:"Resume",color:"success",onClick:e.onResume},a.createElement(d.Z,null))),a.createElement(m.Z,{title:"Step Backward",color:"info",onClick:e.onStepBackward},a.createElement(g.Z,null)),a.createElement(m.Z,{title:"Step Forward",color:"info",onClick:e.onStepForward},a.createElement(f.Z,null)),a.createElement(m.Z,{title:"Settings",color:"inherit"},a.createElement(k.Z,null)),a.createElement("span",{style:{marginLeft:5}},"Step"),a.createElement("span",{style:{minWidth:30,textAlign:"right"}},e.currentStep||1),"\xa0of ",e.totalSteps||1)}var y=n(94265);const v=function(e){const t=e.variant??"default",n=e.lineBounds.top+e.lineBounds.height/2;return a.createElement("span",{key:e.key,"data-variant":t,className:"insp-code-arrow",style:{top:n,left:`calc(${e.lineBounds.left}px - 2rem)`}},a.createElement(y.Z,{color:"inherit",fontSize:"inherit"}))};const N=function(e){const t=e.variant??"default";return a.createElement("div",{key:e.key,className:"insp-block-highlight","data-variant":t,style:{top:e.bounds.top-2,left:e.bounds.left-2,width:`calc(min(${e.bounds.width+4}px, 80vw))`,height:e.bounds.height+4}})};function w(e){return a.createElement(l,{container:e.container,getPortalTarget:()=>e.container.querySelector("pre>code"),portalStyle:e.portalStyle},e.children)}function E(e){return a.createElement(l,{container:e.container,getPortalTarget:()=>e.container.querySelector(".theme-code-block"),portalStyle:e.portalStyle},e.children)}function C(e){const[t,n]=a.useState(0),[r,o]=a.useState(null);let i;e.setup.stages&&(i=e.setup.stages[t]);const l=i?.highlights??[],s=i?.arrows??[],c=[],u=[];if(e.container&&l.length>0){const t=e.container.querySelector("pre>code");t&&(function(e,t,n){for(const a of t){const t=(0,p.MU)(a),r=(0,p.Je)(e,t);n.push(r)}}(t,l,c),function(e,t,n,a){for(const r of n){const n=(0,p.CE)(e,r.line,t);a.push({arrow:r,bounds:n})}}(t,e.container,s,u))}const m=null!==r,d=e.setup.stages.length,h=()=>{n((e=>(e+1)%d))},g=()=>{o(setInterval((()=>{h()}),e.setup.autoPlayInterval||1e3))},f=()=>{r&&(clearInterval(r),o(null))};return(0,a.useEffect)((()=>(e.setup.runOnStart&&g(),()=>{f()})),[]),a.createElement(a.Fragment,null,e.setup.showControlButtons&&a.createElement(b,{running:m,onResume:g,onPause:f,onStepForward:()=>{f(),h()},onStepBackward:()=>{f(),n((e=>(e-1+d)%d))},currentStep:t+1,totalSteps:d}),a.createElement(w,{container:e.container},c.map(((e,n)=>e&&a.createElement(N,{key:`hgh-${t}-${n}`,bounds:e,variant:(0,p.US)(l[n])})))),a.createElement(E,{container:e.container,portalStyle:{zIndex:1,position:"absolute"}},u.map(((e,n)=>a.createElement(v,{key:`arr-${t}-${n}`,arrow:e.arrow,lineBounds:e.bounds,variant:e.arrow.variant})))))}function j(e){const t=(0,a.useRef)(null),n=(0,a.useRef)(null),[o,i]=a.useState(!1),[l,s]=a.useState(null),[c,p]=a.useState(null);(0,a.useEffect)((()=>{s(t.current)}),[t]),(0,a.useEffect)((()=>{p(n.current)}),[n]);const m="number"==typeof e.maxLines,d={};if(m){const t=1.43*Math.max(5,e.maxLines);d.height=`${t}em`}(0,a.useEffect)((()=>{const e=o?n.current:t.current;if(!e)return;const a=e.querySelector(".prism-code");a&&(a.style.overflowY="auto",a.style.overflowX="auto");const r=e.querySelector(".prism-code")?.parentNode;r&&(r.style.display="flex",r.style.height=`${d.height}`,r.style.overflow="hidden",r.style.resize="vertical",r.style.minHeight="40px",r.style.maxHeight="90vh",r.style.flexDirection="column")}),[o,t,n]);const h=()=>{const e=()=>i(!o),t=document;t.startViewTransition?t.startViewTransition(e):e()};return a.createElement(a.Fragment,null,e.inspectionSetup&&a.createElement(C,{container:l,setup:e.inspectionSetup}),a.createElement("div",{ref:t,style:{display:o?"none":"block"}},e.children),e.fullCode&&a.createElement(a.Fragment,null,a.createElement(u,{container:l,onShowFullCode:h}),a.createElement("div",{ref:n,style:{display:o?"block":"none"}},"string"==typeof e.fullCode?a.createElement(r.Z,{language:"cpp"},e.fullCode):e.fullCode),a.createElement(u,{container:c,onShowFullCode:h})))}j.isMDXComponent=!0},11687:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(87462),r=n(67294),o=n(44996),i=n(72412);function l(e){let t=null;if(e.desc){const n=e.center?{textAlign:"center",display:"block"}:{};t=r.createElement("small",{style:n},(0,i.Z)(e.desc))}const n=e.fullwidth||e.center,l={border:e.border?"1px solid gray":void 0,display:n?"block":"inline-block"},s=e.style||{};s.borderRadius=e.borderRadius||void 0,s.minWidth=e.minwidth||void 0,s.width=e.width||void 0,s.maxWidth=e.maxwidth||void 0,s.minHeight=e.minheight||void 0,s.height=e.height||void 0,s.maxHeight=e.maxheight||void 0,s.display="block",s.imageRendering="-webkit-optimize-contrast",e.center&&(s.margin="0 auto");const c={...e};return"string"==typeof e.src&&(c.src=e.src.startsWith("/img/")?(0,o.Z)(e.src):e.src),delete c.border,delete c.borderRadius,delete c.center,delete c.fullwidth,delete c.style,delete c.minwidth,delete c.width,delete c.maxwidth,delete c.minheight,delete c.height,delete c.maxheight,delete c.desc,r.createElement(r.Fragment,null,r.createElement("div",{style:l},r.createElement("img",(0,a.Z)({},c,{style:s}))),t)}l.isMDXComponent=!0},72412:(e,t,n)=>{function a(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>a})}}]);