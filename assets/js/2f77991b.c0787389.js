"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[40346],{98088:(e,t,n)=>{n.d(t,{ZP:()=>l});var a=n(87462),i=(n(67294),n(3905));const r={toc:[]};function l(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},r,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("b",null,"Undefined behaviour")," is a property of a program that's incorrect, but likely compiles. It is incorrect in a way, that the error is only invoked in certain conditions at runtime.",(0,i.kt)("p",null,"Common cases include: ",(0,i.kt)("strong",{parentName:"p"},"out of bounds access"),", ",(0,i.kt)("strong",{parentName:"p"},"reading uninitialized objects"),", ",(0,i.kt)("strong",{parentName:"p"},"dangling pointers/references")," or ",(0,i.kt)("strong",{parentName:"p"},"signed overflow"),"."))}l.isMDXComponent=!0},85162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294),i=n(86010);const r="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(r,l),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(87462),i=n(67294),r=n(86010),l=n(12466),o=n(76775),s=n(91980),c=n(67392),d=n(50012);function u(e){return function(e){return i.Children.map(e,(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:i}}=e;return{value:t,label:n,attributes:a,default:i}}))}function m(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function v(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(r),(0,i.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=m(e),[l,o]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[s,c]=v({queryString:n,groupId:a}),[u,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,d.Nk)(n);return[a,(0,i.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),g=(()=>{const e=s??u;return p({value:e,tabValues:r})?e:null})();(0,i.useLayoutEffect)((()=>{g&&o(g)}),[g]);return{selectedValue:l,selectValue:(0,i.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),c(e),f(e)}),[c,f,r]),tabValues:r}}var g=n(72389);const h="tabList__CuJ",k="tabItem_LNqP";function y(e){let{className:t,block:n,selectedValue:o,selectValue:s,tabValues:c}=e;const d=[],{blockElementScrollPositionUntilNextRender:u}=(0,l.o5)(),m=e=>{const t=e.currentTarget,n=d.indexOf(t),a=c[n].value;a!==o&&(u(t),s(a))},p=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=d.indexOf(e.currentTarget)+1;t=d[n]??d[0];break}case"ArrowLeft":{const n=d.indexOf(e.currentTarget)-1;t=d[n]??d[d.length-1];break}}t?.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:l}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>d.push(e),onKeyDown:p,onClick:m},l,{className:(0,r.Z)("tabs__item",k,l?.className,{"tabs__item--active":o===t})}),n??t)})))}function _(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function b(e){const t=f(e);return i.createElement("div",{className:(0,r.Z)("tabs-container",h)},i.createElement(y,(0,a.Z)({},e,t)),i.createElement(_,(0,a.Z)({},e,t)))}function N(e){const t=(0,g.Z)();return i.createElement(b,(0,a.Z)({key:String(t)},e))}},98839:(e,t,n)=>{n.d(t,{z:()=>a});const a=n(67294).createContext({name:"Unknown",folder:"unknown"})},22307:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(87462),i=n(67294);const r="columns_Terr";function l(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,i.createElement("div",(0,a.Z)({className:r,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}l.isMDXComponent=!0},99801:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),i=n(74866),r=n(85162),l=n(99372),o=n(72412);const s={};function c(e){const t=e.content||{};return a.createElement(i.Z,null,Object.entries(t).map(((e,t)=>{let[n,c]=e;return c.value||c.simplified||c.detailed?a.createElement(r.Z,{value:n,label:l.gJ.get(n),default:c.default||0==t},c.simplified?a.createElement(a.Fragment,null,a.createElement(i.Z,{groupId:"view_mode",className:s.smallTabs},a.createElement(r.Z,{value:"simplified",label:"Simplified",default:!0},(0,o.Z)(c.simplified)),a.createElement(r.Z,{value:"detailed",label:"Detailed"},(0,o.Z)(c.detailed)))):c.value):a.createElement(r.Z,{value:n,label:l.gJ.get(n),default:0==t},(0,o.Z)(c))})))}},55059:(e,t,n)=>{n.d(t,{mN:()=>d,ZP:()=>c});var a=n(67294),i=n(72412);const r={symbolTable:"symbolTable_yosy",symbolName:"symbolName__gUy",symbolDesc:"symbolDesc_wDaQ",symbolProp:"symbolProp_oAcv",accessPublic:"accessPublic_LfqG",accessProtected:"accessProtected_bDL6",accessPrivate:"accessPrivate_Ab5O",modStatic:"modStatic_ZSC5",modConstexpr:"modConstexpr_iypt",modConst:"modConst_osuL",modVolatile:"modVolatile_ePYM",modVirtual:"modVirtual_jNz7"};var l=n(98839);const o={None:{Order:0,ShortName:"",FullName:"",Style:r.accessPublic},Public:{Order:1,ShortName:"pub",FullName:"public",Style:r.accessPublic},Protected:{Order:2,ShortName:"prot",FullName:"protected",Style:r.accessProtected},Private:{Order:3,ShortName:"priv",FullName:"private",Style:r.accessPrivate}},s=e=>e.none?o.None:e.pub||e.public?o.Public:e.prot||e.protected?o.Protected:e.priv||e.private?o.Private:o.Public;function c(e){return(t=>{if(0===t.length)return null;const n=t.sort(((e,t)=>s(e).Order<s(t).Order));return a.createElement("table",{"data-no-traits":`${e.noTraits||"false"}`,className:r.symbolTable},a.createElement("tbody",null,n))})(a.Children.toArray(e.children))}function d(e){a.useContext(l.z);let t=(0,i.Z)(e.name),n=null;e.desc?n=e.desc:e.children&&(n=e.children);const o=e.linkName||e.autoLink;!e.noLink&&o&&(t=a.createElement("a",{href:e.link||`${e.linkName||e.name}`},t));const c=(e,t,n)=>!0===e?a.createElement("span",{className:r[t]},n):null;return a.createElement("tr",null,!e.none&&a.createElement("td",{className:r.symbolProp},(e=>{const t=s(e);return a.createElement("span",{className:t.Style},t.ShortName)})(e),c(e.static,"modStatic","static"),c(e.constexpr,"modConstexpr","constexpr"),c(e.const,"modConst","const"),c(e.volatile,"modVolatile","volatile"),c(e.virtual,"modVirtual","virtual")),a.createElement("td",{className:r.symbolName},t),a.createElement("td",{className:r.symbolDesc},(0,i.Z)(n)))}d.isMDXComponent=!0,c.isMDXComponent=!0,c.Symbol=d},18510:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),i=n(44996),r=n(34386),l=n(72412);const o="TooltipContent_Lvru",s="TooltipTitle_ukF2";function c(e){let{url:t,title:n,maxWidth:c,children:d}=e;let u=c||"clamp(250px, 25vw, 800px)";"string"==typeof u&&u.endsWith("vw")&&(u=`clamp(250px, ${u}, 800px)`);const m="function"==typeof n?a.createElement(n):n,p=(t||"").startsWith("/")?(0,i.Z)(t):t,v=t?a.createElement("a",{href:p,target:"_blank",rel:"noreferrer"},d):d;return a.createElement(r.Z,{componentsProps:{tooltip:{style:{maxWidth:u}}},title:a.createElement("span",{className:s},(0,l.Z)(m)),placement:"top",arrow:!0},a.createElement("span",{className:o},v))}c.isMDXComponent=!0},99372:(e,t,n)=>{n.d(t,{gJ:()=>d,eH:()=>v,U6:()=>m,OS:()=>p});var a=n(67294),i=n(95999);const r="markedText_c6kK",l="since_c1Q3",o="until_jXK6",s="removed_A_Kf",c="versionNumber_BiUX",d=new Map;function u(e){let{children:t,className:n}=e;return a.createElement("span",{className:r+(n?" "+n:"")},t)}function m(e){let{children:t,v:n}=e;return a.createElement(u,{className:l},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",d.get(`since-${n}`),")")))}function p(e){let{children:t,v:n}=e;return a.createElement(u,{className:o},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",d.get(`until-${n}`),")")))}function v(e){let{children:t,v:n}=e;return a.createElement(u,{className:s},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",d.get(`removed-${n}`),")")))}d.set("cpp98","C++98"),d.set("cpp03","C++03"),d.set("cpp11","C++11"),d.set("cpp14","C++14"),d.set("cpp17","C++17"),d.set("cpp20","C++20"),d.set("cpp23","C++23"),d.set("deprecated-",a.createElement(i.Z,null,"deprecated")),d.set("deprecated-cpp98",a.createElement(i.Z,null,"deprecated in C++98")),d.set("deprecated-cpp03",a.createElement(i.Z,null,"deprecated in C++03")),d.set("deprecated-cpp11",a.createElement(i.Z,null,"deprecated in C++11")),d.set("deprecated-cpp14",a.createElement(i.Z,null,"deprecated in C++14")),d.set("deprecated-cpp17",a.createElement(i.Z,null,"deprecated in C++17")),d.set("deprecated-cpp20",a.createElement(i.Z,null,"deprecated in C++20")),d.set("deprecated-cpp23",a.createElement(i.Z,null,"deprecated in C++23")),d.set("until-cpp98",a.createElement(i.Z,null,"until C++98")),d.set("until-cpp03",a.createElement(i.Z,null,"until C++03")),d.set("until-cpp11",a.createElement(i.Z,null,"until C++11")),d.set("until-cpp14",a.createElement(i.Z,null,"until C++14")),d.set("until-cpp17",a.createElement(i.Z,null,"until C++17")),d.set("until-cpp20",a.createElement(i.Z,null,"until C++20")),d.set("until-cpp23",a.createElement(i.Z,null,"until C++23")),d.set("since-cpp98",a.createElement(i.Z,null,"since C++98")),d.set("since-cpp03",a.createElement(i.Z,null,"since C++03")),d.set("since-cpp11",a.createElement(i.Z,null,"since C++11")),d.set("since-cpp14",a.createElement(i.Z,null,"since C++14")),d.set("since-cpp17",a.createElement(i.Z,null,"since C++17")),d.set("since-cpp20",a.createElement(i.Z,null,"since C++20")),d.set("since-cpp23",a.createElement(i.Z,null,"since C++23")),d.set("removed-",a.createElement(i.Z,null,"deleted")),d.set("removed-cpp98",a.createElement(i.Z,null,"removed in C++98")),d.set("removed-cpp03",a.createElement(i.Z,null,"removed in C++03")),d.set("removed-cpp11",a.createElement(i.Z,null,"removed in C++11")),d.set("removed-cpp14",a.createElement(i.Z,null,"removed in C++14")),d.set("removed-cpp17",a.createElement(i.Z,null,"removed in C++17")),d.set("removed-cpp20",a.createElement(i.Z,null,"removed in C++20")),d.set("removed-cpp23",a.createElement(i.Z,null,"removed in C++23"))},72412:(e,t,n)=>{function a(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>a})},17790:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var a=n(87462),i=(n(67294),n(3905));const r={},l=void 0,o={unversionedId:"std/algo/ordinary/_codes/uninitialized_move_n/since-cpp17",id:"std/algo/ordinary/_codes/uninitialized_move_n/since-cpp17",title:"since-cpp17",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/uninitialized_move_n/since-cpp17.mdx",sourceDirName:"std/algo/ordinary/_codes/uninitialized_move_n",slug:"/std/algo/ordinary/_codes/uninitialized_move_n/since-cpp17",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/uninitialized_move_n/since-cpp17",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/uninitialized_move_n/since-cpp17.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],d={toc:c};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class InputIt, class Size, class NoThrowForwardIt >\nstd::pair<InputIt, NoThrowForwardIt>\n    uninitialized_move_n( InputIt first, Size count, NoThrowForwardIt d_first );\n\n// (2)\ntemplate< class ExecutionPolicy, class ForwardIt, class Size, class NoThrowForwardIt >\nstd::pair<ForwardIt, NoThrowForwardIt>\n    uninitialized_move_n( ExecutionPolicy&& policy, ForwardIt first, Size count, NoThrowForwardIt d_first );\n")))}u.isMDXComponent=!0},60366:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>v,default:()=>b,frontMatter:()=>p,metadata:()=>f,toc:()=>h});var a=n(87462),i=n(67294),r=n(3905),l=n(55059),o=n(22307),s=n(99801),c=n(18510),d=n(99372),u=n(98088),m=n(17790);const p={title:"uninitialized_move_n algorithm",sidebar_label:"uninitialized_move_n(  )",description:"uninitialized_move_n algorithm C++ documentation",hide_title:!0,tags:["algorithm","uninitialized_move_n","uninitialized","move","move_n"],cppreference_origin_rel:"w/cpp/algorithm/uninitialized_move_n"},v=void 0,f={unversionedId:"std/algo/ordinary/uninitialized_move_n",id:"std/algo/ordinary/uninitialized_move_n",title:"uninitialized_move_n algorithm",description:"uninitialized_move_n algorithm C++ documentation",source:"@site/content/docs/std/algo/ordinary/uninitialized_move_n.mdx",sourceDirName:"std/algo/ordinary",slug:"/std/algo/ordinary/uninitialized_move_n",permalink:"/CppLangNet/docs/std/algo/ordinary/uninitialized_move_n",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/uninitialized_move_n.mdx",tags:[{label:"algorithm",permalink:"/CppLangNet/docs/tags/algorithm"},{label:"uninitialized_move_n",permalink:"/CppLangNet/docs/tags/uninitialized-move-n"},{label:"uninitialized",permalink:"/CppLangNet/docs/tags/uninitialized"},{label:"move",permalink:"/CppLangNet/docs/tags/move"},{label:"move_n",permalink:"/CppLangNet/docs/tags/move-n"}],version:"current",frontMatter:{title:"uninitialized_move_n algorithm",sidebar_label:"uninitialized_move_n(  )",description:"uninitialized_move_n algorithm C++ documentation",hide_title:!0,tags:["algorithm","uninitialized_move_n","uninitialized","move","move_n"],cppreference_origin_rel:"w/cpp/algorithm/uninitialized_move_n"},sidebar:"defaultSidebar",previous:{title:"uninitialized_move(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/uninitialized_move"},next:{title:"uninitialized_default_construct(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/uninitialized_default_construct"}},g={},h=[{value:"Parameters",id:"parameters",level:3},{value:"Type requirements",id:"type-requirements",level:4},{value:"Return value",id:"return-value",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"Possible implementation",id:"possible-implementation",level:3},{value:"Examples",id:"examples",level:3}],k=(y="Term_ImplementationDefined",function(e){return console.warn("Component "+y+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var y;const _={toc:h};function b(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},_,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"stduninitialized_move_n-algorithm"},"std::uninitialized_move_n() algorithm"),(0,r.kt)(s.Z,{content:{"since-cpp17":(0,r.kt)(m.default,{mdxType:"Signature_SinceCpp17"})},mdxType:"SwitchView"}),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"(1)")," Moves ",(0,r.kt)("inlineCode",{parentName:"p"},"count")," elements from a range beginning at ",(0,r.kt)("inlineCode",{parentName:"p"},"first")," to an uninitialized memory area beginning at ",(0,r.kt)("inlineCode",{parentName:"p"},"d_first")," as if by:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"for (; n > 0; ++d_first, (void) ++first, --n)\n    ::new (static_cast<void*>(std::addressof(*d_first)))\n        typename std::iterator_traits<NoThrowForwardIt>::value_type(std::move(*first));\n")),(0,r.kt)("admonition",{parentName:"li",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"If an exception is thrown during the initialization, some objects in ",(0,r.kt)("inlineCode",{parentName:"p"},"first")," + [",(0,r.kt)("inlineCode",{parentName:"p"},"0"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"n"),") are left in a valid but unspecified state, and the objects already constructed are destroyed in an unspecified order.")),(0,r.kt)("admonition",{parentName:"li",title:"Undefined Behaviour",type:"danger"},(0,r.kt)(d.U6,{v:"cpp20",mdxType:"Since"},"If ",(0,r.kt)("code",null,"d_first")," + [",(0,r.kt)("code",null,"0"),", ",(0,r.kt)("code",null,"n"),") overlaps with ",(0,r.kt)("code",null,"first")," + [",(0,r.kt)("code",null,"0"),", ",(0,r.kt)("code",null,"n"),"), the ",(0,r.kt)(c.Z,{title:(0,r.kt)(u.ZP,{mdxType:"Term_UndefinedBehaviour"}),mdxType:"Tooltip"},"behavior is undefined"),"."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"(2)")," Same as ",(0,r.kt)("strong",{parentName:"p"},"(1)"),", but executed according to ",(0,r.kt)("inlineCode",{parentName:"p"},"policy"),"."),(0,r.kt)("admonition",{parentName:"li",title:"Overload Resolution",type:"important"},(0,r.kt)("p",{parentName:"admonition"},"These overloads participate in overload resolution only if"),(0,r.kt)(d.OS,{v:"cpp20",mdxType:"Until"}," ",(0,r.kt)("code",null,"std::is_execution_policy_v<std::decay_t<ExecutionPolicy>>")," ")," ",(0,r.kt)(d.U6,{v:"cpp20",mdxType:"Since"}," ",(0,r.kt)("code",null,"std::is_execution_policy_v<std::remove_cvref_t<ExecutionPolicy>>")," ")," is ",(0,r.kt)("code",null,"true"),"."))),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)(l.ZP,{mdxType:"SymbolTable"},(0,r.kt)(l.mN,{none:!0,noLink:!0,name:(0,r.kt)("code",null,"first"),mdxType:"Symbol"},"The beginning of the range of the elements to move."),(0,r.kt)(l.mN,{none:!0,noLink:!0,name:(0,r.kt)("code",null,"d_first"),mdxType:"Symbol"},"The beginning of the destination range."),(0,r.kt)(l.mN,{none:!0,noLink:!0,name:(0,r.kt)("code",null,"count"),mdxType:"Symbol"},"Number of elements to move."),(0,r.kt)(l.mN,{none:!0,noLink:!0,name:(0,r.kt)("code",null,"policy"),mdxType:"Symbol"},"The execution policy to use. See ",(0,r.kt)("a",{href:""},"execution policy")," for details.")),(0,r.kt)("h4",{id:"type-requirements"},"Type requirements"),(0,r.kt)(l.ZP,{mdxType:"SymbolTable"},(0,r.kt)(l.mN,{none:!0,noLink:!0,name:(0,r.kt)("code",null,"InputIt"),mdxType:"Symbol"},(0,r.kt)("a",{href:"/docs/named_req/LegacyInputIterator"},"LegacyInputIterator")),(0,r.kt)(l.mN,{none:!0,noLink:!0,name:(0,r.kt)(i.Fragment,null," ",(0,r.kt)("code",null,"ForwardIt")," ",(0,r.kt)("br",null)," ",(0,r.kt)("code",null,"NoThrowForwardIt")," "),mdxType:"Symbol"},(0,r.kt)("a",{href:"/docs/named_req/LegacyForwardIterator"},"LegacyForwardIterator"))),(0,r.kt)("p",null,"No increment, assignment, comparison, or indirection through valid instances of ",(0,r.kt)("inlineCode",{parentName:"p"},"NoThrowForwardIt")," may throw exceptions."),(0,r.kt)("h3",{id:"return-value"},"Return value"),(0,r.kt)("p",null,"A pair whose first element is an iterator to the element past the last element moved in the source range,\nand whose second element is an iterator to the element past the last element moved in the destination range."),(0,r.kt)("h3",{id:"complexity"},"Complexity"),(0,r.kt)("p",null,"Linear in ",(0,r.kt)("inlineCode",{parentName:"p"},"count"),"."),(0,r.kt)("h3",{id:"exceptions"},"Exceptions"),(0,r.kt)("p",null,"The overloads with a template parameter named ",(0,r.kt)("inlineCode",{parentName:"p"},"ExecutionPolicy")," report errors as follows:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If execution of a function invoked as part of the algorithm throws an exception and ",(0,r.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy")," is one of the ",(0,r.kt)("a",{parentName:"li",href:"#"},(0,r.kt)("strong",{parentName:"a"},"standard policies")),", ",(0,r.kt)("a",{parentName:"li",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"std::terminate"))," is called.\nFor none other ",(0,r.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy"),", the behavior is ",(0,r.kt)(c.Z,{title:(0,r.kt)(k,{mdxType:"Term_ImplementationDefined"}),mdxType:"Tooltip"},(0,r.kt)("strong",{parentName:"li"},"implementation-defined")),"."),(0,r.kt)("li",{parentName:"ul"},"If the algorithm fails to allocate memory, ",(0,r.kt)("inlineCode",{parentName:"li"},"std::bad_alloc")," is thrown.")),(0,r.kt)("h3",{id:"possible-implementation"},"Possible implementation"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"uninitialized_move_n(1)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"\ntemplate<class InputIt, class Size, class NoThrowForwardIt>\nstd::pair<InputIt, NoThrowForwardIt>\n    uninitialized_move_n(InputIt first, Size count, NoThrowForwardIt d_first)\n{\n    using Value = typename std::iterator_traits<NoThrowForwardIt>::value_type;\n    NoThrowForwardIt current = d_first;\n    try\n    {\n        for (; count > 0; ++first, (void) ++current, --count)\n            ::new (static_cast<void*>(std::addressof(*current))) Value(std::move(*first));\n    }\n    catch (...)\n    {\n        std::destroy(d_first, current);\n        throw;\n    }\n    return {first, current};\n}\n"))),(0,r.kt)("h3",{id:"examples"},"Examples"),(0,r.kt)(o.Z,{columns:["8fr","4fr"],mdxType:"Columns"},(0,r.kt)("div",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='Main.cpp' showLineNumbers",title:"'Main.cpp'",showLineNumbers:!0},'\n#include <cstdlib>\n#include <iomanip>\n#include <iostream>\n#include <memory>\n#include <string>\n\nvoid print(auto rem, auto first, auto last)\n{\n    for (std::cout << rem; first != last; ++first)\n        std::cout << std::quoted(*first) << \' \';\n    std::cout << \'\\n\';\n}\n\nint main()\n{\n    std::string in[]{"One", "Definition", "Rule"};\n    print("initially, in: ", std::begin(in), std::end(in));\n\n    if (\n        constexpr auto sz = std::size(in);\n        void* out = std::aligned_alloc(alignof(std::string), sizeof(std::string) * sz))\n    {\n        try\n        {\n            auto first{static_cast<std::string*>(out)};\n            auto last{first + sz};\n            std::uninitialized_move_n(std::begin(in), sz, first);\n\n            print("after move, in: ", std::begin(in), std::end(in));\n            print("after move, out: ", first, last);\n\n            std::destroy(first, last);\n        }\n        catch (...)\n        {\n            std::cout << "Exception!\\n";\n        }\n        std::free(out);\n    }\n}\n'))),(0,r.kt)("div",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Possible output"',title:'"Possible','output"':!0},'initially, in: "One" "Definition" "Rule" \nafter move, in: "" "" "" \nafter move, out: "One" "Definition" "Rule"\n')))))}b.isMDXComponent=!0}}]);