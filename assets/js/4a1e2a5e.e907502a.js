"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[40976,54082,83608],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var l=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,l,r=function(e,t){if(null==e)return{};var n,l,r={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=l.createContext({}),c=function(e){var t=l.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return l.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,f=d["".concat(o,".").concat(m)]||d[m]||p[m]||a;return n?l.createElement(f,i(i({ref:t},u),{},{components:n})):l.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return l.createElement.apply(null,i)}return l.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>i});var l=n(67294),r=n(86010);const a="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return l.createElement("div",{role:"tabpanel",className:(0,r.Z)(a,i),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>C});var l=n(87462),r=n(67294),a=n(86010),i=n(12466),s=n(76775),o=n(91980),c=n(67392),u=n(50012);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:l,default:r}}=e;return{value:t,label:n,attributes:l,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const l=(0,s.k6)(),a=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o._X)(a),(0,r.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(l.location.search);t.set(a,e),l.replace({...l.location,search:t.toString()})}),[a,l])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:l}=e,a=d(e),[i,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const l=n.find((e=>e.default))??n[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:t,tabValues:a}))),[o,c]=f({queryString:n,groupId:l}),[p,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[l,a]=(0,u.Nk)(n);return[l,(0,r.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:l}),v=(()=>{const e=o??p;return m({value:e,tabValues:a})?e:null})();(0,r.useLayoutEffect)((()=>{v&&s(v)}),[v]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);s(e),c(e),g(e)}),[c,g,a]),tabValues:a}}var v=n(72389);const b="tabList__CuJ",h="tabItem_LNqP";function y(e){let{className:t,block:n,selectedValue:s,selectValue:o,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,i.o5)(),d=e=>{const t=e.currentTarget,n=u.indexOf(t),l=c[n].value;l!==s&&(p(t),o(l))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,l.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:d},i,{className:(0,a.Z)("tabs__item",h,i?.className,{"tabs__item--active":s===t})}),n??t)})))}function _(e){let{lazy:t,children:n,selectedValue:l}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===l));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==l}))))}function k(e){const t=g(e);return r.createElement("div",{className:(0,a.Z)("tabs-container",b)},r.createElement(y,(0,l.Z)({},e,t)),r.createElement(_,(0,l.Z)({},e,t)))}function C(e){const t=(0,v.Z)();return r.createElement(k,(0,l.Z)({key:String(t)},e))}},98839:(e,t,n)=>{n.d(t,{z:()=>l});const l=n(67294).createContext({name:"Unknown",folder:"unknown"})},22307:(e,t,n)=>{n.d(t,{Z:()=>i});var l=n(87462),r=n(67294);const a="columns_Terr";function i(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,r.createElement("div",(0,l.Z)({className:a,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}i.isMDXComponent=!0},99801:(e,t,n)=>{n.d(t,{Z:()=>c});var l=n(67294),r=n(74866),a=n(85162),i=n(99372),s=n(72412);const o={};function c(e){const t=e.content||{};return l.createElement(r.Z,null,Object.entries(t).map(((e,t)=>{let[n,c]=e;return c.value||c.simplified||c.detailed?l.createElement(a.Z,{value:n,label:i.gJ.get(n),default:c.default||0==t},c.simplified?l.createElement(l.Fragment,null,l.createElement(r.Z,{groupId:"view_mode",className:o.smallTabs},l.createElement(a.Z,{value:"simplified",label:"Simplified",default:!0},(0,s.Z)(c.simplified)),l.createElement(a.Z,{value:"detailed",label:"Detailed"},(0,s.Z)(c.detailed)))):c.value):l.createElement(a.Z,{value:n,label:i.gJ.get(n),default:0==t},(0,s.Z)(c))})))}},55059:(e,t,n)=>{n.d(t,{mN:()=>u,ZP:()=>c});var l=n(67294),r=n(72412);const a={symbolTable:"symbolTable_yosy",symbolName:"symbolName__gUy",symbolDesc:"symbolDesc_wDaQ",symbolProp:"symbolProp_oAcv",accessPublic:"accessPublic_LfqG",accessProtected:"accessProtected_bDL6",accessPrivate:"accessPrivate_Ab5O",modStatic:"modStatic_ZSC5",modConstexpr:"modConstexpr_iypt",modConst:"modConst_osuL",modVolatile:"modVolatile_ePYM",modVirtual:"modVirtual_jNz7"};var i=n(98839);const s={None:{Order:0,ShortName:"",FullName:"",Style:a.accessPublic},Public:{Order:1,ShortName:"pub",FullName:"public",Style:a.accessPublic},Protected:{Order:2,ShortName:"prot",FullName:"protected",Style:a.accessProtected},Private:{Order:3,ShortName:"priv",FullName:"private",Style:a.accessPrivate}},o=e=>e.none?s.None:e.pub||e.public?s.Public:e.prot||e.protected?s.Protected:e.priv||e.private?s.Private:s.Public;function c(e){return(t=>{if(0===t.length)return null;const n=t.sort(((e,t)=>o(e).Order<o(t).Order));return l.createElement("table",{"data-no-traits":`${e.noTraits||"false"}`,className:a.symbolTable},l.createElement("tbody",null,n))})(l.Children.toArray(e.children))}function u(e){l.useContext(i.z);let t=(0,r.Z)(e.name),n=null;e.desc?n=e.desc:e.children&&(n=e.children);const s=e.linkName||e.autoLink;!e.noLink&&s&&(t=l.createElement("a",{href:e.link||`${e.linkName||e.name}`},t));const c=(e,t,n)=>!0===e?l.createElement("span",{className:a[t]},n):null;return l.createElement("tr",null,!e.none&&l.createElement("td",{className:a.symbolProp},(e=>{const t=o(e);return l.createElement("span",{className:t.Style},t.ShortName)})(e),c(e.static,"modStatic","static"),c(e.constexpr,"modConstexpr","constexpr"),c(e.const,"modConst","const"),c(e.volatile,"modVolatile","volatile"),c(e.virtual,"modVirtual","virtual")),l.createElement("td",{className:a.symbolName},t),l.createElement("td",{className:a.symbolDesc},(0,r.Z)(n)))}u.isMDXComponent=!0,c.isMDXComponent=!0,c.Symbol=u},99372:(e,t,n)=>{n.d(t,{gJ:()=>u,eH:()=>f,U6:()=>d,OS:()=>m});var l=n(67294),r=n(95999);const a="markedText_c6kK",i="since_c1Q3",s="until_jXK6",o="removed_A_Kf",c="versionNumber_BiUX",u=new Map;function p(e){let{children:t,className:n}=e;return l.createElement("span",{className:a+(n?" "+n:"")},t)}function d(e){let{children:t,v:n}=e;return l.createElement(p,{className:i},t,"\xa0",l.createElement("span",{className:c},l.createElement("small",null,"(",u.get(`since-${n}`),")")))}function m(e){let{children:t,v:n}=e;return l.createElement(p,{className:s},t,"\xa0",l.createElement("span",{className:c},l.createElement("small",null,"(",u.get(`until-${n}`),")")))}function f(e){let{children:t,v:n}=e;return l.createElement(p,{className:o},t,"\xa0",l.createElement("span",{className:c},l.createElement("small",null,"(",u.get(`removed-${n}`),")")))}u.set("cpp98","C++98"),u.set("cpp03","C++03"),u.set("cpp11","C++11"),u.set("cpp14","C++14"),u.set("cpp17","C++17"),u.set("cpp20","C++20"),u.set("cpp23","C++23"),u.set("deprecated-",l.createElement(r.Z,null,"deprecated")),u.set("deprecated-cpp98",l.createElement(r.Z,null,"deprecated in C++98")),u.set("deprecated-cpp03",l.createElement(r.Z,null,"deprecated in C++03")),u.set("deprecated-cpp11",l.createElement(r.Z,null,"deprecated in C++11")),u.set("deprecated-cpp14",l.createElement(r.Z,null,"deprecated in C++14")),u.set("deprecated-cpp17",l.createElement(r.Z,null,"deprecated in C++17")),u.set("deprecated-cpp20",l.createElement(r.Z,null,"deprecated in C++20")),u.set("deprecated-cpp23",l.createElement(r.Z,null,"deprecated in C++23")),u.set("until-cpp98",l.createElement(r.Z,null,"until C++98")),u.set("until-cpp03",l.createElement(r.Z,null,"until C++03")),u.set("until-cpp11",l.createElement(r.Z,null,"until C++11")),u.set("until-cpp14",l.createElement(r.Z,null,"until C++14")),u.set("until-cpp17",l.createElement(r.Z,null,"until C++17")),u.set("until-cpp20",l.createElement(r.Z,null,"until C++20")),u.set("until-cpp23",l.createElement(r.Z,null,"until C++23")),u.set("since-cpp98",l.createElement(r.Z,null,"since C++98")),u.set("since-cpp03",l.createElement(r.Z,null,"since C++03")),u.set("since-cpp11",l.createElement(r.Z,null,"since C++11")),u.set("since-cpp14",l.createElement(r.Z,null,"since C++14")),u.set("since-cpp17",l.createElement(r.Z,null,"since C++17")),u.set("since-cpp20",l.createElement(r.Z,null,"since C++20")),u.set("since-cpp23",l.createElement(r.Z,null,"since C++23")),u.set("removed-",l.createElement(r.Z,null,"deleted")),u.set("removed-cpp98",l.createElement(r.Z,null,"removed in C++98")),u.set("removed-cpp03",l.createElement(r.Z,null,"removed in C++03")),u.set("removed-cpp11",l.createElement(r.Z,null,"removed in C++11")),u.set("removed-cpp14",l.createElement(r.Z,null,"removed in C++14")),u.set("removed-cpp17",l.createElement(r.Z,null,"removed in C++17")),u.set("removed-cpp20",l.createElement(r.Z,null,"removed in C++20")),u.set("removed-cpp23",l.createElement(r.Z,null,"removed in C++23"))},72412:(e,t,n)=>{function l(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>l})},37855:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var l=n(87462),r=(n(67294),n(3905));const a={},i=void 0,s={unversionedId:"std/algo/ranges/_codes/fill_n/since-cpp20-detailed",id:"std/algo/ranges/_codes/fill_n/since-cpp20-detailed",title:"since-cpp20-detailed",description:"",source:"@site/content/docs/std/algo/ranges/_codes/fill_n/since-cpp20-detailed.mdx",sourceDirName:"std/algo/ranges/_codes/fill_n",slug:"/std/algo/ranges/_codes/fill_n/since-cpp20-detailed",permalink:"/CppLangNet/docs/std/algo/ranges/_codes/fill_n/since-cpp20-detailed",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ranges/_codes/fill_n/since-cpp20-detailed.mdx",tags:[],version:"current",frontMatter:{}},o={},c=[],u={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,l.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate<\n  class T,\n  std::output_iterator<const T&> O\n>\nconstexpr O fill_n( O first, std::iter_difference_t<O> n, const T& value );\n")))}p.isMDXComponent=!0},87639:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var l=n(87462),r=(n(67294),n(3905));const a={},i=void 0,s={unversionedId:"std/algo/ranges/_codes/fill_n/since-cpp20-simplified",id:"std/algo/ranges/_codes/fill_n/since-cpp20-simplified",title:"since-cpp20-simplified",description:"The type of arguments are generic and have the following constraints:",source:"@site/content/docs/std/algo/ranges/_codes/fill_n/since-cpp20-simplified.mdx",sourceDirName:"std/algo/ranges/_codes/fill_n",slug:"/std/algo/ranges/_codes/fill_n/since-cpp20-simplified",permalink:"/CppLangNet/docs/std/algo/ranges/_codes/fill_n/since-cpp20-simplified",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ranges/_codes/fill_n/since-cpp20-simplified.mdx",tags:[],version:"current",frontMatter:{}},o={},c=[],u={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,l.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\nconstexpr O fill_n( O first, std::iter_difference_t<O> n, const T& value );\n")),(0,r.kt)("p",null,"The type of arguments are generic and have the following constraints:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T")," - ",(0,r.kt)("strong",{parentName:"li"},"(none)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"O")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"std::output_iterator<const T&>"))))}p.isMDXComponent=!0},47879:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>v,frontMatter:()=>u,metadata:()=>d,toc:()=>f});var l=n(87462),r=(n(67294),n(3905)),a=n(55059),i=n(22307),s=n(99801),o=n(37855),c=n(87639);const u={title:"ranges::fill_n algorithm",sidebar_label:"ranges::fill_n(  )",description:"ranges::fill_n algorithm C++ documentation",hide_title:!0,tags:["algorithm","fill","fill_n"],cppreference_origin_rel:"w/cpp/algorithm/ranges/fill_n"},p=void 0,d={unversionedId:"std/algo/ranges/fill_n",id:"std/algo/ranges/fill_n",title:"ranges::fill_n algorithm",description:"ranges::fill_n algorithm C++ documentation",source:"@site/content/docs/std/algo/ranges/fill_n.mdx",sourceDirName:"std/algo/ranges",slug:"/std/algo/ranges/fill_n",permalink:"/CppLangNet/docs/std/algo/ranges/fill_n",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ranges/fill_n.mdx",tags:[{label:"algorithm",permalink:"/CppLangNet/docs/tags/algorithm"},{label:"fill",permalink:"/CppLangNet/docs/tags/fill"},{label:"fill_n",permalink:"/CppLangNet/docs/tags/fill-n"}],version:"current",frontMatter:{title:"ranges::fill_n algorithm",sidebar_label:"ranges::fill_n(  )",description:"ranges::fill_n algorithm C++ documentation",hide_title:!0,tags:["algorithm","fill","fill_n"],cppreference_origin_rel:"w/cpp/algorithm/ranges/fill_n"},sidebar:"defaultSidebar",previous:{title:"ranges::fill(  )",permalink:"/CppLangNet/docs/std/algo/ranges/fill"},next:{title:"ranges::generate(  )",permalink:"/CppLangNet/docs/std/algo/ranges/generate"}},m={},f=[{value:"Parameters",id:"parameters",level:3},{value:"Return value",id:"return-value",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"Possible implementation",id:"possible-implementation",level:3},{value:"Examples",id:"examples",level:3}],g={toc:f};function v(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,l.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"stdrangesfill_n-algorithm"},"std::ranges::fill_n() algorithm"),(0,r.kt)(s.Z,{content:{"since-cpp20":{simplified:(0,r.kt)(c.default,{mdxType:"Signature_SinceCpp20_Simplified"}),detailed:(0,r.kt)(o.default,{mdxType:"Signature_SinceCpp20_Detailed"})}},mdxType:"SwitchView"}),(0,r.kt)("p",null,"Assigns the given value to all elements in the range [",(0,r.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,r.kt)("inlineCode",{parentName:"p"},"first + n"),")."),(0,r.kt)("p",null,"The function-like entities described on this page are ",(0,r.kt)("a",{parentName:"p",href:"/docs/std/algo/niebloids"},(0,r.kt)("strong",{parentName:"a"},"niebloids")),"."),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)(a.ZP,{mdxType:"SymbolTable"},(0,r.kt)(a.mN,{none:!0,noLink:!0,name:(0,r.kt)("code",null,"first"),mdxType:"Symbol"},"The beginning of the range of elements to modify."),(0,r.kt)(a.mN,{none:!0,noLink:!0,name:(0,r.kt)("code",null,"n"),mdxType:"Symbol"},"Number of elements to modify."),(0,r.kt)(a.mN,{none:!0,noLink:!0,name:(0,r.kt)("code",null,"value"),mdxType:"Symbol"},"The value to assign.")),(0,r.kt)("h3",{id:"return-value"},"Return value"),(0,r.kt)("p",null,"An output iterator that compares equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"first + n"),"."),(0,r.kt)("h3",{id:"complexity"},"Complexity"),(0,r.kt)("p",null,"Exactly ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," assignments."),(0,r.kt)("h3",{id:"exceptions"},"Exceptions"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"(none)")),(0,r.kt)("h3",{id:"possible-implementation"},"Possible implementation"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"ranges::fill_n"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"struct fill_n_fn\n{\n    template<class T, std::output_iterator<const T&> O>\n    constexpr O operator()(O first, std::iter_difference_t<O> n, const T& value) const\n    {\n        for (std::iter_difference_t<O> i {}; i != n; ++first, ++i)\n            *first = value;\n        return first;\n    }\n};\n\ninline constexpr fill_n_fn fill_n {};\n"))),(0,r.kt)("h3",{id:"examples"},"Examples"),(0,r.kt)(i.Z,{columns:["8fr","4fr"],mdxType:"Columns"},(0,r.kt)("div",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='Main.cpp' showLineNumbers",title:"'Main.cpp'",showLineNumbers:!0},"#include <algorithm>\n#include <iostream>\n#include <string>\n#include <vector>\n\nvoid println(const auto& v)\n{\n    for (const auto& elem : v)\n        std::cout << ' ' << elem;\n    std::cout << '\\n';\n}\n\nint main()\n{\n    constexpr auto n {010};\n\n    std::vector<std::string> v(n, \"\u2593\u2593\u2591\u2591\");\n    println(v);\n\n    std::ranges::fill_n(v.begin(), n, \"\u2591\u2591\u2593\u2593\");\n    println(v);\n}\n"))),(0,r.kt)("div",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Output"',title:'"Output"'}," \u2593\u2593\u2591\u2591 \u2593\u2593\u2591\u2591 \u2593\u2593\u2591\u2591 \u2593\u2593\u2591\u2591 \u2593\u2593\u2591\u2591 \u2593\u2593\u2591\u2591 \u2593\u2593\u2591\u2591 \u2593\u2593\u2591\u2591\n \u2591\u2591\u2593\u2593 \u2591\u2591\u2593\u2593 \u2591\u2591\u2593\u2593 \u2591\u2591\u2593\u2593 \u2591\u2591\u2593\u2593 \u2591\u2591\u2593\u2593 \u2591\u2591\u2593\u2593 \u2591\u2591\u2593\u2593\n")))))}v.isMDXComponent=!0}}]);