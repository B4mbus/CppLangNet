"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[44739],{3905:(t,r,n)=>{n.d(r,{Zo:()=>l,kt:()=>I});var e=n(67294);function a(t,r,n){return r in t?Object.defineProperty(t,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[r]=n,t}function c(t,r){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(t);r&&(e=e.filter((function(r){return Object.getOwnPropertyDescriptor(t,r).enumerable}))),n.push.apply(n,e)}return n}function s(t){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?c(Object(n),!0).forEach((function(r){a(t,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(n,r))}))}return t}function o(t,r){if(null==t)return{};var n,e,a=function(t,r){if(null==t)return{};var n,e,a={},c=Object.keys(t);for(e=0;e<c.length;e++)n=c[e],r.indexOf(n)>=0||(a[n]=t[n]);return a}(t,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(t);for(e=0;e<c.length;e++)n=c[e],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var i=e.createContext({}),p=function(t){var r=e.useContext(i),n=r;return t&&(n="function"==typeof t?t(r):s(s({},r),t)),n},l=function(t){var r=p(t.components);return e.createElement(i.Provider,{value:r},t.children)},d={inlineCode:"code",wrapper:function(t){var r=t.children;return e.createElement(e.Fragment,{},r)}},u=e.forwardRef((function(t,r){var n=t.components,a=t.mdxType,c=t.originalType,i=t.parentName,l=o(t,["components","mdxType","originalType","parentName"]),u=p(n),I=a,m=u["".concat(i,".").concat(I)]||u[I]||d[I]||c;return n?e.createElement(m,s(s({ref:r},l),{},{components:n})):e.createElement(m,s({ref:r},l))}));function I(t,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof t||a){var c=n.length,s=new Array(c);s[0]=u;var o={};for(var i in r)hasOwnProperty.call(r,i)&&(o[i]=r[i]);o.originalType=t,o.mdxType="string"==typeof t?t:a,s[1]=o;for(var p=2;p<c;p++)s[p]=n[p];return e.createElement.apply(null,s)}return e.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9347:(t,r,n)=>{n.r(r),n.d(r,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>p});var e=n(87462),a=(n(67294),n(3905));const c={},s=void 0,o={unversionedId:"std/algo/ordinary/_codes/mismatch/since-cpp17",id:"std/algo/ordinary/_codes/mismatch/since-cpp17",title:"since-cpp17",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/mismatch/since-cpp17.mdx",sourceDirName:"std/algo/ordinary/_codes/mismatch",slug:"/std/algo/ordinary/_codes/mismatch/since-cpp17",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/mismatch/since-cpp17",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/mismatch/since-cpp17.mdx",tags:[],version:"current",frontMatter:{}},i={},p=[],l={toc:p};function d(t){let{components:r,...n}=t;return(0,a.kt)("wrapper",(0,e.Z)({},l,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class InputIt1, class InputIt2 >\nstd::pair<InputIt1, InputIt2>\n    mismatch( InputIt1 first1, InputIt1 last1,\n              InputIt2 first2 );\n\n// (2)\ntemplate< class InputIt1, class InputIt2, class BinaryPredicate >\nstd::pair<InputIt1, InputIt2>\n    mismatch( InputIt1 first1, InputIt1 last1,\n              InputIt2 first2, BinaryPredicate p );\n\n// (3)\ntemplate< class InputIt1, class InputIt2 >\nstd::pair<InputIt1, InputIt2>\n    mismatch( InputIt1 first1, InputIt1 last1,\n              InputIt2 first2, InputIt2 last2 );\n\n// (4)\ntemplate< class InputIt1, class InputIt2, class BinaryPredicate >\nstd::pair<InputIt1, InputIt2>\n    mismatch( InputIt1 first1, InputIt1 last1,\n              InputIt2 first2, InputIt2 last2, BinaryPredicate p );\n\n// (5)\ntemplate< class ExecutionPolicy, class ForwardIt1, class ForwardIt2 >\nstd::pair<ForwardIt1, ForwardIt2>\n    mismatch( ExecutionPolicy&& policy, ForwardIt1 first1, ForwardIt1 last1,\n              ForwardIt2 first2 );\n\n// (6)\ntemplate< class ExecutionPolicy, class ForwardIt1, class ForwardIt2,\n          class BinaryPredicate >\nstd::pair<ForwardIt1, ForwardIt2>\n    mismatch( ExecutionPolicy&& policy, ForwardIt1 first1, ForwardIt1 last1,\n              ForwardIt2 first2, BinaryPredicate p );\n\n// (7)\ntemplate< class ExecutionPolicy, class ForwardIt1, class ForwardIt2 >\nstd::pair<ForwardIt1, ForwardIt2>\n    mismatch( ExecutionPolicy&& policy, ForwardIt1 first1, ForwardIt1 last1,\n              ForwardIt2 first2, ForwardIt2 last2 );\n\n// (8)\ntemplate< class ExecutionPolicy, class ForwardIt1, class ForwardIt2,\n          class BinaryPredicate >\nstd::pair<ForwardIt1, ForwardIt2>\n    mismatch( ExecutionPolicy&& policy, ForwardIt1 first1, ForwardIt1 last1,\n              ForwardIt2 first2, ForwardIt2 last2, BinaryPredicate p )\n")))}d.isMDXComponent=!0}}]);