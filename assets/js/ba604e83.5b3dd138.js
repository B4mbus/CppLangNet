"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[18577],{98088:(e,t,n)=>{n.d(t,{ZP:()=>i});var a=n(87462),r=(n(67294),n(3905));const l={toc:[]};function i(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("b",null,"Undefined behaviour")," is a property of a program that's incorrect, but likely compiles. It is incorrect in a way, that the error is only invoked in certain conditions at runtime.",(0,r.kt)("p",null,"Common cases include: ",(0,r.kt)("strong",{parentName:"p"},"out of bounds access"),", ",(0,r.kt)("strong",{parentName:"p"},"reading uninitialized objects"),", ",(0,r.kt)("strong",{parentName:"p"},"dangling pointers/references")," or ",(0,r.kt)("strong",{parentName:"p"},"signed overflow"),"."))}i.isMDXComponent=!0},85162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(67294),r=n(86010);const l="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>C});var a=n(87462),r=n(67294),l=n(86010),i=n(12466),o=n(76775),s=n(91980),c=n(67392),d=n(50012);function u(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function y(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function k(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=p(e),[i,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[s,c]=y({queryString:n,groupId:a}),[u,k]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,d.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),f=(()=>{const e=s??u;return m({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{f&&o(f)}),[f]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),c(e),k(e)}),[c,k,l]),tabValues:l}}var f=n(72389);const b="tabList__CuJ",v="tabItem_LNqP";function g(e){let{className:t,block:n,selectedValue:o,selectValue:s,tabValues:c}=e;const d=[],{blockElementScrollPositionUntilNextRender:u}=(0,i.o5)(),p=e=>{const t=e.currentTarget,n=d.indexOf(t),a=c[n].value;a!==o&&(u(t),s(a))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=d.indexOf(e.currentTarget)+1;t=d[n]??d[0];break}case"ArrowLeft":{const n=d.indexOf(e.currentTarget)-1;t=d[n]??d[d.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>d.push(e),onKeyDown:m,onClick:p},i,{className:(0,l.Z)("tabs__item",v,i?.className,{"tabs__item--active":o===t})}),n??t)})))}function h(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=k(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",b)},r.createElement(g,(0,a.Z)({},e,t)),r.createElement(h,(0,a.Z)({},e,t)))}function C(e){const t=(0,f.Z)();return r.createElement(N,(0,a.Z)({key:String(t)},e))}},98839:(e,t,n)=>{n.d(t,{z:()=>a});const a=n(67294).createContext({name:"Unknown",folder:"unknown"})},22307:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(87462),r=n(67294);const l="columns_Terr";function i(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,r.createElement("div",(0,a.Z)({className:l,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}i.isMDXComponent=!0},99801:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),r=n(74866),l=n(85162),i=n(99372),o=n(72412);const s={};function c(e){const t=e.content||{};return a.createElement(r.Z,null,Object.entries(t).map(((e,t)=>{let[n,c]=e;return c.value||c.simplified||c.detailed?a.createElement(l.Z,{value:n,label:i.gJ.get(n),default:c.default||0==t},c.simplified?a.createElement(a.Fragment,null,a.createElement(r.Z,{groupId:"view_mode",className:s.smallTabs},a.createElement(l.Z,{value:"simplified",label:"Simplified",default:!0},(0,o.Z)(c.simplified)),a.createElement(l.Z,{value:"detailed",label:"Detailed"},(0,o.Z)(c.detailed)))):c.value):a.createElement(l.Z,{value:n,label:i.gJ.get(n),default:0==t},(0,o.Z)(c))})))}},55059:(e,t,n)=>{n.d(t,{mN:()=>d,ZP:()=>c});var a=n(67294),r=n(72412);const l={symbolTable:"symbolTable_yosy",symbolName:"symbolName__gUy",symbolDesc:"symbolDesc_wDaQ",symbolProp:"symbolProp_oAcv",accessPublic:"accessPublic_LfqG",accessProtected:"accessProtected_bDL6",accessPrivate:"accessPrivate_Ab5O",modStatic:"modStatic_ZSC5",modConstexpr:"modConstexpr_iypt",modConst:"modConst_osuL",modVolatile:"modVolatile_ePYM",modVirtual:"modVirtual_jNz7"};var i=n(98839);const o={None:{Order:0,ShortName:"",FullName:"",Style:l.accessPublic},Public:{Order:1,ShortName:"pub",FullName:"public",Style:l.accessPublic},Protected:{Order:2,ShortName:"prot",FullName:"protected",Style:l.accessProtected},Private:{Order:3,ShortName:"priv",FullName:"private",Style:l.accessPrivate}},s=e=>e.none?o.None:e.pub||e.public?o.Public:e.prot||e.protected?o.Protected:e.priv||e.private?o.Private:o.Public;function c(e){return(t=>{if(0===t.length)return null;const n=t.sort(((e,t)=>s(e).Order<s(t).Order));return a.createElement("table",{"data-no-traits":`${e.noTraits||"false"}`,className:l.symbolTable},a.createElement("tbody",null,n))})(a.Children.toArray(e.children))}function d(e){a.useContext(i.z);let t=(0,r.Z)(e.name),n=null;e.desc?n=e.desc:e.children&&(n=e.children);const o=e.linkName||e.autoLink;!e.noLink&&o&&(t=a.createElement("a",{href:e.link||`${e.linkName||e.name}`},t));const c=(e,t,n)=>!0===e?a.createElement("span",{className:l[t]},n):null;return a.createElement("tr",null,!e.none&&a.createElement("td",{className:l.symbolProp},(e=>{const t=s(e);return a.createElement("span",{className:t.Style},t.ShortName)})(e),c(e.static,"modStatic","static"),c(e.constexpr,"modConstexpr","constexpr"),c(e.const,"modConst","const"),c(e.volatile,"modVolatile","volatile"),c(e.virtual,"modVirtual","virtual")),a.createElement("td",{className:l.symbolName},t),a.createElement("td",{className:l.symbolDesc},(0,r.Z)(n)))}d.isMDXComponent=!0,c.isMDXComponent=!0,c.Symbol=d},18510:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),r=n(44996),l=n(34386),i=n(72412);const o="TooltipContent_Lvru",s="TooltipTitle_ukF2";function c(e){let{url:t,title:n,maxWidth:c,children:d}=e;let u=c||"clamp(250px, 25vw, 800px)";"string"==typeof u&&u.endsWith("vw")&&(u=`clamp(250px, ${u}, 800px)`);const p="function"==typeof n?a.createElement(n):n,m=(t||"").startsWith("/")?(0,r.Z)(t):t,y=t?a.createElement("a",{href:m,target:"_blank",rel:"noreferrer"},d):d;return a.createElement(l.Z,{componentsProps:{tooltip:{style:{maxWidth:u}}},title:a.createElement("span",{className:s},(0,i.Z)(p)),placement:"top",arrow:!0},a.createElement("span",{className:o},y))}c.isMDXComponent=!0},99372:(e,t,n)=>{n.d(t,{gJ:()=>d,eH:()=>y,U6:()=>p,OS:()=>m});var a=n(67294),r=n(95999);const l="markedText_c6kK",i="since_c1Q3",o="until_jXK6",s="removed_A_Kf",c="versionNumber_BiUX",d=new Map;function u(e){let{children:t,className:n}=e;return a.createElement("span",{className:l+(n?" "+n:"")},t)}function p(e){let{children:t,v:n}=e;return a.createElement(u,{className:i},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",d.get(`since-${n}`),")")))}function m(e){let{children:t,v:n}=e;return a.createElement(u,{className:o},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",d.get(`until-${n}`),")")))}function y(e){let{children:t,v:n}=e;return a.createElement(u,{className:s},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",d.get(`removed-${n}`),")")))}d.set("cpp98","C++98"),d.set("cpp03","C++03"),d.set("cpp11","C++11"),d.set("cpp14","C++14"),d.set("cpp17","C++17"),d.set("cpp20","C++20"),d.set("cpp23","C++23"),d.set("deprecated-",a.createElement(r.Z,null,"deprecated")),d.set("deprecated-cpp98",a.createElement(r.Z,null,"deprecated in C++98")),d.set("deprecated-cpp03",a.createElement(r.Z,null,"deprecated in C++03")),d.set("deprecated-cpp11",a.createElement(r.Z,null,"deprecated in C++11")),d.set("deprecated-cpp14",a.createElement(r.Z,null,"deprecated in C++14")),d.set("deprecated-cpp17",a.createElement(r.Z,null,"deprecated in C++17")),d.set("deprecated-cpp20",a.createElement(r.Z,null,"deprecated in C++20")),d.set("deprecated-cpp23",a.createElement(r.Z,null,"deprecated in C++23")),d.set("until-cpp98",a.createElement(r.Z,null,"until C++98")),d.set("until-cpp03",a.createElement(r.Z,null,"until C++03")),d.set("until-cpp11",a.createElement(r.Z,null,"until C++11")),d.set("until-cpp14",a.createElement(r.Z,null,"until C++14")),d.set("until-cpp17",a.createElement(r.Z,null,"until C++17")),d.set("until-cpp20",a.createElement(r.Z,null,"until C++20")),d.set("until-cpp23",a.createElement(r.Z,null,"until C++23")),d.set("since-cpp98",a.createElement(r.Z,null,"since C++98")),d.set("since-cpp03",a.createElement(r.Z,null,"since C++03")),d.set("since-cpp11",a.createElement(r.Z,null,"since C++11")),d.set("since-cpp14",a.createElement(r.Z,null,"since C++14")),d.set("since-cpp17",a.createElement(r.Z,null,"since C++17")),d.set("since-cpp20",a.createElement(r.Z,null,"since C++20")),d.set("since-cpp23",a.createElement(r.Z,null,"since C++23")),d.set("removed-",a.createElement(r.Z,null,"deleted")),d.set("removed-cpp98",a.createElement(r.Z,null,"removed in C++98")),d.set("removed-cpp03",a.createElement(r.Z,null,"removed in C++03")),d.set("removed-cpp11",a.createElement(r.Z,null,"removed in C++11")),d.set("removed-cpp14",a.createElement(r.Z,null,"removed in C++14")),d.set("removed-cpp17",a.createElement(r.Z,null,"removed in C++17")),d.set("removed-cpp20",a.createElement(r.Z,null,"removed in C++20")),d.set("removed-cpp23",a.createElement(r.Z,null,"removed in C++23"))},72412:(e,t,n)=>{function a(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>a})},34274:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const l={},i=void 0,o={unversionedId:"std/algo/ordinary/_codes/reduce/since-cpp17",id:"std/algo/ordinary/_codes/reduce/since-cpp17",title:"since-cpp17",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/reduce/since-cpp17.mdx",sourceDirName:"std/algo/ordinary/_codes/reduce",slug:"/std/algo/ordinary/_codes/reduce/since-cpp17",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/reduce/since-cpp17",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/reduce/since-cpp17.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],d={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class InputIt >\ntypename std::iterator_traits<InputIt>::value_type\n    reduce( InputIt first, InputIt last );\n\n// (2)\ntemplate< class InputIt, class T >\nT reduce( InputIt first, InputIt last, T init );\n\n// (3)\ntemplate< class InputIt, class T, class BinaryOp >\nT reduce( InputIt first, InputIt last, T init, BinaryOp binary_op );\n\n// (4)\ntemplate< class ExecutionPolicy, class ForwardIt >\ntypename std::iterator_traits<ForwardIt>::value_type\n    reduce( ExecutionPolicy&& policy, ForwardIt first, ForwardIt last );\n\n// (5)\ntemplate< class ExecutionPolicy, class ForwardIt, class T >\nT reduce( ExecutionPolicy&& policy, ForwardIt first, ForwardIt last, T init );\n\n// (6)\ntemplate< class ExecutionPolicy, class ForwardIt, class T, class BinaryOp >\nT reduce( ExecutionPolicy&& policy, ForwardIt first, ForwardIt last, T init, BinaryOp binary_op );\n")))}u.isMDXComponent=!0},9215:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const l={},i=void 0,o={unversionedId:"std/algo/ordinary/_codes/reduce/since-cpp20",id:"std/algo/ordinary/_codes/reduce/since-cpp20",title:"since-cpp20",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/reduce/since-cpp20.mdx",sourceDirName:"std/algo/ordinary/_codes/reduce",slug:"/std/algo/ordinary/_codes/reduce/since-cpp20",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/reduce/since-cpp20",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/reduce/since-cpp20.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],d={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class InputIt >\nconstexpr typename std::iterator_traits<InputIt>::value_type\n    reduce( InputIt first, InputIt last );\n\n// (2)\ntemplate< class InputIt, class T >\nconstexpr T reduce( InputIt first, InputIt last, T init );\n\n// (3)\ntemplate< class InputIt, class T, class BinaryOp >\nconstexpr T reduce( InputIt first, InputIt last, T init, BinaryOp binary_op );\n\n// (4)\ntemplate< class ExecutionPolicy, class ForwardIt >\ntypename std::iterator_traits<ForwardIt>::value_type\n    reduce( ExecutionPolicy&& policy, ForwardIt first, ForwardIt last );\n\n// (5)\ntemplate< class ExecutionPolicy, class ForwardIt, class T >\nT reduce( ExecutionPolicy&& policy, ForwardIt first, ForwardIt last, T init );\n\n// (6)\ntemplate< class ExecutionPolicy, class ForwardIt, class T, class BinaryOp >\nT reduce( ExecutionPolicy&& policy, ForwardIt first, ForwardIt last, T init, BinaryOp binary_op );\n")))}u.isMDXComponent=!0},64767:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>b,contentTitle:()=>k,default:()=>C,frontMatter:()=>y,metadata:()=>f,toc:()=>v});var a=n(87462),r=n(67294),l=n(3905),i=n(55059),o=n(22307),s=n(99801),c=n(18510),d=n(99372),u=n(98088),p=n(9215),m=n(34274);const y={title:"reduce algorithm",sidebar_label:"reduce(  )",description:"reduce algorithm C++ documentation",hide_title:!0,tags:["algorithm","reduce","accumulate","fold"],cppreference_origin_rel:"w/cpp/algorithm/reduce"},k=void 0,f={unversionedId:"std/algo/ordinary/reduce",id:"std/algo/ordinary/reduce",title:"reduce algorithm",description:"reduce algorithm C++ documentation",source:"@site/content/docs/std/algo/ordinary/reduce.mdx",sourceDirName:"std/algo/ordinary",slug:"/std/algo/ordinary/reduce",permalink:"/CppLangNet/docs/std/algo/ordinary/reduce",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/reduce.mdx",tags:[{label:"algorithm",permalink:"/CppLangNet/docs/tags/algorithm"},{label:"reduce",permalink:"/CppLangNet/docs/tags/reduce"},{label:"accumulate",permalink:"/CppLangNet/docs/tags/accumulate"},{label:"fold",permalink:"/CppLangNet/docs/tags/fold"}],version:"current",frontMatter:{title:"reduce algorithm",sidebar_label:"reduce(  )",description:"reduce algorithm C++ documentation",hide_title:!0,tags:["algorithm","reduce","accumulate","fold"],cppreference_origin_rel:"w/cpp/algorithm/reduce"},sidebar:"defaultSidebar",previous:{title:"partial_sum(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/partial_sum"},next:{title:"exclusive_scan(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/exclusive_scan"}},b={},v=[{value:"Parameters",id:"parameters",level:3},{value:"Type requirements",id:"type-requirements",level:4},{value:"Return value",id:"return-value",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"Examples",id:"examples",level:3}],g=(h="Term_ImplementationDefined",function(e){return console.warn("Component "+h+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",e)});var h;const N={toc:v};function C(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},N,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"stdreduce-algorithm"},"std::reduce() algorithm"),(0,l.kt)(s.Z,{content:{"since-cpp20":(0,l.kt)(p.default,{mdxType:"Signature_SinceCpp20"}),"since-cpp17":(0,l.kt)(m.default,{mdxType:"Signature_SinceCpp17"})},mdxType:"SwitchView"}),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"(1)")," Same as ",(0,l.kt)("inlineCode",{parentName:"p"},"reduce(first, last, typename std::iterator_traits<InputIt>::value_type{})"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"(2)")," Same as ",(0,l.kt)("inlineCode",{parentName:"p"},"reduce(first, last, init, std::plus<>())"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"(3)")," Reduces the range [",(0,l.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,l.kt)("inlineCode",{parentName:"p"},"last"),"), possibly permuted and aggregated in unspecified manner,\nalong with the initial value init over ",(0,l.kt)("inlineCode",{parentName:"p"},"binary_op"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"(4 - 6)")," Same as ",(0,l.kt)("strong",{parentName:"p"},"(1 - 3)"),", but executed according to policy."),(0,l.kt)("admonition",{parentName:"li",title:"Overload Resolution",type:"important"},(0,l.kt)("p",{parentName:"admonition"},"These overloads participate in overload resolution only if"),(0,l.kt)(d.OS,{v:"cpp20",mdxType:"Until"}," ",(0,l.kt)("code",null,"std::is_execution_policy_v<std::decay_t<ExecutionPolicy>>")," is ",(0,l.kt)("code",null,"true"),". "),(0,l.kt)(d.U6,{v:"cpp20",mdxType:"Since"}," ",(0,l.kt)("code",null,"std::is_execution_policy_v<std::remove_cvref_t<ExecutionPolicy>>")," is ",(0,l.kt)("code",null,"true"),". ")))),(0,l.kt)("p",null,"The behavior is non-deterministic if ",(0,l.kt)("inlineCode",{parentName:"p"},"binary_op")," is not associative or not commutative."),(0,l.kt)("admonition",{title:"Undefined Behaviour",type:"danger"},(0,l.kt)("p",{parentName:"admonition"},"The ",(0,l.kt)(c.Z,{title:(0,l.kt)(u.ZP,{mdxType:"Term_UndefinedBehaviour"}),mdxType:"Tooltip"},"behavior is undefined")," if ",(0,l.kt)("code",null,"binary_op")," modifies any element or invalidates any iterator in [",(0,l.kt)("code",null,"first"),", ",(0,l.kt)("code",null,"last"),"), including the end iterator.")),(0,l.kt)("h3",{id:"parameters"},"Parameters"),(0,l.kt)(i.ZP,{mdxType:"SymbolTable"},(0,l.kt)(i.mN,{none:!0,noLink:!0,name:(0,l.kt)(r.Fragment,null," ",(0,l.kt)("code",null,"first")," ",(0,l.kt)("br",null)," ",(0,l.kt)("code",null,"last")," "),mdxType:"Symbol"},"The range of elements to apply the algorithm to."),(0,l.kt)(i.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"init"),mdxType:"Symbol"},"The initial value of the generalized sum."),(0,l.kt)(i.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"policy"),mdxType:"Symbol"},"The execution policy to use. See ",(0,l.kt)("a",{href:"#"},"execution policy")," for details."),(0,l.kt)(i.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"binary_op"),mdxType:"Symbol"},"Binary ",(0,l.kt)("a",{href:"/docs/named_req/FunctionObject"},"FunctionObject")," that will be applied in unspecified order to the result of dereferencing the input iterators, the results of other ",(0,l.kt)("code",null,"binary_op")," and ",(0,l.kt)("code",null,"init"),".")),(0,l.kt)("h4",{id:"type-requirements"},"Type requirements"),(0,l.kt)(i.ZP,{mdxType:"SymbolTable"},(0,l.kt)(i.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"InputIt"),mdxType:"Symbol"},(0,l.kt)("a",{href:"/docs/named_req/LegacyInputIterator"},"LegacyInputIterator")),(0,l.kt)(i.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"ForwardIt"),mdxType:"Symbol"},(0,l.kt)("a",{href:"/docs/named_req/LegacyForwardIterator"},"LegacyForwardIterator")),(0,l.kt)(i.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"T"),mdxType:"Symbol"},(0,l.kt)("a",{href:"/docs/named_req/MoveAssignable"},"MoveAssignable")," ",(0,l.kt)("br",null),(0,l.kt)("a",{href:"/docs/named_req/MoveConstructible"},"MoveConstructible"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The following expressions must be convertible to ",(0,l.kt)("inlineCode",{parentName:"li"},"T"),":",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"binary_op(init, *first)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"binary_op(*first, init)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"binary_op(init, init)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"binary_op(*first, *first)"))))),(0,l.kt)("h3",{id:"return-value"},"Return value"),(0,l.kt)("p",null,"Generalized sum of ",(0,l.kt)("inlineCode",{parentName:"p"},"init")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"*first"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"*(first + 1)"),", ... ",(0,l.kt)("inlineCode",{parentName:"p"},"*(last - 1)")," over ",(0,l.kt)("inlineCode",{parentName:"p"},"binary_op"),","),(0,l.kt)("p",null,"Behaves like ",(0,l.kt)("inlineCode",{parentName:"p"},"std::reduce")," except the elements of the range may be grouped and rearranged in arbitrary order."),(0,l.kt)("p",null,"Formallly, the generalized sum ",(0,l.kt)("inlineCode",{parentName:"p"},"GSUM(op, a1, ..., aN)")," is defined as follows:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If ",(0,l.kt)("inlineCode",{parentName:"li"},"N = 1"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"a1")),(0,l.kt)("li",{parentName:"ul"},"If ",(0,l.kt)("inlineCode",{parentName:"li"},"N > 1"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"op(GSUM(op, b 1, ..., b K), GSUM(op, b M, ..., b N))")," where",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"b1"),", ..., ",(0,l.kt)("inlineCode",{parentName:"li"},"bN")," may be any permutation of ",(0,l.kt)("inlineCode",{parentName:"li"},"a1"),", ..., ",(0,l.kt)("inlineCode",{parentName:"li"},"aN")),(0,l.kt)("li",{parentName:"ul"},"and ",(0,l.kt)("inlineCode",{parentName:"li"},"1 < K + 1 = M \u2264 N"))))),(0,l.kt)("admonition",{type:"important"},(0,l.kt)("p",{parentName:"admonition"},"If the range is empty, ",(0,l.kt)("inlineCode",{parentName:"p"},"init")," is returned, unmodified")),(0,l.kt)("h3",{id:"complexity"},"Complexity"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"O(last - first)")," applications of ",(0,l.kt)("inlineCode",{parentName:"p"},"binary_op"),"."),(0,l.kt)("h3",{id:"exceptions"},"Exceptions"),(0,l.kt)("p",null,"The overloads with a template parameter named ",(0,l.kt)("inlineCode",{parentName:"p"},"ExecutionPolicy")," report errors as follows:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If execution of a function invoked as part of the algorithm throws an exception and ",(0,l.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy")," is one of the ",(0,l.kt)("a",{parentName:"li",href:"#"},(0,l.kt)("strong",{parentName:"a"},"standard policies")),", ",(0,l.kt)("a",{parentName:"li",href:"#"},(0,l.kt)("inlineCode",{parentName:"a"},"std::terminate"))," is called.\nFor any other ",(0,l.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy"),", the behavior is ",(0,l.kt)(c.Z,{title:(0,l.kt)(g,{mdxType:"Term_ImplementationDefined"}),mdxType:"Tooltip"},(0,l.kt)("strong",{parentName:"li"},"implementation-defined")),"."),(0,l.kt)("li",{parentName:"ul"},"If the algorithm fails to allocate memory, ",(0,l.kt)("inlineCode",{parentName:"li"},"std::bad_alloc")," is thrown.")),(0,l.kt)("h3",{id:"examples"},"Examples"),(0,l.kt)(o.Z,{columns:["8fr","4fr"],mdxType:"Columns"},(0,l.kt)("div",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='Main.cpp' showLineNumbers",title:"'Main.cpp'",showLineNumbers:!0},'#if PARALLEL\n#include <execution>\n#define SEQ std::execution::seq,\n#define PAR std::execution::par,\n#else\n#define SEQ\n#define PAR\n#endif\n\n#include <chrono>\n#include <iomanip>\n#include <iostream>\n#include <numeric>\n#include <utility>\n#include <vector>\n\nint main()\n{\n    std::cout.imbue(std::locale("en_US.UTF-8"));\n    std::cout << std::fixed << std::setprecision(1);\n    auto eval = [](auto fun)\n    {\n        const auto t1 = std::chrono::high_resolution_clock::now();\n        const auto [name, result] = fun();\n        const auto t2 = std::chrono::high_resolution_clock::now();\n        const std::chrono::duration<double, std::milli> ms = t2 - t1;\n        std::cout << std::setw(28) << std::left << name << "sum: "\n                  << result << "\\t time: " << ms.count() << " ms\\n";\n    };\n    {\n        const std::vector<double> v(100\'000\'007, 0.1);\n\n        eval([&v]{ return std::pair{"std::reduce (double)",\n            std::reduce(v.cbegin(), v.cend(), 0.0)}; } );\n        eval([&v]{ return std::pair{"std::reduce (seq, double)",\n            std::reduce(SEQ v.cbegin(), v.cend())}; } );\n        eval([&v]{ return std::pair{"std::reduce (par, double)",\n            std::reduce(PAR v.cbegin(), v.cend())}; } );\n    }\n    {\n        const std::vector<long> v(100\'000\'007, 1);\n\n        eval([&v]{ return std::pair{"std::reduce (long)",\n            std::reduce(v.cbegin(), v.cend(), 0l)}; } );\n        eval([&v]{ return std::pair{"std::reduce (seq, long)",\n            std::reduce(SEQ v.cbegin(), v.cend())}; } );\n        eval([&v]{ return std::pair{"std::reduce (par, long)",\n            std::reduce(PAR v.cbegin(), v.cend())}; } );\n    }\n}\n'))),(0,l.kt)("div",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Possible output"',title:'"Possible','output"':!0},"// POSIX: g++ -std=c++23 ./example.cpp -ltbb -O3; ./a.out\nstd::reduce (double)    sum: 10,000,000.7    time: 356.9 ms\nstd::reduce (seq, double)   sum: 10,000,000.7    time: 140.1 ms\nstd::reduce (par, double)   sum: 10,000,000.7    time: 140.1 ms\nstd::reduce (long)      sum: 100,000,007     time: 46.0 ms\nstd::reduce (seq, long)     sum: 100,000,007     time: 67.3 ms\nstd::reduce (par, long)     sum: 100,000,007     time: 63.3 ms\n\n// POSIX: g++ -std=c++23 ./example.cpp -ltbb -O3 -DPARALLEL; ./a.out\nstd::reduce (double)    sum: 10,000,000.7    time: 353.4 ms\nstd::reduce (seq, double)   sum: 10,000,000.7    time: 140.7 ms\nstd::reduce (par, double)   sum: 10,000,000.7    time: 24.7 ms\nstd::reduce (long)      sum: 100,000,007     time: 42.4 ms\nstd::reduce (seq, long)     sum: 100,000,007     time: 52.0 ms\nstd::reduce (par, long)     sum: 100,000,007     time: 23.1 ms\n")))))}C.isMDXComponent=!0}}]);