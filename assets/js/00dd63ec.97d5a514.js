"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[83752,8858,67195],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var l=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=l.createContext({}),c=function(e){var t=l.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return l.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(o,".").concat(m)]||d[m]||u[m]||r;return n?l.createElement(f,s(s({ref:t},p),{},{components:n})):l.createElement(f,s({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=d;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<r;c++)s[c]=n[c];return l.createElement.apply(null,s)}return l.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>s});var l=n(67294),a=n(86010);const r="tabItem_Ymn6";function s(e){let{children:t,hidden:n,className:s}=e;return l.createElement("div",{role:"tabpanel",className:(0,a.Z)(r,s),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>C});var l=n(87462),a=n(67294),r=n(86010),s=n(12466),i=n(76775),o=n(91980),c=n(67392),p=n(50012);function u(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:l,default:a}}=e;return{value:t,label:n,attributes:l,default:a}}))}function d(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const l=(0,i.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o._X)(r),(0,a.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(l.location.search);t.set(r,e),l.replace({...l.location,search:t.toString()})}),[r,l])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:l}=e,r=d(e),[s,i]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const l=n.find((e=>e.default))??n[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:t,tabValues:r}))),[o,c]=f({queryString:n,groupId:l}),[u,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[l,r]=(0,p.Nk)(n);return[l,(0,a.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:l}),v=(()=>{const e=o??u;return m({value:e,tabValues:r})?e:null})();(0,a.useLayoutEffect)((()=>{v&&i(v)}),[v]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),g(e)}),[c,g,r]),tabValues:r}}var v=n(72389);const b="tabList__CuJ",h="tabItem_LNqP";function k(e){let{className:t,block:n,selectedValue:i,selectValue:o,tabValues:c}=e;const p=[],{blockElementScrollPositionUntilNextRender:u}=(0,s.o5)(),d=e=>{const t=e.currentTarget,n=p.indexOf(t),l=c[n].value;l!==i&&(u(t),o(l))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:s}=e;return a.createElement("li",(0,l.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:d},s,{className:(0,r.Z)("tabs__item",h,s?.className,{"tabs__item--active":i===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:l}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===l));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==l}))))}function N(e){const t=g(e);return a.createElement("div",{className:(0,r.Z)("tabs-container",b)},a.createElement(k,(0,l.Z)({},e,t)),a.createElement(y,(0,l.Z)({},e,t)))}function C(e){const t=(0,v.Z)();return a.createElement(N,(0,l.Z)({key:String(t)},e))}},98839:(e,t,n)=>{n.d(t,{z:()=>l});const l=n(67294).createContext({name:"Unknown",folder:"unknown"})},22307:(e,t,n)=>{n.d(t,{Z:()=>s});var l=n(87462),a=n(67294);const r="columns_Terr";function s(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,a.createElement("div",(0,l.Z)({className:r,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}s.isMDXComponent=!0},99801:(e,t,n)=>{n.d(t,{Z:()=>c});var l=n(67294),a=n(74866),r=n(85162),s=n(99372),i=n(72412);const o={};function c(e){const t=e.content||{};return l.createElement(a.Z,null,Object.entries(t).map(((e,t)=>{let[n,c]=e;return c.value||c.simplified||c.detailed?l.createElement(r.Z,{value:n,label:s.gJ.get(n),default:c.default||0==t},c.simplified?l.createElement(l.Fragment,null,l.createElement(a.Z,{groupId:"view_mode",className:o.smallTabs},l.createElement(r.Z,{value:"simplified",label:"Simplified",default:!0},(0,i.Z)(c.simplified)),l.createElement(r.Z,{value:"detailed",label:"Detailed"},(0,i.Z)(c.detailed)))):c.value):l.createElement(r.Z,{value:n,label:s.gJ.get(n),default:0==t},(0,i.Z)(c))})))}},55059:(e,t,n)=>{n.d(t,{mN:()=>p,ZP:()=>c});var l=n(67294),a=n(72412);const r={symbolTable:"symbolTable_yosy",symbolName:"symbolName__gUy",symbolDesc:"symbolDesc_wDaQ",symbolProp:"symbolProp_oAcv",accessPublic:"accessPublic_LfqG",accessProtected:"accessProtected_bDL6",accessPrivate:"accessPrivate_Ab5O",modStatic:"modStatic_ZSC5",modConstexpr:"modConstexpr_iypt",modConst:"modConst_osuL",modVolatile:"modVolatile_ePYM",modVirtual:"modVirtual_jNz7"};var s=n(98839);const i={None:{Order:0,ShortName:"",FullName:"",Style:r.accessPublic},Public:{Order:1,ShortName:"pub",FullName:"public",Style:r.accessPublic},Protected:{Order:2,ShortName:"prot",FullName:"protected",Style:r.accessProtected},Private:{Order:3,ShortName:"priv",FullName:"private",Style:r.accessPrivate}},o=e=>e.none?i.None:e.pub||e.public?i.Public:e.prot||e.protected?i.Protected:e.priv||e.private?i.Private:i.Public;function c(e){return(t=>{if(0===t.length)return null;const n=t.sort(((e,t)=>o(e).Order<o(t).Order));return l.createElement("table",{"data-no-traits":`${e.noTraits||"false"}`,className:r.symbolTable},l.createElement("tbody",null,n))})(l.Children.toArray(e.children))}function p(e){l.useContext(s.z);let t=(0,a.Z)(e.name),n=null;e.desc?n=e.desc:e.children&&(n=e.children);const i=e.linkName||e.autoLink;!e.noLink&&i&&(t=l.createElement("a",{href:e.link||`${e.linkName||e.name}`},t));const c=(e,t,n)=>!0===e?l.createElement("span",{className:r[t]},n):null;return l.createElement("tr",null,!e.none&&l.createElement("td",{className:r.symbolProp},(e=>{const t=o(e);return l.createElement("span",{className:t.Style},t.ShortName)})(e),c(e.static,"modStatic","static"),c(e.constexpr,"modConstexpr","constexpr"),c(e.const,"modConst","const"),c(e.volatile,"modVolatile","volatile"),c(e.virtual,"modVirtual","virtual")),l.createElement("td",{className:r.symbolName},t),l.createElement("td",{className:r.symbolDesc},(0,a.Z)(n)))}p.isMDXComponent=!0,c.isMDXComponent=!0,c.Symbol=p},99372:(e,t,n)=>{n.d(t,{gJ:()=>p,eH:()=>f,U6:()=>d,OS:()=>m});var l=n(67294),a=n(95999);const r="markedText_c6kK",s="since_c1Q3",i="until_jXK6",o="removed_A_Kf",c="versionNumber_BiUX",p=new Map;function u(e){let{children:t,className:n}=e;return l.createElement("span",{className:r+(n?" "+n:"")},t)}function d(e){let{children:t,v:n}=e;return l.createElement(u,{className:s},t,"\xa0",l.createElement("span",{className:c},l.createElement("small",null,"(",p.get(`since-${n}`),")")))}function m(e){let{children:t,v:n}=e;return l.createElement(u,{className:i},t,"\xa0",l.createElement("span",{className:c},l.createElement("small",null,"(",p.get(`until-${n}`),")")))}function f(e){let{children:t,v:n}=e;return l.createElement(u,{className:o},t,"\xa0",l.createElement("span",{className:c},l.createElement("small",null,"(",p.get(`removed-${n}`),")")))}p.set("cpp98","C++98"),p.set("cpp03","C++03"),p.set("cpp11","C++11"),p.set("cpp14","C++14"),p.set("cpp17","C++17"),p.set("cpp20","C++20"),p.set("cpp23","C++23"),p.set("deprecated-",l.createElement(a.Z,null,"deprecated")),p.set("deprecated-cpp98",l.createElement(a.Z,null,"deprecated in C++98")),p.set("deprecated-cpp03",l.createElement(a.Z,null,"deprecated in C++03")),p.set("deprecated-cpp11",l.createElement(a.Z,null,"deprecated in C++11")),p.set("deprecated-cpp14",l.createElement(a.Z,null,"deprecated in C++14")),p.set("deprecated-cpp17",l.createElement(a.Z,null,"deprecated in C++17")),p.set("deprecated-cpp20",l.createElement(a.Z,null,"deprecated in C++20")),p.set("deprecated-cpp23",l.createElement(a.Z,null,"deprecated in C++23")),p.set("until-cpp98",l.createElement(a.Z,null,"until C++98")),p.set("until-cpp03",l.createElement(a.Z,null,"until C++03")),p.set("until-cpp11",l.createElement(a.Z,null,"until C++11")),p.set("until-cpp14",l.createElement(a.Z,null,"until C++14")),p.set("until-cpp17",l.createElement(a.Z,null,"until C++17")),p.set("until-cpp20",l.createElement(a.Z,null,"until C++20")),p.set("until-cpp23",l.createElement(a.Z,null,"until C++23")),p.set("since-cpp98",l.createElement(a.Z,null,"since C++98")),p.set("since-cpp03",l.createElement(a.Z,null,"since C++03")),p.set("since-cpp11",l.createElement(a.Z,null,"since C++11")),p.set("since-cpp14",l.createElement(a.Z,null,"since C++14")),p.set("since-cpp17",l.createElement(a.Z,null,"since C++17")),p.set("since-cpp20",l.createElement(a.Z,null,"since C++20")),p.set("since-cpp23",l.createElement(a.Z,null,"since C++23")),p.set("removed-",l.createElement(a.Z,null,"deleted")),p.set("removed-cpp98",l.createElement(a.Z,null,"removed in C++98")),p.set("removed-cpp03",l.createElement(a.Z,null,"removed in C++03")),p.set("removed-cpp11",l.createElement(a.Z,null,"removed in C++11")),p.set("removed-cpp14",l.createElement(a.Z,null,"removed in C++14")),p.set("removed-cpp17",l.createElement(a.Z,null,"removed in C++17")),p.set("removed-cpp20",l.createElement(a.Z,null,"removed in C++20")),p.set("removed-cpp23",l.createElement(a.Z,null,"removed in C++23"))},72412:(e,t,n)=>{function l(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>l})},4790:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var l=n(87462),a=(n(67294),n(3905));const r={},s=void 0,i={unversionedId:"std/algo/ranges/_codes/fill/since-cpp20-detailed",id:"std/algo/ranges/_codes/fill/since-cpp20-detailed",title:"since-cpp20-detailed",description:"",source:"@site/content/docs/std/algo/ranges/_codes/fill/since-cpp20-detailed.mdx",sourceDirName:"std/algo/ranges/_codes/fill",slug:"/std/algo/ranges/_codes/fill/since-cpp20-detailed",permalink:"/CppLangNet/docs/std/algo/ranges/_codes/fill/since-cpp20-detailed",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ranges/_codes/fill/since-cpp20-detailed.mdx",tags:[],version:"current",frontMatter:{}},o={},c=[],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,l.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate<\n  class T,\n  std::output_iterator<const T&> O,\n  std::sentinel_for<O> S\n>\nconstexpr O fill( O first, S last, const T& value );\n\n// (2)\ntemplate<\n  class T,\n  ranges::output_range<const T&> R\n>\nconstexpr ranges::borrowed_iterator_t<R> fill( R&& r, const T& value );\n")))}u.isMDXComponent=!0},61315:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var l=n(87462),a=(n(67294),n(3905));const r={},s=void 0,i={unversionedId:"std/algo/ranges/_codes/fill/since-cpp20-simplified",id:"std/algo/ranges/_codes/fill/since-cpp20-simplified",title:"since-cpp20-simplified",description:"The type of arguments are generic and have the following constraints:",source:"@site/content/docs/std/algo/ranges/_codes/fill/since-cpp20-simplified.mdx",sourceDirName:"std/algo/ranges/_codes/fill",slug:"/std/algo/ranges/_codes/fill/since-cpp20-simplified",permalink:"/CppLangNet/docs/std/algo/ranges/_codes/fill/since-cpp20-simplified",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ranges/_codes/fill/since-cpp20-simplified.mdx",tags:[],version:"current",frontMatter:{}},o={},c=[],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,l.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate<\n  class T,\n  std::output_iterator<const T&> O,\n  std::sentinel_for<O> S\n>\nconstexpr O fill( O first, S last, const T& value );\n\n// (2)\ntemplate<\n  class T,\n  ranges::output_range<const T&> R\n>\nconstexpr ranges::borrowed_iterator_t<R> fill( R&& r, const T& value );\n")),(0,a.kt)("p",null,"The type of arguments are generic and have the following constraints:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"T")," - ",(0,a.kt)("strong",{parentName:"li"},"(none)")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"O")," - ",(0,a.kt)("inlineCode",{parentName:"li"},"std::output_iterator<const T&>")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"S")," - ",(0,a.kt)("inlineCode",{parentName:"li"},"std::sentinel_for<O>")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"(2)")," - ",(0,a.kt)("inlineCode",{parentName:"li"},"R")," - ",(0,a.kt)("inlineCode",{parentName:"li"},"std::ranges::output_range<const T&>"))))}u.isMDXComponent=!0},46576:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>d,default:()=>b,frontMatter:()=>u,metadata:()=>m,toc:()=>g});var l=n(87462),a=n(67294),r=n(3905),s=n(55059),i=n(22307),o=n(99801),c=(n(99372),n(4790)),p=n(61315);const u={title:"ranges::fill algorithm",sidebar_label:"ranges::fill(  )",description:"ranges::fill algorithm C++ documentation",hide_title:!0,tags:["algorithm","fill"],cppreference_origin_rel:"w/cpp/algorithm/ranges/fill"},d=void 0,m={unversionedId:"std/algo/ranges/fill",id:"std/algo/ranges/fill",title:"ranges::fill algorithm",description:"ranges::fill algorithm C++ documentation",source:"@site/content/docs/std/algo/ranges/fill.mdx",sourceDirName:"std/algo/ranges",slug:"/std/algo/ranges/fill",permalink:"/CppLangNet/docs/std/algo/ranges/fill",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ranges/fill.mdx",tags:[{label:"algorithm",permalink:"/CppLangNet/docs/tags/algorithm"},{label:"fill",permalink:"/CppLangNet/docs/tags/fill"}],version:"current",frontMatter:{title:"ranges::fill algorithm",sidebar_label:"ranges::fill(  )",description:"ranges::fill algorithm C++ documentation",hide_title:!0,tags:["algorithm","fill"],cppreference_origin_rel:"w/cpp/algorithm/ranges/fill"},sidebar:"defaultSidebar",previous:{title:"ranges::reverse_copy(  )",permalink:"/CppLangNet/docs/std/algo/ranges/reverse_copy"},next:{title:"ranges::fill_n(  )",permalink:"/CppLangNet/docs/std/algo/ranges/fill_n"}},f={},g=[{value:"Parameters",id:"parameters",level:3},{value:"Return value",id:"return-value",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"Possible implementation",id:"possible-implementation",level:3},{value:"Examples",id:"examples",level:3}],v={toc:g};function b(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,l.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"stdrangesfill-algorithm"},"std::ranges::fill() algorithm"),(0,r.kt)(o.Z,{content:{"since-cpp20":{simplified:(0,r.kt)(p.default,{mdxType:"Signature_SinceCpp20_Simplified"}),detailed:(0,r.kt)(c.default,{mdxType:"Signature_SinceCpp20_Detailed"})}},mdxType:"SwitchView"}),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"(1)")," Assigns the given value to the elements in the range [",(0,r.kt)("inlineCode",{parentName:"li"},"first"),"; ",(0,r.kt)("inlineCode",{parentName:"li"},"last"),")."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"(2)")," Same as ",(0,r.kt)("strong",{parentName:"li"},"(1)"),", but uses ",(0,r.kt)("inlineCode",{parentName:"li"},"r")," as the source range, as if using ",(0,r.kt)("inlineCode",{parentName:"li"},"ranges::begin(r)")," as ",(0,r.kt)("inlineCode",{parentName:"li"},"first")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"ranges::end(r)")," as ",(0,r.kt)("inlineCode",{parentName:"li"},"last"),".")),(0,r.kt)("p",null,"The function-like entities described on this page are ",(0,r.kt)("a",{parentName:"p",href:"/docs/std/algo/niebloids"},(0,r.kt)("strong",{parentName:"a"},"niebloids")),"."),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)(s.ZP,{mdxType:"SymbolTable"},(0,r.kt)(s.mN,{none:!0,noLink:!0,name:(0,r.kt)(a.Fragment,null," ",(0,r.kt)("code",null,"first")," ",(0,r.kt)("br",null)," ",(0,r.kt)("code",null,"last")," "),mdxType:"Symbol"},"The range of elements to examine."),(0,r.kt)(s.mN,{none:!0,noLink:!0,name:(0,r.kt)("code",null,"r"),mdxType:"Symbol"},"The range of elements to examine."),(0,r.kt)(s.mN,{none:!0,noLink:!0,name:(0,r.kt)("code",null,"value"),mdxType:"Symbol"},"The value to assign.")),(0,r.kt)("h3",{id:"return-value"},"Return value"),(0,r.kt)("p",null,"An output iterator that compares equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"last"),"."),(0,r.kt)("h3",{id:"complexity"},"Complexity"),(0,r.kt)("p",null,"Exactly ",(0,r.kt)("inlineCode",{parentName:"p"},"last - first")," assignments."),(0,r.kt)("h3",{id:"exceptions"},"Exceptions"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"(none)")),(0,r.kt)("h3",{id:"possible-implementation"},"Possible implementation"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"ranges::fill"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"struct fill_fn\n{\n    template<class T, std::output_iterator<const T&> O, std::sentinel_for<O> S>\n    constexpr O operator()(O first, S last, const T& value) const\n    {\n        while (first != last)\n            *first++ = value;\n\n        return first;\n    }\n\n    template<class T, ranges::output_range<const T&> R>\n    constexpr ranges::borrowed_iterator_t<R> operator()(R&& r, const T& value) const\n    {\n        return (*this)(ranges::begin(r), ranges::end(r), value);\n    }\n};\n\ninline constexpr fill_fn fill;\n"))),(0,r.kt)("h3",{id:"examples"},"Examples"),(0,r.kt)("p",null,"The following code uses ",(0,r.kt)("a",{parentName:"p",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"ranges::fill"))," to set all elements of ",(0,r.kt)("a",{parentName:"p",href:"/docs/std/containers/arrays/vector"},(0,r.kt)("inlineCode",{parentName:"a"},"std::vector<int>"))," first to ",(0,r.kt)("inlineCode",{parentName:"p"},"-1"),", then to ",(0,r.kt)("inlineCode",{parentName:"p"},"10"),"."),(0,r.kt)(i.Z,{columns:["8fr","4fr"],mdxType:"Columns"},(0,r.kt)("div",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='Main.cpp' showLineNumbers",title:"'Main.cpp'",showLineNumbers:!0},"#include <algorithm>\n#include <iostream>\n#include <vector>\n\nvoid println(std::vector<int> const& vi)\n{\n    for (int e : vi)\n        std::cout << e << ' ';\n    std::cout << '\\n';\n}\n\nint main()\n{\n    std::vector<int> v {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};\n\n    std::ranges::fill(v.begin(), v.end(), -1);\n    println(v);\n\n    std::ranges::fill(v, 10);\n    println(v);\n}\n"))),(0,r.kt)("div",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Output"',title:'"Output"'},"-1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n10 10 10 10 10 10 10 10 10 10\n")))))}b.isMDXComponent=!0}}]);