"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[66283],{14064:(e,t,n)=>{n.d(t,{ZP:()=>l});var a=n(87462),r=(n(67294),n(3905));const o={toc:[]};function l(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Aspects and semantics that are ",(0,r.kt)("strong",{parentName:"p"},"implementation-defined")," are not guaranteed by\nthe standard in any way, rather they are left out to the implementation (compiler vendor standard library, most of the times).\nFor example, most mathematical functions incur some ",(0,r.kt)("strong",{parentName:"p"},"implementation-defined")," behaviour."))}l.isMDXComponent=!0},85162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294),r=n(86010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>_});var a=n(87462),r=n(67294),o=n(86010),l=n(12466),i=n(76775),c=n(91980),s=n(67392),p=n(50012);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function u(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,s.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function y(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,c._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=u(e),[l,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[c,s]=y({queryString:n,groupId:a}),[d,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,p.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),g=(()=>{const e=c??d;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{g&&i(g)}),[g]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),s(e),f(e)}),[s,f,o]),tabValues:o}}var g=n(72389);const v="tabList__CuJ",k="tabItem_LNqP";function h(e){let{className:t,block:n,selectedValue:i,selectValue:c,tabValues:s}=e;const p=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.o5)(),u=e=>{const t=e.currentTarget,n=p.indexOf(t),a=s[n].value;a!==i&&(d(t),c(a))},m=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},s.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:u},l,{className:(0,o.Z)("tabs__item",k,l?.className,{"tabs__item--active":i===t})}),n??t)})))}function b(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=f(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",v)},r.createElement(h,(0,a.Z)({},e,t)),r.createElement(b,(0,a.Z)({},e,t)))}function _(e){const t=(0,g.Z)();return r.createElement(N,(0,a.Z)({key:String(t)},e))}},98839:(e,t,n)=>{n.d(t,{z:()=>a});const a=n(67294).createContext({name:"Unknown",folder:"unknown"})},22307:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(87462),r=n(67294);const o="columns_Terr";function l(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,r.createElement("div",(0,a.Z)({className:o,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}l.isMDXComponent=!0},99801:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(67294),r=n(74866),o=n(85162),l=n(99372),i=n(72412);const c={};function s(e){const t=e.content||{};return a.createElement(r.Z,null,Object.entries(t).map(((e,t)=>{let[n,s]=e;return s.value||s.simplified||s.detailed?a.createElement(o.Z,{value:n,label:l.gJ.get(n),default:s.default||0==t},s.simplified?a.createElement(a.Fragment,null,a.createElement(r.Z,{groupId:"view_mode",className:c.smallTabs},a.createElement(o.Z,{value:"simplified",label:"Simplified",default:!0},(0,i.Z)(s.simplified)),a.createElement(o.Z,{value:"detailed",label:"Detailed"},(0,i.Z)(s.detailed)))):s.value):a.createElement(o.Z,{value:n,label:l.gJ.get(n),default:0==t},(0,i.Z)(s))})))}},55059:(e,t,n)=>{n.d(t,{mN:()=>p,ZP:()=>s});var a=n(67294),r=n(72412);const o={symbolTable:"symbolTable_yosy",symbolName:"symbolName__gUy",symbolDesc:"symbolDesc_wDaQ",symbolProp:"symbolProp_oAcv",accessPublic:"accessPublic_LfqG",accessProtected:"accessProtected_bDL6",accessPrivate:"accessPrivate_Ab5O",modStatic:"modStatic_ZSC5",modConstexpr:"modConstexpr_iypt",modConst:"modConst_osuL",modVolatile:"modVolatile_ePYM",modVirtual:"modVirtual_jNz7"};var l=n(98839);const i={None:{Order:0,ShortName:"",FullName:"",Style:o.accessPublic},Public:{Order:1,ShortName:"pub",FullName:"public",Style:o.accessPublic},Protected:{Order:2,ShortName:"prot",FullName:"protected",Style:o.accessProtected},Private:{Order:3,ShortName:"priv",FullName:"private",Style:o.accessPrivate}},c=e=>e.none?i.None:e.pub||e.public?i.Public:e.prot||e.protected?i.Protected:e.priv||e.private?i.Private:i.Public;function s(e){return(t=>{if(0===t.length)return null;const n=t.sort(((e,t)=>c(e).Order<c(t).Order));return a.createElement("table",{"data-no-traits":`${e.noTraits||"false"}`,className:o.symbolTable},a.createElement("tbody",null,n))})(a.Children.toArray(e.children))}function p(e){a.useContext(l.z);let t=(0,r.Z)(e.name),n=null;e.desc?n=e.desc:e.children&&(n=e.children);const i=e.linkName||e.autoLink;!e.noLink&&i&&(t=a.createElement("a",{href:e.link||`${e.linkName||e.name}`},t));const s=(e,t,n)=>!0===e?a.createElement("span",{className:o[t]},n):null;return a.createElement("tr",null,!e.none&&a.createElement("td",{className:o.symbolProp},(e=>{const t=c(e);return a.createElement("span",{className:t.Style},t.ShortName)})(e),s(e.static,"modStatic","static"),s(e.constexpr,"modConstexpr","constexpr"),s(e.const,"modConst","const"),s(e.volatile,"modVolatile","volatile"),s(e.virtual,"modVirtual","virtual")),a.createElement("td",{className:o.symbolName},t),a.createElement("td",{className:o.symbolDesc},(0,r.Z)(n)))}p.isMDXComponent=!0,s.isMDXComponent=!0,s.Symbol=p},18510:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(67294),r=n(44996),o=n(34386),l=n(72412);const i="TooltipContent_Lvru",c="TooltipTitle_ukF2";function s(e){let{url:t,title:n,maxWidth:s,children:p}=e;let d=s||"clamp(250px, 25vw, 800px)";"string"==typeof d&&d.endsWith("vw")&&(d=`clamp(250px, ${d}, 800px)`);const u="function"==typeof n?a.createElement(n):n,m=(t||"").startsWith("/")?(0,r.Z)(t):t,y=t?a.createElement("a",{href:m,target:"_blank",rel:"noreferrer"},p):p;return a.createElement(o.Z,{componentsProps:{tooltip:{style:{maxWidth:d}}},title:a.createElement("span",{className:c},(0,l.Z)(u)),placement:"top",arrow:!0},a.createElement("span",{className:i},y))}s.isMDXComponent=!0},99372:(e,t,n)=>{n.d(t,{gJ:()=>p,eH:()=>y,U6:()=>u,OS:()=>m});var a=n(67294),r=n(95999);const o="markedText_c6kK",l="since_c1Q3",i="until_jXK6",c="removed_A_Kf",s="versionNumber_BiUX",p=new Map;function d(e){let{children:t,className:n}=e;return a.createElement("span",{className:o+(n?" "+n:"")},t)}function u(e){let{children:t,v:n}=e;return a.createElement(d,{className:l},t,"\xa0",a.createElement("span",{className:s},a.createElement("small",null,"(",p.get(`since-${n}`),")")))}function m(e){let{children:t,v:n}=e;return a.createElement(d,{className:i},t,"\xa0",a.createElement("span",{className:s},a.createElement("small",null,"(",p.get(`until-${n}`),")")))}function y(e){let{children:t,v:n}=e;return a.createElement(d,{className:c},t,"\xa0",a.createElement("span",{className:s},a.createElement("small",null,"(",p.get(`removed-${n}`),")")))}p.set("cpp98","C++98"),p.set("cpp03","C++03"),p.set("cpp11","C++11"),p.set("cpp14","C++14"),p.set("cpp17","C++17"),p.set("cpp20","C++20"),p.set("cpp23","C++23"),p.set("deprecated-",a.createElement(r.Z,null,"deprecated")),p.set("deprecated-cpp98",a.createElement(r.Z,null,"deprecated in C++98")),p.set("deprecated-cpp03",a.createElement(r.Z,null,"deprecated in C++03")),p.set("deprecated-cpp11",a.createElement(r.Z,null,"deprecated in C++11")),p.set("deprecated-cpp14",a.createElement(r.Z,null,"deprecated in C++14")),p.set("deprecated-cpp17",a.createElement(r.Z,null,"deprecated in C++17")),p.set("deprecated-cpp20",a.createElement(r.Z,null,"deprecated in C++20")),p.set("deprecated-cpp23",a.createElement(r.Z,null,"deprecated in C++23")),p.set("until-cpp98",a.createElement(r.Z,null,"until C++98")),p.set("until-cpp03",a.createElement(r.Z,null,"until C++03")),p.set("until-cpp11",a.createElement(r.Z,null,"until C++11")),p.set("until-cpp14",a.createElement(r.Z,null,"until C++14")),p.set("until-cpp17",a.createElement(r.Z,null,"until C++17")),p.set("until-cpp20",a.createElement(r.Z,null,"until C++20")),p.set("until-cpp23",a.createElement(r.Z,null,"until C++23")),p.set("since-cpp98",a.createElement(r.Z,null,"since C++98")),p.set("since-cpp03",a.createElement(r.Z,null,"since C++03")),p.set("since-cpp11",a.createElement(r.Z,null,"since C++11")),p.set("since-cpp14",a.createElement(r.Z,null,"since C++14")),p.set("since-cpp17",a.createElement(r.Z,null,"since C++17")),p.set("since-cpp20",a.createElement(r.Z,null,"since C++20")),p.set("since-cpp23",a.createElement(r.Z,null,"since C++23")),p.set("removed-",a.createElement(r.Z,null,"deleted")),p.set("removed-cpp98",a.createElement(r.Z,null,"removed in C++98")),p.set("removed-cpp03",a.createElement(r.Z,null,"removed in C++03")),p.set("removed-cpp11",a.createElement(r.Z,null,"removed in C++11")),p.set("removed-cpp14",a.createElement(r.Z,null,"removed in C++14")),p.set("removed-cpp17",a.createElement(r.Z,null,"removed in C++17")),p.set("removed-cpp20",a.createElement(r.Z,null,"removed in C++20")),p.set("removed-cpp23",a.createElement(r.Z,null,"removed in C++23"))},72412:(e,t,n)=>{function a(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>a})},70250:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const o={},l=void 0,i={unversionedId:"std/algo/ordinary/_codes/copy/since-cpp17",id:"std/algo/ordinary/_codes/copy/since-cpp17",title:"since-cpp17",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/copy/since-cpp17.mdx",sourceDirName:"std/algo/ordinary/_codes/copy",slug:"/std/algo/ordinary/_codes/copy/since-cpp17",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/copy/since-cpp17",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/copy/since-cpp17.mdx",tags:[],version:"current",frontMatter:{}},c={},s=[],p={toc:s};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class InputIt, class OutputIt >\nOutputIt copy( InputIt first, InputIt last, OutputIt d_first );\n\n// (2)\ntemplate< class ExecutionPolicy, class ForwardIt1, class ForwardIt2 >\nForwardIt2 copy( ExecutionPolicy&& policy,\n                 ForwardIt1 first, ForwardIt1 last, ForwardIt2 d_first );\n")))}d.isMDXComponent=!0},32491:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const o={},l=void 0,i={unversionedId:"std/algo/ordinary/_codes/copy/since-cpp20",id:"std/algo/ordinary/_codes/copy/since-cpp20",title:"since-cpp20",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/copy/since-cpp20.mdx",sourceDirName:"std/algo/ordinary/_codes/copy",slug:"/std/algo/ordinary/_codes/copy/since-cpp20",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/copy/since-cpp20",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/copy/since-cpp20.mdx",tags:[],version:"current",frontMatter:{}},c={},s=[],p={toc:s};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class InputIt, class OutputIt >\nconstexpr OutputIt copy( InputIt first, InputIt last, OutputIt d_first );\n\n// (2)\ntemplate< class ExecutionPolicy, class ForwardIt1, class ForwardIt2 >\nForwardIt2 copy( ExecutionPolicy&& policy,\n                 ForwardIt1 first, ForwardIt1 last, ForwardIt2 d_first );\n")))}d.isMDXComponent=!0},48309:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const o={},l=void 0,i={unversionedId:"std/algo/ordinary/_codes/copy/until-cpp17",id:"std/algo/ordinary/_codes/copy/until-cpp17",title:"until-cpp17",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/copy/until-cpp17.mdx",sourceDirName:"std/algo/ordinary/_codes/copy",slug:"/std/algo/ordinary/_codes/copy/until-cpp17",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/copy/until-cpp17",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/copy/until-cpp17.mdx",tags:[],version:"current",frontMatter:{}},c={},s=[],p={toc:s};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class InputIt, class OutputIt >\nOutputIt copy( InputIt first, InputIt last, OutputIt d_first );\n")))}d.isMDXComponent=!0},45821:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>g,default:()=>N,frontMatter:()=>f,metadata:()=>v,toc:()=>h});var a=n(87462),r=n(67294),o=n(3905),l=n(55059),i=n(22307),c=n(99801),s=n(18510),p=n(99372),d=n(14064),u=n(48309),m=n(70250),y=n(32491);const f={title:"copy algorithm",sidebar_label:"copy(  )",description:"copy algorithm C++ documentation",hide_title:!0,tags:["algorithm","copy","clone"],cppreference_origin_rel:"w/cpp/algorithm/copy"},g=void 0,v={unversionedId:"std/algo/ordinary/copy",id:"std/algo/ordinary/copy",title:"copy algorithm",description:"copy algorithm C++ documentation",source:"@site/content/docs/std/algo/ordinary/copy.mdx",sourceDirName:"std/algo/ordinary",slug:"/std/algo/ordinary/copy",permalink:"/CppLangNet/docs/std/algo/ordinary/copy",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/copy.mdx",tags:[{label:"algorithm",permalink:"/CppLangNet/docs/tags/algorithm"},{label:"copy",permalink:"/CppLangNet/docs/tags/copy"},{label:"clone",permalink:"/CppLangNet/docs/tags/clone"}],version:"current",frontMatter:{title:"copy algorithm",sidebar_label:"copy(  )",description:"copy algorithm C++ documentation",hide_title:!0,tags:["algorithm","copy","clone"],cppreference_origin_rel:"w/cpp/algorithm/copy"},sidebar:"defaultSidebar",previous:{title:"swap(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/swap"},next:{title:"copy_if(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/copy_if"}},k={},h=[{value:"Parameters",id:"parameters",level:3},{value:"Type requirements",id:"type-requirements",level:4},{value:"Return value",id:"return-value",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"Possible implementation",id:"possible-implementation",level:3},{value:"Notes",id:"notes",level:3},{value:"Examples",id:"examples",level:3}],b={toc:h};function N(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"stdcopy-algorithm"},"std::copy() algorithm"),(0,o.kt)(c.Z,{content:{"since-cpp20":(0,o.kt)(y.default,{mdxType:"Signature_SinceCpp20"}),"since-cpp17":(0,o.kt)(m.default,{mdxType:"Signature_SinceCpp17"}),"until-cpp17":(0,o.kt)(u.default,{mdxType:"Signature_UntilCpp17"})},mdxType:"SwitchView"}),(0,o.kt)("p",null,"Copies the elements in the range, defined by [",(0,o.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,o.kt)("inlineCode",{parentName:"p"},"last"),"), to another range beginning at ",(0,o.kt)("inlineCode",{parentName:"p"},"d_first"),"."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"(1)"),"\nCopies all elements in the range [",(0,o.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,o.kt)("inlineCode",{parentName:"p"},"last"),") starting from first and proceeding to ",(0,o.kt)("inlineCode",{parentName:"p"},"last - 1"),"."),(0,o.kt)("admonition",{parentName:"li",title:"Undefined Behaviour",type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"The behavior is undefined if ",(0,o.kt)("inlineCode",{parentName:"p"},"d_first")," is within the range [",(0,o.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,o.kt)("inlineCode",{parentName:"p"},"last"),"). In this case, ",(0,o.kt)("a",{parentName:"p",href:"/docs/algo/ordinary/copy_backward"},(0,o.kt)("inlineCode",{parentName:"a"},"std::copy_backward"))," may be used instead."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"(2)")," Same as ",(0,o.kt)("strong",{parentName:"p"},"(1)"),", but executed according to ",(0,o.kt)("inlineCode",{parentName:"p"},"policy"),"."),(0,o.kt)("admonition",{parentName:"li",title:"Overload Resolution",type:"important"},(0,o.kt)("p",{parentName:"admonition"},"These overloads participate in overload resolution only if"),(0,o.kt)(p.OS,{v:"cpp20",mdxType:"Until"}," ",(0,o.kt)("code",null,"std::is_execution_policy_v<std::decay_t<ExecutionPolicy>>")," ")," ",(0,o.kt)(p.U6,{v:"cpp20",mdxType:"Since"}," ",(0,o.kt)("code",null,"std::is_execution_policy_v<std::remove_cvref_t<ExecutionPolicy>>")," ")," is ",(0,o.kt)("code",null,"true"),"."))),(0,o.kt)("h3",{id:"parameters"},"Parameters"),(0,o.kt)(l.ZP,{mdxType:"SymbolTable"},(0,o.kt)(l.mN,{none:!0,noLink:!0,name:(0,o.kt)(r.Fragment,null," ",(0,o.kt)("code",null,"first")," ",(0,o.kt)("br",null)," ",(0,o.kt)("code",null,"last")," "),mdxType:"Symbol"},"The range of elements to copy."),(0,o.kt)(l.mN,{none:!0,noLink:!0,name:(0,o.kt)("code",null,"d_first"),mdxType:"Symbol"},"The beginning of the destination range."),(0,o.kt)(l.mN,{none:!0,noLink:!0,name:(0,o.kt)("code",null,"policy"),mdxType:"Symbol"},"The execution policy to use. See ",(0,o.kt)("a",{href:""},"execution policy")," for details.")),(0,o.kt)("h4",{id:"type-requirements"},"Type requirements"),(0,o.kt)(l.ZP,{mdxType:"SymbolTable"},(0,o.kt)(l.mN,{none:!0,noLink:!0,name:(0,o.kt)("code",null,"InputIt"),mdxType:"Symbol"},(0,o.kt)("a",{href:"/docs/named_req/LegacyInputIterator"},"LegacyInputIterator")),(0,o.kt)(l.mN,{none:!0,noLink:!0,name:(0,o.kt)("code",null,"OutputIt"),mdxType:"Symbol"},(0,o.kt)("a",{href:"/docs/named_req/LegacyOutputIterator"},"LegacyOutputIterator")),(0,o.kt)(l.mN,{none:!0,noLink:!0,name:(0,o.kt)(r.Fragment,null," ",(0,o.kt)("code",null,"ForwardIt1")," ",(0,o.kt)("br",null)," ",(0,o.kt)("code",null,"ForwardIt2")," "),mdxType:"Symbol"},(0,o.kt)("a",{href:"/docs/named_req/LegacyForwardIterator"},"LegacyForwardIterator"))),(0,o.kt)("h3",{id:"return-value"},"Return value"),(0,o.kt)("p",null,"Output iterator to the element in the destination range, one past the last element copied."),(0,o.kt)("h3",{id:"complexity"},"Complexity"),(0,o.kt)("p",null,"Exactly ",(0,o.kt)("inlineCode",{parentName:"p"},"last - first")," assignments."),(0,o.kt)("p",null,"For the overloads with an ",(0,o.kt)("inlineCode",{parentName:"p"},"ExecutionPolicy"),", there may be a performance cost if ",(0,o.kt)("inlineCode",{parentName:"p"},"ForwardIt1"),"'s value type is not ",(0,o.kt)("a",{parentName:"p",href:"/docs/named_req/MoveConstructible"},(0,o.kt)("inlineCode",{parentName:"a"},"MoveConstructible")),"."),(0,o.kt)("h3",{id:"exceptions"},"Exceptions"),(0,o.kt)("p",null,"The overloads with a template parameter named ",(0,o.kt)("inlineCode",{parentName:"p"},"ExecutionPolicy")," report errors as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If execution of a function invoked as part of the algorithm throws an exception and ",(0,o.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy")," is one of the ",(0,o.kt)("a",{parentName:"li",href:"#"},(0,o.kt)("strong",{parentName:"a"},"standard policies")),", ",(0,o.kt)("a",{parentName:"li",href:"#"},(0,o.kt)("inlineCode",{parentName:"a"},"std::terminate"))," is called.\nFor none other ",(0,o.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy"),", the behavior is ",(0,o.kt)(s.Z,{title:(0,o.kt)(d.ZP,{mdxType:"Term_ImplementationDefined"}),mdxType:"Tooltip"},(0,o.kt)("strong",{parentName:"li"},"implementation-defined")),"."),(0,o.kt)("li",{parentName:"ul"},"If the algorithm fails to allocate memory, ",(0,o.kt)("inlineCode",{parentName:"li"},"std::bad_alloc")," is thrown.")),(0,o.kt)("h3",{id:"possible-implementation"},"Possible implementation"),(0,o.kt)("details",null,(0,o.kt)("summary",null,"copy (1)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"template<class InputIt, class OutputIt>\nOutputIt copy(InputIt first, InputIt last,\n              OutputIt d_first)\n{\n    for (; first != last; (void)++first, (void)++d_first)\n        *d_first = *first;\n\n    return d_first;\n}\n"))),(0,o.kt)("h3",{id:"notes"},"Notes"),(0,o.kt)("p",null,"In practice, implementations of ",(0,o.kt)("a",{parentName:"p",href:"#"},(0,o.kt)("inlineCode",{parentName:"a"},"std::copy"))," avoid multiple assignments and use bulk copy functions such as ",(0,o.kt)("a",{parentName:"p",href:"#"},(0,o.kt)("inlineCode",{parentName:"a"},"std::memmove")),"\nif the value type is ",(0,o.kt)("a",{parentName:"p",href:"/docs/named_req/TriviallyCopyable"},(0,o.kt)("inlineCode",{parentName:"a"},"TriviallyCopyable"))," and the iterator types satisfy ",(0,o.kt)("a",{parentName:"p",href:"/docs/named_req/LegacyContiguousIterator"},(0,o.kt)("inlineCode",{parentName:"a"},"LegacyContiguousIterator")),"."),(0,o.kt)("p",null,"When copying overlapping ranges, ",(0,o.kt)("a",{parentName:"p",href:"#"},(0,o.kt)("inlineCode",{parentName:"a"},"std::copy"))," is appropriate when copying to the left (",(0,o.kt)("strong",{parentName:"p"},"beginning of the destination range is outside the source range"),"),\nwhile ",(0,o.kt)("a",{parentName:"p",href:"/docs/algo/ordinary/copy_backward"},(0,o.kt)("inlineCode",{parentName:"a"},"std::copy_backward"))," is appropriate when copying to the right (",(0,o.kt)("strong",{parentName:"p"},"end of the destination range is outside the source range"),")."),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)(i.Z,{columns:["8fr","4fr"],mdxType:"Columns"},(0,o.kt)("div",null,(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='Main.cpp' showLineNumbers",title:"'Main.cpp'",showLineNumbers:!0},'#include <algorithm>\n#include <iostream>\n#include <iterator>\n#include <numeric>\n#include <vector>\n\nint main()\n{\n    std::vector<int> from_vector(10);\n    std::iota(from_vector.begin(), from_vector.end(), 0);\n\n    std::vector<int> to_vector;\n    std::copy(from_vector.begin(), from_vector.end(),\n              std::back_inserter(to_vector));\n// or, alternatively,\n//  std::vector<int> to_vector(from_vector.size());\n//  std::copy(from_vector.begin(), from_vector.end(), to_vector.begin());\n// either way is equivalent to\n//  std::vector<int> to_vector = from_vector;\n\n    std::cout << "to_vector contains: ";\n\n    std::copy(to_vector.begin(), to_vector.end(),\n              std::ostream_iterator<int>(std::cout, " "));\n    std::cout << \'\\n\';\n\n    std::cout << "odd numbers in to_vector are: ";\n\n    std::copy_if(to_vector.begin(), to_vector.end(),\n                 std::ostream_iterator<int>(std::cout, " "),\n                 [](int x) { return x % 2 != 0; });\n    std::cout << \'\\n\';\n\n    std::cout << "to_vector contains these multiples of 3: ";\n\n    to_vector.clear();\n    std::copy_if(from_vector.begin(), from_vector.end(),\n                 std::back_inserter(to_vector),\n                 [](int x) { return x % 3 == 0; });\n\n    for (int x : to_vector)\n        std::cout << x << \' \';\n    std::cout << \'\\n\';\n}\n'))),(0,o.kt)("div",null,(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Output"',title:'"Output"'},"to_vector contains: 0 1 2 3 4 5 6 7 8 9\nodd numbers in to_vector are: 1 3 5 7 9\nto_vector contains these multiples of 3: 0 3 6 9\n")))))}N.isMDXComponent=!0}}]);