"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[85457,52831,80814],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),m=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=m(n),u=r,f=d["".concat(s,".").concat(u)]||d[u]||p[u]||l;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var m=2;m<l;m++)o[m]=n[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),r=n(86010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(87462),r=n(67294),l=n(86010),o=n(12466),i=n(76775),s=n(91980),m=n(67392),c=n(50012);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,m.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function u(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=d(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!u({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[s,m]=f({queryString:n,groupId:a}),[p,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),y=(()=>{const e=s??p;return u({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{y&&i(y)}),[y]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!u({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),m(e),g(e)}),[m,g,l]),tabValues:l}}var y=n(72389);const b="tabList__CuJ",h="tabItem_LNqP";function k(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:m}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.o5)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),a=m[n].value;a!==i&&(p(t),s(a))},u=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},m.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:u,onClick:d},o,{className:(0,l.Z)("tabs__item",h,o?.className,{"tabs__item--active":i===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function x(e){const t=g(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",b)},r.createElement(k,(0,a.Z)({},e,t)),r.createElement(v,(0,a.Z)({},e,t)))}function N(e){const t=(0,y.Z)();return r.createElement(x,(0,a.Z)({key:String(t)},e))}},98839:(e,t,n)=>{n.d(t,{z:()=>a});const a=n(67294).createContext({name:"Unknown",folder:"unknown"})},22307:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(87462),r=n(67294);const l="columns_Terr";function o(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,r.createElement("div",(0,a.Z)({className:l,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}o.isMDXComponent=!0},99801:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(67294),r=n(74866),l=n(85162),o=n(99372),i=n(72412);const s={};function m(e){const t=e.content||{};return a.createElement(r.Z,null,Object.entries(t).map(((e,t)=>{let[n,m]=e;return m.value||m.simplified||m.detailed?a.createElement(l.Z,{value:n,label:o.gJ.get(n),default:m.default||0==t},m.simplified?a.createElement(a.Fragment,null,a.createElement(r.Z,{groupId:"view_mode",className:s.smallTabs},a.createElement(l.Z,{value:"simplified",label:"Simplified",default:!0},(0,i.Z)(m.simplified)),a.createElement(l.Z,{value:"detailed",label:"Detailed"},(0,i.Z)(m.detailed)))):m.value):a.createElement(l.Z,{value:n,label:o.gJ.get(n),default:0==t},(0,i.Z)(m))})))}},55059:(e,t,n)=>{n.d(t,{mN:()=>c,ZP:()=>m});var a=n(67294),r=n(72412);const l={symbolTable:"symbolTable_yosy",symbolName:"symbolName__gUy",symbolDesc:"symbolDesc_wDaQ",symbolProp:"symbolProp_oAcv",accessPublic:"accessPublic_LfqG",accessProtected:"accessProtected_bDL6",accessPrivate:"accessPrivate_Ab5O",modStatic:"modStatic_ZSC5",modConstexpr:"modConstexpr_iypt",modConst:"modConst_osuL",modVolatile:"modVolatile_ePYM",modVirtual:"modVirtual_jNz7"};var o=n(98839);const i={None:{Order:0,ShortName:"",FullName:"",Style:l.accessPublic},Public:{Order:1,ShortName:"pub",FullName:"public",Style:l.accessPublic},Protected:{Order:2,ShortName:"prot",FullName:"protected",Style:l.accessProtected},Private:{Order:3,ShortName:"priv",FullName:"private",Style:l.accessPrivate}},s=e=>e.none?i.None:e.pub||e.public?i.Public:e.prot||e.protected?i.Protected:e.priv||e.private?i.Private:i.Public;function m(e){return(t=>{if(0===t.length)return null;const n=t.sort(((e,t)=>s(e).Order<s(t).Order));return a.createElement("table",{"data-no-traits":`${e.noTraits||"false"}`,className:l.symbolTable},a.createElement("tbody",null,n))})(a.Children.toArray(e.children))}function c(e){a.useContext(o.z);let t=(0,r.Z)(e.name),n=null;e.desc?n=e.desc:e.children&&(n=e.children);const i=e.linkName||e.autoLink;!e.noLink&&i&&(t=a.createElement("a",{href:e.link||`${e.linkName||e.name}`},t));const m=(e,t,n)=>!0===e?a.createElement("span",{className:l[t]},n):null;return a.createElement("tr",null,!e.none&&a.createElement("td",{className:l.symbolProp},(e=>{const t=s(e);return a.createElement("span",{className:t.Style},t.ShortName)})(e),m(e.static,"modStatic","static"),m(e.constexpr,"modConstexpr","constexpr"),m(e.const,"modConst","const"),m(e.volatile,"modVolatile","volatile"),m(e.virtual,"modVirtual","virtual")),a.createElement("td",{className:l.symbolName},t),a.createElement("td",{className:l.symbolDesc},(0,r.Z)(n)))}c.isMDXComponent=!0,m.isMDXComponent=!0,m.Symbol=c},99372:(e,t,n)=>{n.d(t,{gJ:()=>c,eH:()=>f,U6:()=>d,OS:()=>u});var a=n(67294),r=n(95999);const l="markedText_c6kK",o="since_c1Q3",i="until_jXK6",s="removed_A_Kf",m="versionNumber_BiUX",c=new Map;function p(e){let{children:t,className:n}=e;return a.createElement("span",{className:l+(n?" "+n:"")},t)}function d(e){let{children:t,v:n}=e;return a.createElement(p,{className:o},t,"\xa0",a.createElement("span",{className:m},a.createElement("small",null,"(",c.get(`since-${n}`),")")))}function u(e){let{children:t,v:n}=e;return a.createElement(p,{className:i},t,"\xa0",a.createElement("span",{className:m},a.createElement("small",null,"(",c.get(`until-${n}`),")")))}function f(e){let{children:t,v:n}=e;return a.createElement(p,{className:s},t,"\xa0",a.createElement("span",{className:m},a.createElement("small",null,"(",c.get(`removed-${n}`),")")))}c.set("cpp98","C++98"),c.set("cpp03","C++03"),c.set("cpp11","C++11"),c.set("cpp14","C++14"),c.set("cpp17","C++17"),c.set("cpp20","C++20"),c.set("cpp23","C++23"),c.set("deprecated-",a.createElement(r.Z,null,"deprecated")),c.set("deprecated-cpp98",a.createElement(r.Z,null,"deprecated in C++98")),c.set("deprecated-cpp03",a.createElement(r.Z,null,"deprecated in C++03")),c.set("deprecated-cpp11",a.createElement(r.Z,null,"deprecated in C++11")),c.set("deprecated-cpp14",a.createElement(r.Z,null,"deprecated in C++14")),c.set("deprecated-cpp17",a.createElement(r.Z,null,"deprecated in C++17")),c.set("deprecated-cpp20",a.createElement(r.Z,null,"deprecated in C++20")),c.set("deprecated-cpp23",a.createElement(r.Z,null,"deprecated in C++23")),c.set("until-cpp98",a.createElement(r.Z,null,"until C++98")),c.set("until-cpp03",a.createElement(r.Z,null,"until C++03")),c.set("until-cpp11",a.createElement(r.Z,null,"until C++11")),c.set("until-cpp14",a.createElement(r.Z,null,"until C++14")),c.set("until-cpp17",a.createElement(r.Z,null,"until C++17")),c.set("until-cpp20",a.createElement(r.Z,null,"until C++20")),c.set("until-cpp23",a.createElement(r.Z,null,"until C++23")),c.set("since-cpp98",a.createElement(r.Z,null,"since C++98")),c.set("since-cpp03",a.createElement(r.Z,null,"since C++03")),c.set("since-cpp11",a.createElement(r.Z,null,"since C++11")),c.set("since-cpp14",a.createElement(r.Z,null,"since C++14")),c.set("since-cpp17",a.createElement(r.Z,null,"since C++17")),c.set("since-cpp20",a.createElement(r.Z,null,"since C++20")),c.set("since-cpp23",a.createElement(r.Z,null,"since C++23")),c.set("removed-",a.createElement(r.Z,null,"deleted")),c.set("removed-cpp98",a.createElement(r.Z,null,"removed in C++98")),c.set("removed-cpp03",a.createElement(r.Z,null,"removed in C++03")),c.set("removed-cpp11",a.createElement(r.Z,null,"removed in C++11")),c.set("removed-cpp14",a.createElement(r.Z,null,"removed in C++14")),c.set("removed-cpp17",a.createElement(r.Z,null,"removed in C++17")),c.set("removed-cpp20",a.createElement(r.Z,null,"removed in C++20")),c.set("removed-cpp23",a.createElement(r.Z,null,"removed in C++23"))},72412:(e,t,n)=>{function a(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>a})},39030:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>m});var a=n(87462),r=(n(67294),n(3905));const l={},o=void 0,i={unversionedId:"std/algo/ordinary/_codes/minmax_element/since-cpp11",id:"std/algo/ordinary/_codes/minmax_element/since-cpp11",title:"since-cpp11",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/minmax_element/since-cpp11.mdx",sourceDirName:"std/algo/ordinary/_codes/minmax_element",slug:"/std/algo/ordinary/_codes/minmax_element/since-cpp11",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/minmax_element/since-cpp11",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/minmax_element/since-cpp11.mdx",tags:[],version:"current",frontMatter:{}},s={},m=[],c={toc:m};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class ForwardIt >\nstd::pair<ForwardIt, ForwardIt>\n    minmax_element( ForwardIt first, ForwardIt last );\n\n// (2)\ntemplate< class ForwardIt, class Compare >\nstd::pair<ForwardIt, ForwardIt>\n    minmax_element( ForwardIt first, ForwardIt last, Compare comp );\n")))}p.isMDXComponent=!0},48706:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>m});var a=n(87462),r=(n(67294),n(3905));const l={},o=void 0,i={unversionedId:"std/algo/ordinary/_codes/minmax_element/since-cpp17",id:"std/algo/ordinary/_codes/minmax_element/since-cpp17",title:"since-cpp17",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/minmax_element/since-cpp17.mdx",sourceDirName:"std/algo/ordinary/_codes/minmax_element",slug:"/std/algo/ordinary/_codes/minmax_element/since-cpp17",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/minmax_element/since-cpp17",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/minmax_element/since-cpp17.mdx",tags:[],version:"current",frontMatter:{}},s={},m=[],c={toc:m};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class ForwardIt >\nstd::pair<ForwardIt, ForwardIt>\n    minmax_element( ForwardIt first, ForwardIt last );\n\n// (2)\ntemplate< class ForwardIt, class Compare >\nstd::pair<ForwardIt, ForwardIt>\n    minmax_element( ForwardIt first, ForwardIt last, Compare comp );\n\n// (3)\ntemplate< class ExecutionPolicy, class ForwardIt >\nstd::pair<ForwardIt, ForwardIt>\n    minmax_element( ExecutionPolicy&& policy, ForwardIt first, ForwardIt last );\n\n// (4)\ntemplate< class ExecutionPolicy, class ForwardIt, class Compare >\nstd::pair<ForwardIt, ForwardIt>\n    minmax_element( ExecutionPolicy&& policy,\n                    ForwardIt first, ForwardIt last, Compare comp );\n")))}p.isMDXComponent=!0},60139:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>u,default:()=>x,frontMatter:()=>d,metadata:()=>f,toc:()=>y});var a=n(87462),r=n(67294),l=n(3905),o=n(55059),i=n(22307),s=n(99801),m=n(99372),c=n(48706),p=n(39030);const d={title:"minmax_element algorithm",sidebar_label:"minmax_element(  )",description:"minmax_element algorithm C++ documentation",hide_title:!0,tags:["algorithm","minmax","minmax_element","min","max","smallest","greatest","largest","biggest"],cppreference_origin_rel:"w/cpp/algorithm/minmax_element"},u=void 0,f={unversionedId:"std/algo/ordinary/minmax_element",id:"std/algo/ordinary/minmax_element",title:"minmax_element algorithm",description:"minmax_element algorithm C++ documentation",source:"@site/content/docs/std/algo/ordinary/minmax_element.mdx",sourceDirName:"std/algo/ordinary",slug:"/std/algo/ordinary/minmax_element",permalink:"/CppLangNet/docs/std/algo/ordinary/minmax_element",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/minmax_element.mdx",tags:[{label:"algorithm",permalink:"/CppLangNet/docs/tags/algorithm"},{label:"minmax",permalink:"/CppLangNet/docs/tags/minmax"},{label:"minmax_element",permalink:"/CppLangNet/docs/tags/minmax-element"},{label:"min",permalink:"/CppLangNet/docs/tags/min"},{label:"max",permalink:"/CppLangNet/docs/tags/max"},{label:"smallest",permalink:"/CppLangNet/docs/tags/smallest"},{label:"greatest",permalink:"/CppLangNet/docs/tags/greatest"},{label:"largest",permalink:"/CppLangNet/docs/tags/largest"},{label:"biggest",permalink:"/CppLangNet/docs/tags/biggest"}],version:"current",frontMatter:{title:"minmax_element algorithm",sidebar_label:"minmax_element(  )",description:"minmax_element algorithm C++ documentation",hide_title:!0,tags:["algorithm","minmax","minmax_element","min","max","smallest","greatest","largest","biggest"],cppreference_origin_rel:"w/cpp/algorithm/minmax_element"}},g={},y=[{value:"Parameters",id:"parameters",level:3},{value:"Type requirements",id:"type-requirements",level:4},{value:"Return value",id:"return-value",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"Possible implementation",id:"possible-implementation",level:3},{value:"Notes",id:"notes",level:3},{value:"Examples",id:"examples",level:3}],b=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",t)},h=b("Tooltip"),k=b("Term_ImplementationDefined"),v={toc:y};function x(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"stdminmax_element--algorithm"},"std::minmax_element( ) algorithm"),(0,l.kt)(s.Z,{content:{"since-cpp17":(0,l.kt)(c.default,{mdxType:"Signature_SinceCpp17"}),"since-cpp11":(0,l.kt)(p.default,{mdxType:"Signature_SinceCpp11"})},mdxType:"SwitchView"}),(0,l.kt)("p",null,"Finds the smallest and greatest element in the range [",(0,l.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,l.kt)("inlineCode",{parentName:"p"},"last"),")."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"(1)")," Elements are compared using ",(0,l.kt)("inlineCode",{parentName:"p"},"operator<"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"(2)")," Elements are compared using the given binary comparison function ",(0,l.kt)("inlineCode",{parentName:"p"},"comp"),"."))),(0,l.kt)("h3",{id:"parameters"},"Parameters"),(0,l.kt)(o.ZP,{mdxType:"SymbolTable"},(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)(r.Fragment,null," ",(0,l.kt)("code",null,"first")," ",(0,l.kt)("br",null)," ",(0,l.kt)("code",null,"last")," "),mdxType:"Symbol"},"The range to find the greatest and smallest value in."),(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"policy"),mdxType:"Symbol"},"The execution policy to use. See ",(0,l.kt)("a",{href:"#"},"execution policy")," for details."),(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"cmp"),mdxType:"Symbol"},(0,l.kt)("p",null,"Comparison function object (i.e. an object that satisfies the requirements of ",(0,l.kt)("a",{parentName:"p",href:"/docs/named_req/Compare"},"Compare"),") which returns ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if ",(0,l.kt)("inlineCode",{parentName:"p"},"*a")," is less than ",(0,l.kt)("inlineCode",{parentName:"p"},"*b"),".",(0,l.kt)("br",{parentName:"p"}),"\n","The signature of the comparison function should be equivalent to the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"bool cmp(const Type1 &a, const Type2 &b);\n")),(0,l.kt)("p",null,"While the signature does not need to have ",(0,l.kt)("inlineCode",{parentName:"p"},"const&"),", the function must not modify the objects passed to it and must be able to accept all values of type (possibly const) ",(0,l.kt)("inlineCode",{parentName:"p"},"Type1")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"Type2")," regardless of value category (thus, ",(0,l.kt)("inlineCode",{parentName:"p"},"Type1&")," is not allowed, ",(0,l.kt)(m.U6,{v:"cpp11",mdxType:"Since"},"nor is ",(0,l.kt)("code",null,"Type1")," unless for ",(0,l.kt)("code",null,"Type1")," a move is equivalent to a copy"),")."),(0,l.kt)("p",null,"The types ",(0,l.kt)("inlineCode",{parentName:"p"},"Type1")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"Type2")," must be such that an object of type ",(0,l.kt)("inlineCode",{parentName:"p"},"ForwardIt")," can be implicitly converted to both of them."))),(0,l.kt)("h4",{id:"type-requirements"},"Type requirements"),(0,l.kt)(o.ZP,{mdxType:"SymbolTable"},(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"ForwardIt"),mdxType:"Symbol"},(0,l.kt)("a",{href:"/docs/named_req/LegacyForwardIterator"},"LegacyForwardIterator"))),(0,l.kt)("h3",{id:"return-value"},"Return value"),(0,l.kt)("p",null,"A pair consisting of an iterator to the smallest element as the first element and an iterator to the greatest element as the second."),(0,l.kt)("p",null,"Returns ",(0,l.kt)("inlineCode",{parentName:"p"},"std::make_pair(first, first)")," if the range is empty."),(0,l.kt)("p",null,"If several elements are equivalent to the ",(0,l.kt)("strong",{parentName:"p"},"smallest")," element, the iterator to the ",(0,l.kt)("inlineCode",{parentName:"p"},"first")," such element is returned.",(0,l.kt)("br",{parentName:"p"}),"\n","If several elements are equivalent to the ",(0,l.kt)("strong",{parentName:"p"},"largest")," element, the iterator to the ",(0,l.kt)("inlineCode",{parentName:"p"},"last")," such element is returned."),(0,l.kt)("h3",{id:"complexity"},"Complexity"),(0,l.kt)("p",null,"Given ",(0,l.kt)("inlineCode",{parentName:"p"},"N")," as ",(0,l.kt)("inlineCode",{parentName:"p"},"std::distance(first, last)"),":"),(0,l.kt)("p",null,"At most ",(0,l.kt)("inlineCode",{parentName:"p"},"max(floor( (3 / 2) * (N \u2212 1) ), 0)")," applications of the predicate."),(0,l.kt)("h3",{id:"exceptions"},"Exceptions"),(0,l.kt)("p",null,"The overloads with a template parameter named ",(0,l.kt)("inlineCode",{parentName:"p"},"ExecutionPolicy")," report errors as follows:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If execution of a function invoked as part of the algorithm throws an exception and ",(0,l.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy")," is one of the ",(0,l.kt)("a",{parentName:"li",href:"#"},(0,l.kt)("strong",{parentName:"a"},"standard policies")),", ",(0,l.kt)("a",{parentName:"li",href:"#"},(0,l.kt)("inlineCode",{parentName:"a"},"std::terminate"))," is called.\nFor any other ",(0,l.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy"),", the behavior is ",(0,l.kt)(h,{title:(0,l.kt)(k,{mdxType:"Term_ImplementationDefined"}),mdxType:"Tooltip"},(0,l.kt)("strong",{parentName:"li"},"implementation-defined")),"."),(0,l.kt)("li",{parentName:"ul"},"If the algorithm fails to allocate memory, ",(0,l.kt)("inlineCode",{parentName:"li"},"std::bad_alloc")," is thrown.")),(0,l.kt)("h3",{id:"possible-implementation"},"Possible implementation"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"minmax_element (1)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"template<class ForwardIt>\nstd::pair<ForwardIt, ForwardIt>\n    minmax_element(ForwardIt first, ForwardIt last)\n{\n    using value_type = typename std::iterator_traits<ForwardIt>::value_type;\n    return std::minmax_element(first, last, std::less<value_type>());\n}\n"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"minmax_element (2)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"template<class ForwardIt, class Compare>\nstd::pair<ForwardIt, ForwardIt>\n    minmax_element(ForwardIt first, ForwardIt last, Compare comp)\n{\n    auto min = first, max = first;\n\n    if (first == last || ++first == last)\n        return {min, max};\n\n    if (comp(*first, *min))\n        min = first;\n    else\n        max = first;\n\n    while (++first != last)\n    {\n        auto i = first;\n        if (++first == last)\n        {\n            if (comp(*i, *min))\n                min = i;\n            else if (!(comp(*i, *max)))\n                max = i;\n            break;\n        }\n        else\n        {\n            if (comp(*first, *i))\n            {\n                if (comp(*first, *min))\n                    min = first;\n                if (!(comp(*i, *max)))\n                    max = i;\n            }\n            else\n            {\n                if (comp(*i, *min))\n                    min = i;\n                if (!(comp(*first, *max)))\n                    max = first;\n            }\n        }\n    }\n    return {min, max};\n}\n"))),(0,l.kt)("h3",{id:"notes"},"Notes"),(0,l.kt)("p",null,"This algorithm is different from ",(0,l.kt)("inlineCode",{parentName:"p"},"std::make_pair(std::min_element(), std::max_element())"),", not only in efficiency,\nbut also in that this algorithm finds the last biggest element while\n",(0,l.kt)("a",{parentName:"p",href:"/docs/std/algo/ordinary/max_element"},(0,l.kt)("inlineCode",{parentName:"a"},"std::max_element()"))," finds the first biggest element (in terms of iterators)."),(0,l.kt)("h3",{id:"examples"},"Examples"),(0,l.kt)(i.Z,{columns:["8fr","4fr"],mdxType:"Columns"},(0,l.kt)("div",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='Main.cpp' showLineNumbers",title:"'Main.cpp'",showLineNumbers:!0},'#include <algorithm>\n#include <iostream>\n\nint main()\n{\n    const auto v = {3, 9, 1, 4, 2, 5, 9};\n    const auto [min, max] = std::minmax_element(begin(v), end(v));\n\n    std::cout << "min = " << *min << ", max = " << *max << \'\\n\';\n}\n'))),(0,l.kt)("div",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Possible output"',title:'"Possible','output"':!0},"min = 1, max = 9\n")))))}x.isMDXComponent=!0}}]);