"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[53146],{14064:(e,t,n)=>{n.d(t,{ZP:()=>o});var a=n(87462),r=(n(67294),n(3905));const l={toc:[]};function o(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Aspects and semantics that are ",(0,r.kt)("strong",{parentName:"p"},"implementation-defined")," are not guaranteed by\nthe standard in any way, rather they are left out to the implementation (compiler vendor standard library, most of the times).\nFor example, most mathematical functions incur some ",(0,r.kt)("strong",{parentName:"p"},"implementation-defined")," behaviour."))}o.isMDXComponent=!0},98088:(e,t,n)=>{n.d(t,{ZP:()=>o});var a=n(87462),r=(n(67294),n(3905));const l={toc:[]};function o(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("b",null,"Undefined behaviour")," is a property of a program that's incorrect, but likely compiles. It is incorrect in a way, that the error is only invoked in certain conditions at runtime.",(0,r.kt)("p",null,"Common cases include: ",(0,r.kt)("strong",{parentName:"p"},"out of bounds access"),", ",(0,r.kt)("strong",{parentName:"p"},"reading uninitialized objects"),", ",(0,r.kt)("strong",{parentName:"p"},"dangling pointers/references")," or ",(0,r.kt)("strong",{parentName:"p"},"signed overflow"),"."))}o.isMDXComponent=!0},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),r=n(86010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(87462),r=n(67294),l=n(86010),o=n(12466),c=n(76775),i=n(91980),p=n(67392),s=n(50012);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function u(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function y(e){let{queryString:t=!1,groupId:n}=e;const a=(0,c.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=u(e),[o,c]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[i,p]=y({queryString:n,groupId:a}),[d,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,s.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),_=(()=>{const e=i??d;return m({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{_&&c(_)}),[_]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);c(e),p(e),f(e)}),[p,f,l]),tabValues:l}}var _=n(72389);const g="tabList__CuJ",k="tabItem_LNqP";function v(e){let{className:t,block:n,selectedValue:c,selectValue:i,tabValues:p}=e;const s=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),u=e=>{const t=e.currentTarget,n=s.indexOf(t),a=p[n].value;a!==c&&(d(t),i(a))},m=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=s.indexOf(e.currentTarget)+1;t=s[n]??s[0];break}case"ArrowLeft":{const n=s.indexOf(e.currentTarget)-1;t=s[n]??s[s.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:c===t?0:-1,"aria-selected":c===t,key:t,ref:e=>s.push(e),onKeyDown:m,onClick:u},o,{className:(0,l.Z)("tabs__item",k,o?.className,{"tabs__item--active":c===t})}),n??t)})))}function h(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function b(e){const t=f(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",g)},r.createElement(v,(0,a.Z)({},e,t)),r.createElement(h,(0,a.Z)({},e,t)))}function N(e){const t=(0,_.Z)();return r.createElement(b,(0,a.Z)({key:String(t)},e))}},98839:(e,t,n)=>{n.d(t,{z:()=>a});const a=n(67294).createContext({name:"Unknown",folder:"unknown"})},22307:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(87462),r=n(67294);const l="columns_Terr";function o(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,r.createElement("div",(0,a.Z)({className:l,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}o.isMDXComponent=!0},99801:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(67294),r=n(74866),l=n(85162),o=n(99372),c=n(72412);const i={};function p(e){const t=e.content||{};return a.createElement(r.Z,null,Object.entries(t).map(((e,t)=>{let[n,p]=e;return p.value||p.simplified||p.detailed?a.createElement(l.Z,{value:n,label:o.gJ.get(n),default:p.default||0==t},p.simplified?a.createElement(a.Fragment,null,a.createElement(r.Z,{groupId:"view_mode",className:i.smallTabs},a.createElement(l.Z,{value:"simplified",label:"Simplified",default:!0},(0,c.Z)(p.simplified)),a.createElement(l.Z,{value:"detailed",label:"Detailed"},(0,c.Z)(p.detailed)))):p.value):a.createElement(l.Z,{value:n,label:o.gJ.get(n),default:0==t},(0,c.Z)(p))})))}},55059:(e,t,n)=>{n.d(t,{mN:()=>s,ZP:()=>p});var a=n(67294),r=n(72412);const l={symbolTable:"symbolTable_yosy",symbolName:"symbolName__gUy",symbolDesc:"symbolDesc_wDaQ",symbolProp:"symbolProp_oAcv",accessPublic:"accessPublic_LfqG",accessProtected:"accessProtected_bDL6",accessPrivate:"accessPrivate_Ab5O",modStatic:"modStatic_ZSC5",modConstexpr:"modConstexpr_iypt",modConst:"modConst_osuL",modVolatile:"modVolatile_ePYM",modVirtual:"modVirtual_jNz7"};var o=n(98839);const c={None:{Order:0,ShortName:"",FullName:"",Style:l.accessPublic},Public:{Order:1,ShortName:"pub",FullName:"public",Style:l.accessPublic},Protected:{Order:2,ShortName:"prot",FullName:"protected",Style:l.accessProtected},Private:{Order:3,ShortName:"priv",FullName:"private",Style:l.accessPrivate}},i=e=>e.none?c.None:e.pub||e.public?c.Public:e.prot||e.protected?c.Protected:e.priv||e.private?c.Private:c.Public;function p(e){return(t=>{if(0===t.length)return null;const n=t.sort(((e,t)=>i(e).Order<i(t).Order));return a.createElement("table",{"data-no-traits":`${e.noTraits||"false"}`,className:l.symbolTable},a.createElement("tbody",null,n))})(a.Children.toArray(e.children))}function s(e){a.useContext(o.z);let t=(0,r.Z)(e.name),n=null;e.desc?n=e.desc:e.children&&(n=e.children);const c=e.linkName||e.autoLink;!e.noLink&&c&&(t=a.createElement("a",{href:e.link||`${e.linkName||e.name}`},t));const p=(e,t,n)=>!0===e?a.createElement("span",{className:l[t]},n):null;return a.createElement("tr",null,!e.none&&a.createElement("td",{className:l.symbolProp},(e=>{const t=i(e);return a.createElement("span",{className:t.Style},t.ShortName)})(e),p(e.static,"modStatic","static"),p(e.constexpr,"modConstexpr","constexpr"),p(e.const,"modConst","const"),p(e.volatile,"modVolatile","volatile"),p(e.virtual,"modVirtual","virtual")),a.createElement("td",{className:l.symbolName},t),a.createElement("td",{className:l.symbolDesc},(0,r.Z)(n)))}s.isMDXComponent=!0,p.isMDXComponent=!0,p.Symbol=s},18510:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(67294),r=n(44996),l=n(34386),o=n(72412);const c="TooltipContent_Lvru",i="TooltipTitle_ukF2";function p(e){let{url:t,title:n,maxWidth:p,children:s}=e;let d=p||"clamp(250px, 25vw, 800px)";"string"==typeof d&&d.endsWith("vw")&&(d=`clamp(250px, ${d}, 800px)`);const u="function"==typeof n?a.createElement(n):n,m=(t||"").startsWith("/")?(0,r.Z)(t):t,y=t?a.createElement("a",{href:m,target:"_blank",rel:"noreferrer"},s):s;return a.createElement(l.Z,{componentsProps:{tooltip:{style:{maxWidth:d}}},title:a.createElement("span",{className:i},(0,o.Z)(u)),placement:"top",arrow:!0},a.createElement("span",{className:c},y))}p.isMDXComponent=!0},99372:(e,t,n)=>{n.d(t,{gJ:()=>s,eH:()=>y,U6:()=>u,OS:()=>m});var a=n(67294),r=n(95999);const l="markedText_c6kK",o="since_c1Q3",c="until_jXK6",i="removed_A_Kf",p="versionNumber_BiUX",s=new Map;function d(e){let{children:t,className:n}=e;return a.createElement("span",{className:l+(n?" "+n:"")},t)}function u(e){let{children:t,v:n}=e;return a.createElement(d,{className:o},t,"\xa0",a.createElement("span",{className:p},a.createElement("small",null,"(",s.get(`since-${n}`),")")))}function m(e){let{children:t,v:n}=e;return a.createElement(d,{className:c},t,"\xa0",a.createElement("span",{className:p},a.createElement("small",null,"(",s.get(`until-${n}`),")")))}function y(e){let{children:t,v:n}=e;return a.createElement(d,{className:i},t,"\xa0",a.createElement("span",{className:p},a.createElement("small",null,"(",s.get(`removed-${n}`),")")))}s.set("cpp98","C++98"),s.set("cpp03","C++03"),s.set("cpp11","C++11"),s.set("cpp14","C++14"),s.set("cpp17","C++17"),s.set("cpp20","C++20"),s.set("cpp23","C++23"),s.set("deprecated-",a.createElement(r.Z,null,"deprecated")),s.set("deprecated-cpp98",a.createElement(r.Z,null,"deprecated in C++98")),s.set("deprecated-cpp03",a.createElement(r.Z,null,"deprecated in C++03")),s.set("deprecated-cpp11",a.createElement(r.Z,null,"deprecated in C++11")),s.set("deprecated-cpp14",a.createElement(r.Z,null,"deprecated in C++14")),s.set("deprecated-cpp17",a.createElement(r.Z,null,"deprecated in C++17")),s.set("deprecated-cpp20",a.createElement(r.Z,null,"deprecated in C++20")),s.set("deprecated-cpp23",a.createElement(r.Z,null,"deprecated in C++23")),s.set("until-cpp98",a.createElement(r.Z,null,"until C++98")),s.set("until-cpp03",a.createElement(r.Z,null,"until C++03")),s.set("until-cpp11",a.createElement(r.Z,null,"until C++11")),s.set("until-cpp14",a.createElement(r.Z,null,"until C++14")),s.set("until-cpp17",a.createElement(r.Z,null,"until C++17")),s.set("until-cpp20",a.createElement(r.Z,null,"until C++20")),s.set("until-cpp23",a.createElement(r.Z,null,"until C++23")),s.set("since-cpp98",a.createElement(r.Z,null,"since C++98")),s.set("since-cpp03",a.createElement(r.Z,null,"since C++03")),s.set("since-cpp11",a.createElement(r.Z,null,"since C++11")),s.set("since-cpp14",a.createElement(r.Z,null,"since C++14")),s.set("since-cpp17",a.createElement(r.Z,null,"since C++17")),s.set("since-cpp20",a.createElement(r.Z,null,"since C++20")),s.set("since-cpp23",a.createElement(r.Z,null,"since C++23")),s.set("removed-",a.createElement(r.Z,null,"deleted")),s.set("removed-cpp98",a.createElement(r.Z,null,"removed in C++98")),s.set("removed-cpp03",a.createElement(r.Z,null,"removed in C++03")),s.set("removed-cpp11",a.createElement(r.Z,null,"removed in C++11")),s.set("removed-cpp14",a.createElement(r.Z,null,"removed in C++14")),s.set("removed-cpp17",a.createElement(r.Z,null,"removed in C++17")),s.set("removed-cpp20",a.createElement(r.Z,null,"removed in C++20")),s.set("removed-cpp23",a.createElement(r.Z,null,"removed in C++23"))},72412:(e,t,n)=>{function a(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>a})},96218:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const l={},o=void 0,c={unversionedId:"std/algo/ordinary/_codes/replace_copy_if/since-cpp17",id:"std/algo/ordinary/_codes/replace_copy_if/since-cpp17",title:"since-cpp17",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/replace_copy_if/since-cpp17.mdx",sourceDirName:"std/algo/ordinary/_codes/replace_copy_if",slug:"/std/algo/ordinary/_codes/replace_copy_if/since-cpp17",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/replace_copy_if/since-cpp17",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/replace_copy_if/since-cpp17.mdx",tags:[],version:"current",frontMatter:{}},i={},p=[],s={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class InputIt, class OutputIt, class UnaryPredicate, class T >\nOutputIt replace_copy_if( InputIt first, InputIt last, OutputIt d_first,\n                          UnaryPredicate p, const T& new_value );\n\n// (2)\ntemplate< class ExecutionPolicy, class ForwardIt1, class ForwardIt2,\n          class UnaryPredicate, class T >\nForwardIt2 replace_copy_if( ExecutionPolicy&& policy,\n                            ForwardIt1 first, ForwardIt1 last,\n                            ForwardIt2 d_first,\n                            UnaryPredicate p, const T& new_value );\n")))}d.isMDXComponent=!0},79440:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const l={},o=void 0,c={unversionedId:"std/algo/ordinary/_codes/replace_copy_if/since-cpp20",id:"std/algo/ordinary/_codes/replace_copy_if/since-cpp20",title:"since-cpp20",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/replace_copy_if/since-cpp20.mdx",sourceDirName:"std/algo/ordinary/_codes/replace_copy_if",slug:"/std/algo/ordinary/_codes/replace_copy_if/since-cpp20",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/replace_copy_if/since-cpp20",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/replace_copy_if/since-cpp20.mdx",tags:[],version:"current",frontMatter:{}},i={},p=[],s={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class InputIt, class OutputIt, class UnaryPredicate, class T >\nconstexpr OutputIt replace_copy_if( InputIt first, InputIt last, OutputIt d_first,\n                                    UnaryPredicate p, const T& new_value );\n\n// (2)\ntemplate< class ExecutionPolicy, class ForwardIt1, class ForwardIt2,\n          class UnaryPredicate, class T >\nForwardIt2 replace_copy_if( ExecutionPolicy&& policy,\n                            ForwardIt1 first, ForwardIt1 last,\n                            ForwardIt2 d_first,\n                            UnaryPredicate p, const T& new_value );\n")))}d.isMDXComponent=!0},48883:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const l={},o=void 0,c={unversionedId:"std/algo/ordinary/_codes/replace_copy_if/until-cpp17",id:"std/algo/ordinary/_codes/replace_copy_if/until-cpp17",title:"until-cpp17",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/replace_copy_if/until-cpp17.mdx",sourceDirName:"std/algo/ordinary/_codes/replace_copy_if",slug:"/std/algo/ordinary/_codes/replace_copy_if/until-cpp17",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/replace_copy_if/until-cpp17",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/replace_copy_if/until-cpp17.mdx",tags:[],version:"current",frontMatter:{}},i={},p=[],s={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class InputIt, class OutputIt, class UnaryPredicate, class T >\nOutputIt replace_copy_if( InputIt first, InputIt last, OutputIt d_first,\n                          UnaryPredicate p, const T& new_value );\n")))}d.isMDXComponent=!0},62089:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>_,default:()=>b,frontMatter:()=>f,metadata:()=>g,toc:()=>v});var a=n(87462),r=n(67294),l=n(3905),o=n(55059),c=n(22307),i=n(99801),p=n(18510),s=n(99372),d=(n(98088),n(14064)),u=n(48883),m=n(96218),y=n(79440);const f={title:"replace_copy_if algorithm",sidebar_label:"replace_copy_if(  )",description:"replace_copy_if algorithm C++ documentation",hide_title:!0,tags:["algorithm","replace","replace_if","replace_copy","replace_copy_if"],cppreference_origin_rel:"w/cpp/algorithm/replace_copy_if"},_=void 0,g={unversionedId:"std/algo/ordinary/replace_copy_if",id:"std/algo/ordinary/replace_copy_if",title:"replace_copy_if algorithm",description:"replace_copy_if algorithm C++ documentation",source:"@site/content/docs/std/algo/ordinary/replace_copy_if.mdx",sourceDirName:"std/algo/ordinary",slug:"/std/algo/ordinary/replace_copy_if",permalink:"/CppLangNet/docs/std/algo/ordinary/replace_copy_if",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/replace_copy_if.mdx",tags:[{label:"algorithm",permalink:"/CppLangNet/docs/tags/algorithm"},{label:"replace",permalink:"/CppLangNet/docs/tags/replace"},{label:"replace_if",permalink:"/CppLangNet/docs/tags/replace-if"},{label:"replace_copy",permalink:"/CppLangNet/docs/tags/replace-copy"},{label:"replace_copy_if",permalink:"/CppLangNet/docs/tags/replace-copy-if"}],version:"current",frontMatter:{title:"replace_copy_if algorithm",sidebar_label:"replace_copy_if(  )",description:"replace_copy_if algorithm C++ documentation",hide_title:!0,tags:["algorithm","replace","replace_if","replace_copy","replace_copy_if"],cppreference_origin_rel:"w/cpp/algorithm/replace_copy_if"},sidebar:"defaultSidebar",previous:{title:"replace_copy(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/replace_copy"},next:{title:"swap_ranges(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/swap_ranges"}},k={},v=[{value:"Parameters",id:"parameters",level:3},{value:"Type requirements",id:"type-requirements",level:4},{value:"Return value",id:"return-value",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"Possible implementation",id:"possible-implementation",level:3},{value:"Examples",id:"examples",level:3}],h={toc:v};function b(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"stdreplace_copy_if-algorithm"},"std::replace_copy_if() algorithm"),(0,l.kt)(i.Z,{content:{"since-cpp20":(0,l.kt)(y.default,{mdxType:"Signature_SinceCpp20"}),"since-cpp17":(0,l.kt)(m.default,{mdxType:"Signature_SinceCpp17"}),"until-cpp17":(0,l.kt)(u.default,{mdxType:"Signature_UntilCpp17"})},mdxType:"SwitchView"}),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"(1)")," Copies the elements from the range [",(0,l.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,l.kt)("inlineCode",{parentName:"p"},"last"),") to another range beginning at ",(0,l.kt)("inlineCode",{parentName:"p"},"d_first"),", while replacing elements that satisfy prediate ",(0,l.kt)("inlineCode",{parentName:"p"},"p")," with ",(0,l.kt)("inlineCode",{parentName:"p"},"new_value")," (compared using ",(0,l.kt)("inlineCode",{parentName:"p"},"operator=="),").")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"(2)")," Same as ",(0,l.kt)("strong",{parentName:"p"},"(1)"),", but executed according to ",(0,l.kt)("inlineCode",{parentName:"p"},"policy"),"."),(0,l.kt)("admonition",{parentName:"li",title:"Overload Resolution",type:"important"},(0,l.kt)("p",{parentName:"admonition"},"These overloads participate in overload resolution only if"),(0,l.kt)(s.OS,{v:"cpp20",mdxType:"Until"}," ",(0,l.kt)("code",null,"std::is_execution_policy_v<std::decay_t<ExecutionPolicy>>")," ")," ",(0,l.kt)(s.U6,{v:"cpp20",mdxType:"Since"}," ",(0,l.kt)("code",null,"std::is_execution_policy_v<std::remove_cvref_t<ExecutionPolicy>>")," ")," is ",(0,l.kt)("code",null,"true"),"."))),(0,l.kt)("h3",{id:"parameters"},"Parameters"),(0,l.kt)(o.ZP,{mdxType:"SymbolTable"},(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)(r.Fragment,null," ",(0,l.kt)("code",null,"first")," ",(0,l.kt)("br",null)," ",(0,l.kt)("code",null,"last")," "),mdxType:"Symbol"},"The range of elements to copy."),(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"d_first"),mdxType:"Symbol"},"The beginning of the destination range."),(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"policy"),mdxType:"Symbol"},"The execution policy to use. See ",(0,l.kt)("a",{href:"#"},"execution policy")," for details."),(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"p"),mdxType:"Symbol"},(0,l.kt)("p",null,"Unary predicate which returns ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if the element should be replaced."),(0,l.kt)("p",null,"The expression ",(0,l.kt)("inlineCode",{parentName:"p"},"p(v)")," must be convertible to ",(0,l.kt)("inlineCode",{parentName:"p"},"bool")," for every argument ",(0,l.kt)("inlineCode",{parentName:"p"},"v")," of type (possibly const) ",(0,l.kt)("inlineCode",{parentName:"p"},"VT"),", where ",(0,l.kt)("inlineCode",{parentName:"p"},"VT")," is the value type of ",(0,l.kt)("inlineCode",{parentName:"p"},"InputIt"),", regardless of value category, and must not modify ",(0,l.kt)("inlineCode",{parentName:"p"},"v"),". Thus, a parameter type of ",(0,l.kt)("inlineCode",{parentName:"p"},"VT&")," is not allowed ",(0,l.kt)(s.U6,{v:"cpp11",mdxType:"Since"},", nor is ",(0,l.kt)("code",null,"VT")," unless for ",(0,l.kt)("code",null,"VT")," a move is equivalent to a copy."),"."))),(0,l.kt)("h4",{id:"type-requirements"},"Type requirements"),(0,l.kt)(o.ZP,{mdxType:"SymbolTable"},(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"InputIt"),mdxType:"Symbol"},(0,l.kt)("a",{href:"/docs/named_req/LegacyInputIterator"},"LegacyInputIterator")),(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"OutputIt"),mdxType:"Symbol"},(0,l.kt)("a",{href:"/docs/named_req/LegacyOutputIterator"},"LegacyOutputIterator")),(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)(r.Fragment,null," ",(0,l.kt)("code",null,"ForwardIt1")," ",(0,l.kt)("br",null)," ",(0,l.kt)("code",null,"ForwardIt2")," "),mdxType:"Symbol"},(0,l.kt)("a",{href:"/docs/named_req/LegacyForwardIterator"},"LegacyForwardIterator")),(0,l.kt)(o.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"Predicate"),mdxType:"Symbol"},(0,l.kt)("a",{href:"/docs/named_req/UnaryPredicate"},"UnaryPredicate"))),(0,l.kt)("p",null,"The results of the expressions ",(0,l.kt)("inlineCode",{parentName:"p"},"*first")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"new_value")," must be ",(0,l.kt)("a",{parentName:"p",href:"#"},"writable")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"d_first"),"."),(0,l.kt)("h3",{id:"return-value"},"Return value"),(0,l.kt)("p",null,"Iterator to the element past the last element copied."),(0,l.kt)("h3",{id:"complexity"},"Complexity"),(0,l.kt)("p",null,"Given ",(0,l.kt)("inlineCode",{parentName:"p"},"N")," as ",(0,l.kt)("inlineCode",{parentName:"p"},"std::distance(first, last)"),":"),(0,l.kt)("p",null,"Exactly N applications of the predicate ",(0,l.kt)("inlineCode",{parentName:"p"},"p"),"."),(0,l.kt)("h3",{id:"exceptions"},"Exceptions"),(0,l.kt)("p",null,"The overloads with a template parameter named ",(0,l.kt)("inlineCode",{parentName:"p"},"ExecutionPolicy")," report errors as follows:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If execution of a function invoked as part of the algorithm throws an exception and ",(0,l.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy")," is one of the ",(0,l.kt)("a",{parentName:"li",href:"#"},(0,l.kt)("strong",{parentName:"a"},"standard policies")),", ",(0,l.kt)("a",{parentName:"li",href:"#"},(0,l.kt)("inlineCode",{parentName:"a"},"std::terminate"))," is called.\nFor any other ",(0,l.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy"),", the behavior is ",(0,l.kt)(p.Z,{title:(0,l.kt)(d.ZP,{mdxType:"Term_ImplementationDefined"}),mdxType:"Tooltip"},(0,l.kt)("strong",{parentName:"li"},"implementation-defined")),"."),(0,l.kt)("li",{parentName:"ul"},"If the algorithm fails to allocate memory, ",(0,l.kt)("inlineCode",{parentName:"li"},"std::bad_alloc")," is thrown.")),(0,l.kt)("h3",{id:"possible-implementation"},"Possible implementation"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"replace_copy_if (1)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"template<class InputIt, class OutputIt, class UnaryPredicate, class T>\nOutputIt replace_copy_if(InputIt first, InputIt last, OutputIt d_first,\n                         UnaryPredicate p, const T& new_value)\n{\n    for (; first != last; ++first)\n        *d_first++ = p(*first) ? new_value : *first;\n    return d_first;\n}\n"))),(0,l.kt)("h3",{id:"examples"},"Examples"),(0,l.kt)("p",null,"The following copy-prints a vector, replacing all values over ",(0,l.kt)("inlineCode",{parentName:"p"},"5")," with ",(0,l.kt)("inlineCode",{parentName:"p"},"99")," on the fly."),(0,l.kt)(c.Z,{columns:["8fr","4fr"],mdxType:"Columns"},(0,l.kt)("div",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='Main.cpp' showLineNumbers",title:"'Main.cpp'",showLineNumbers:!0},"#include <algorithm>\n#include <iostream>\n#include <iterator>\n#include <vector>\n\nint main()\n{\n    std::vector<int> v {5, 7, 4, 2, 8, 6, 1, 9, 0, 3};\n    std::replace_copy_if(v.begin(), v.end(),\n                         std::ostream_iterator<int>(std::cout, \" \"),\n                         [](int n){ return n > 5; }, 99);\n    std::cout << '\\n';\n}\n"))),(0,l.kt)("div",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Output"',title:'"Output"'},"5 99 4 2 99 99 1 99 0 3\n")))))}b.isMDXComponent=!0}}]);