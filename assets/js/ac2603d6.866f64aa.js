"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[12411],{85162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(67294),r=n(86010);const l="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>_});var a=n(87462),r=n(67294),l=n(86010),i=n(12466),o=n(76775),s=n(91980),p=n(67392),c=n(50012);function u(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function m(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function v(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=m(e),[i,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[s,p]=v({queryString:n,groupId:a}),[u,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),g=(()=>{const e=s??u;return d({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{g&&o(g)}),[g]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),p(e),f(e)}),[p,f,l]),tabValues:l}}var g=n(72389);const b="tabList__CuJ",h="tabItem_LNqP";function y(e){let{className:t,block:n,selectedValue:o,selectValue:s,tabValues:p}=e;const c=[],{blockElementScrollPositionUntilNextRender:u}=(0,i.o5)(),m=e=>{const t=e.currentTarget,n=c.indexOf(t),a=p[n].value;a!==o&&(u(t),s(a))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:d,onClick:m},i,{className:(0,l.Z)("tabs__item",h,i?.className,{"tabs__item--active":o===t})}),n??t)})))}function k(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function C(e){const t=f(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",b)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(k,(0,a.Z)({},e,t)))}function _(e){const t=(0,g.Z)();return r.createElement(C,(0,a.Z)({key:String(t)},e))}},98839:(e,t,n)=>{n.d(t,{z:()=>a});const a=n(67294).createContext({name:"Unknown",folder:"unknown"})},22307:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(87462),r=n(67294);const l="columns_Terr";function i(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,r.createElement("div",(0,a.Z)({className:l,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}i.isMDXComponent=!0},99801:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(67294),r=n(74866),l=n(85162),i=n(99372),o=n(72412);const s={};function p(e){const t=e.content||{};return a.createElement(r.Z,null,Object.entries(t).map(((e,t)=>{let[n,p]=e;return p.value||p.simplified||p.detailed?a.createElement(l.Z,{value:n,label:i.gJ.get(n),default:p.default||0==t},p.simplified?a.createElement(a.Fragment,null,a.createElement(r.Z,{groupId:"view_mode",className:s.smallTabs},a.createElement(l.Z,{value:"simplified",label:"Simplified",default:!0},(0,o.Z)(p.simplified)),a.createElement(l.Z,{value:"detailed",label:"Detailed"},(0,o.Z)(p.detailed)))):p.value):a.createElement(l.Z,{value:n,label:i.gJ.get(n),default:0==t},(0,o.Z)(p))})))}},55059:(e,t,n)=>{n.d(t,{mN:()=>c,ZP:()=>p});var a=n(67294),r=n(72412);const l={symbolTable:"symbolTable_yosy",symbolName:"symbolName__gUy",symbolDesc:"symbolDesc_wDaQ",symbolProp:"symbolProp_oAcv",accessPublic:"accessPublic_LfqG",accessProtected:"accessProtected_bDL6",accessPrivate:"accessPrivate_Ab5O",modStatic:"modStatic_ZSC5",modConstexpr:"modConstexpr_iypt",modConst:"modConst_osuL",modVolatile:"modVolatile_ePYM",modVirtual:"modVirtual_jNz7"};var i=n(98839);const o={None:{Order:0,ShortName:"",FullName:"",Style:l.accessPublic},Public:{Order:1,ShortName:"pub",FullName:"public",Style:l.accessPublic},Protected:{Order:2,ShortName:"prot",FullName:"protected",Style:l.accessProtected},Private:{Order:3,ShortName:"priv",FullName:"private",Style:l.accessPrivate}},s=e=>e.none?o.None:e.pub||e.public?o.Public:e.prot||e.protected?o.Protected:e.priv||e.private?o.Private:o.Public;function p(e){return(t=>{if(0===t.length)return null;const n=t.sort(((e,t)=>s(e).Order<s(t).Order));return a.createElement("table",{"data-no-traits":`${e.noTraits||"false"}`,className:l.symbolTable},a.createElement("tbody",null,n))})(a.Children.toArray(e.children))}function c(e){a.useContext(i.z);let t=(0,r.Z)(e.name),n=null;e.desc?n=e.desc:e.children&&(n=e.children);const o=e.linkName||e.autoLink;!e.noLink&&o&&(t=a.createElement("a",{href:e.link||`${e.linkName||e.name}`},t));const p=(e,t,n)=>!0===e?a.createElement("span",{className:l[t]},n):null;return a.createElement("tr",null,!e.none&&a.createElement("td",{className:l.symbolProp},(e=>{const t=s(e);return a.createElement("span",{className:t.Style},t.ShortName)})(e),p(e.static,"modStatic","static"),p(e.constexpr,"modConstexpr","constexpr"),p(e.const,"modConst","const"),p(e.volatile,"modVolatile","volatile"),p(e.virtual,"modVirtual","virtual")),a.createElement("td",{className:l.symbolName},t),a.createElement("td",{className:l.symbolDesc},(0,r.Z)(n)))}c.isMDXComponent=!0,p.isMDXComponent=!0,p.Symbol=c},18510:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(67294),r=n(44996),l=n(34386),i=n(72412);const o="TooltipContent_Lvru",s="TooltipTitle_ukF2";function p(e){let{url:t,title:n,maxWidth:p,children:c}=e;let u=p||"clamp(250px, 25vw, 800px)";"string"==typeof u&&u.endsWith("vw")&&(u=`clamp(250px, ${u}, 800px)`);const m="function"==typeof n?a.createElement(n):n,d=(t||"").startsWith("/")?(0,r.Z)(t):t,v=t?a.createElement("a",{href:d,target:"_blank",rel:"noreferrer"},c):c;return a.createElement(l.Z,{componentsProps:{tooltip:{style:{maxWidth:u}}},title:a.createElement("span",{className:s},(0,i.Z)(m)),placement:"top",arrow:!0},a.createElement("span",{className:o},v))}p.isMDXComponent=!0},99372:(e,t,n)=>{n.d(t,{gJ:()=>c,eH:()=>v,U6:()=>m,OS:()=>d});var a=n(67294),r=n(95999);const l="markedText_c6kK",i="since_c1Q3",o="until_jXK6",s="removed_A_Kf",p="versionNumber_BiUX",c=new Map;function u(e){let{children:t,className:n}=e;return a.createElement("span",{className:l+(n?" "+n:"")},t)}function m(e){let{children:t,v:n}=e;return a.createElement(u,{className:i},t,"\xa0",a.createElement("span",{className:p},a.createElement("small",null,"(",c.get(`since-${n}`),")")))}function d(e){let{children:t,v:n}=e;return a.createElement(u,{className:o},t,"\xa0",a.createElement("span",{className:p},a.createElement("small",null,"(",c.get(`until-${n}`),")")))}function v(e){let{children:t,v:n}=e;return a.createElement(u,{className:s},t,"\xa0",a.createElement("span",{className:p},a.createElement("small",null,"(",c.get(`removed-${n}`),")")))}c.set("cpp98","C++98"),c.set("cpp03","C++03"),c.set("cpp11","C++11"),c.set("cpp14","C++14"),c.set("cpp17","C++17"),c.set("cpp20","C++20"),c.set("cpp23","C++23"),c.set("deprecated-",a.createElement(r.Z,null,"deprecated")),c.set("deprecated-cpp98",a.createElement(r.Z,null,"deprecated in C++98")),c.set("deprecated-cpp03",a.createElement(r.Z,null,"deprecated in C++03")),c.set("deprecated-cpp11",a.createElement(r.Z,null,"deprecated in C++11")),c.set("deprecated-cpp14",a.createElement(r.Z,null,"deprecated in C++14")),c.set("deprecated-cpp17",a.createElement(r.Z,null,"deprecated in C++17")),c.set("deprecated-cpp20",a.createElement(r.Z,null,"deprecated in C++20")),c.set("deprecated-cpp23",a.createElement(r.Z,null,"deprecated in C++23")),c.set("until-cpp98",a.createElement(r.Z,null,"until C++98")),c.set("until-cpp03",a.createElement(r.Z,null,"until C++03")),c.set("until-cpp11",a.createElement(r.Z,null,"until C++11")),c.set("until-cpp14",a.createElement(r.Z,null,"until C++14")),c.set("until-cpp17",a.createElement(r.Z,null,"until C++17")),c.set("until-cpp20",a.createElement(r.Z,null,"until C++20")),c.set("until-cpp23",a.createElement(r.Z,null,"until C++23")),c.set("since-cpp98",a.createElement(r.Z,null,"since C++98")),c.set("since-cpp03",a.createElement(r.Z,null,"since C++03")),c.set("since-cpp11",a.createElement(r.Z,null,"since C++11")),c.set("since-cpp14",a.createElement(r.Z,null,"since C++14")),c.set("since-cpp17",a.createElement(r.Z,null,"since C++17")),c.set("since-cpp20",a.createElement(r.Z,null,"since C++20")),c.set("since-cpp23",a.createElement(r.Z,null,"since C++23")),c.set("removed-",a.createElement(r.Z,null,"deleted")),c.set("removed-cpp98",a.createElement(r.Z,null,"removed in C++98")),c.set("removed-cpp03",a.createElement(r.Z,null,"removed in C++03")),c.set("removed-cpp11",a.createElement(r.Z,null,"removed in C++11")),c.set("removed-cpp14",a.createElement(r.Z,null,"removed in C++14")),c.set("removed-cpp17",a.createElement(r.Z,null,"removed in C++17")),c.set("removed-cpp20",a.createElement(r.Z,null,"removed in C++20")),c.set("removed-cpp23",a.createElement(r.Z,null,"removed in C++23"))},72412:(e,t,n)=>{function a(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>a})},10780:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const l={},i=void 0,o={unversionedId:"std/algo/ordinary/_codes/prev_permutation/since-cpp20",id:"std/algo/ordinary/_codes/prev_permutation/since-cpp20",title:"since-cpp20",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/prev_permutation/since-cpp20.mdx",sourceDirName:"std/algo/ordinary/_codes/prev_permutation",slug:"/std/algo/ordinary/_codes/prev_permutation/since-cpp20",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/prev_permutation/since-cpp20",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/prev_permutation/since-cpp20.mdx",tags:[],version:"current",frontMatter:{}},s={},p=[],c={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class BidirIt >\nconstexpr bool prev_permutation( BidirIt first, BidirIt last );\n\n// (2)\ntemplate< class BidirIt, class Compare >\nconstexpr bool prev_permutation( BidirIt first, BidirIt last, Compare comp );\n")))}u.isMDXComponent=!0},22336:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const l={},i=void 0,o={unversionedId:"std/algo/ordinary/_codes/prev_permutation/until-cpp20",id:"std/algo/ordinary/_codes/prev_permutation/until-cpp20",title:"until-cpp20",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/prev_permutation/until-cpp20.mdx",sourceDirName:"std/algo/ordinary/_codes/prev_permutation",slug:"/std/algo/ordinary/_codes/prev_permutation/until-cpp20",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/prev_permutation/until-cpp20",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/prev_permutation/until-cpp20.mdx",tags:[],version:"current",frontMatter:{}},s={},p=[],c={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class BidirIt >\nbool prev_permutation( BidirIt first, BidirIt last );\n\n// (2)\ntemplate< class BidirIt, class Compare >\nbool prev_permutation( BidirIt first, BidirIt last, Compare comp );\n")))}u.isMDXComponent=!0},99808:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>d,default:()=>h,frontMatter:()=>m,metadata:()=>v,toc:()=>g});var a=n(87462),r=n(67294),l=n(3905),i=n(55059),o=n(22307),s=(n(18510),n(99801)),p=n(99372),c=n(10780),u=n(22336);const m={title:"prev_permutation algorithm",sidebar_label:"prev_permutation(  )",description:"prev_permutation algorithm C++ documentation",hide_title:!0,tags:["algorithm","prev_permutation","permutation"],cppreference_origin_rel:"w/cpp/algorithm/prev_permutation"},d=void 0,v={unversionedId:"std/algo/ordinary/prev_permutation",id:"std/algo/ordinary/prev_permutation",title:"prev_permutation algorithm",description:"prev_permutation algorithm C++ documentation",source:"@site/content/docs/std/algo/ordinary/prev_permutation.mdx",sourceDirName:"std/algo/ordinary",slug:"/std/algo/ordinary/prev_permutation",permalink:"/CppLangNet/docs/std/algo/ordinary/prev_permutation",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/prev_permutation.mdx",tags:[{label:"algorithm",permalink:"/CppLangNet/docs/tags/algorithm"},{label:"prev_permutation",permalink:"/CppLangNet/docs/tags/prev-permutation"},{label:"permutation",permalink:"/CppLangNet/docs/tags/permutation"}],version:"current",frontMatter:{title:"prev_permutation algorithm",sidebar_label:"prev_permutation(  )",description:"prev_permutation algorithm C++ documentation",hide_title:!0,tags:["algorithm","prev_permutation","permutation"],cppreference_origin_rel:"w/cpp/algorithm/prev_permutation"},sidebar:"defaultSidebar",previous:{title:"next_permutation(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/next_permutation"},next:{title:"ranges::iota(  )",permalink:"/CppLangNet/docs/std/algo/ranges/iota"}},f={},g=[{value:"Parameters",id:"parameters",level:3},{value:"Type requirements",id:"type-requirements",level:4},{value:"Return value",id:"return-value",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"Possible implementation",id:"possible-implementation",level:3},{value:"Examples",id:"examples",level:3}],b={toc:g};function h(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"stdprev_permutation-algorithm"},"std::prev_permutation() algorithm"),(0,l.kt)(s.Z,{content:{"since-cpp20":(0,l.kt)(c.default,{mdxType:"Signature_SinceCpp20"}),"until-cpp20":(0,l.kt)(u.default,{mdxType:"Signature_UntilCpp20"})},mdxType:"SwitchView"}),(0,l.kt)("p",null,"Permutes the range [",(0,l.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,l.kt)("inlineCode",{parentName:"p"},"last"),") into the previous permutation,\nwhere the set of all permutations is ordered lexicographically with respect to ",(0,l.kt)("inlineCode",{parentName:"p"},"operator<")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"comp"),"."),(0,l.kt)("p",null,"Returns true if such a permutation exists;\notherwise transforms the range into the lexicographically first permutation (as if by ",(0,l.kt)("inlineCode",{parentName:"p"},"std::sort(first, last, comp); std::reverse(first, last)"),") and returns ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,l.kt)("h3",{id:"parameters"},"Parameters"),(0,l.kt)(i.ZP,{mdxType:"SymbolTable"},(0,l.kt)(i.mN,{none:!0,noLink:!0,name:(0,l.kt)(r.Fragment,null," ",(0,l.kt)("code",null,"first")," ",(0,l.kt)("br",null)," ",(0,l.kt)("code",null,"last")," "),mdxType:"Symbol"},"The range of elements to permute."),(0,l.kt)(i.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"comp"),mdxType:"Symbol"},(0,l.kt)("p",null,"Comparison function object (i.e. an object that satisfies the requirements of ",(0,l.kt)("a",{parentName:"p",href:"/docs/named_req/Compare"},(0,l.kt)("inlineCode",{parentName:"a"},"Compare")),")\nwhich returns true if the first argument is less than the second."),(0,l.kt)("p",null,"The signature of the comparison function should be equivalent to the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"bool cmp(const Type1 &a, const Type2 &b);\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The signature does not need to have ",(0,l.kt)("inlineCode",{parentName:"li"},"const&"),", but must not modify arguments."),(0,l.kt)("li",{parentName:"ul"},"Must accept all values of type (possibly const) ",(0,l.kt)("inlineCode",{parentName:"li"},"Type")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"Type2"),", regardless of ",(0,l.kt)("a",{parentName:"li",href:"#"},"value category")," (so ",(0,l.kt)("inlineCode",{parentName:"li"},"Type1&")," is not allowed, ",(0,l.kt)(p.U6,{v:"cpp11",mdxType:"Since"},"nor is ",(0,l.kt)("code",null,"Type1")," unless for ",(0,l.kt)("code",null,"Type1")," a move is equivalent to a copy"),")"),(0,l.kt)("li",{parentName:"ul"},"The types ",(0,l.kt)("inlineCode",{parentName:"li"},"Type1")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"Type2")," must be such that an object of type ",(0,l.kt)("inlineCode",{parentName:"li"},"BidirIt")," can be implicitly converted to both of them.")))),(0,l.kt)("h4",{id:"type-requirements"},"Type requirements"),(0,l.kt)(i.ZP,{mdxType:"SymbolTable"},(0,l.kt)(i.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"ForwardIt"),mdxType:"Symbol"},(0,l.kt)("a",{href:"/docs/named_req/ValueSwappable"},"ValueSwappable")," ",(0,l.kt)("br",null),(0,l.kt)("a",{href:"/docs/named_req/LegacyBidirectionalIterator"},"LegacyBidirectionalIterator")," ",(0,l.kt)("br",null))),(0,l.kt)("h3",{id:"return-value"},"Return value"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"true")," if the new permutation precedes the old in lexicographical order.",(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("inlineCode",{parentName:"p"},"false")," if the first permutation was reached and the range was reset to the last permutation."),(0,l.kt)("h3",{id:"complexity"},"Complexity"),(0,l.kt)("p",null,"At most ",(0,l.kt)("inlineCode",{parentName:"p"},"(last - first) / 2")," swaps."),(0,l.kt)("p",null,"Averaged over the entire sequence of permutations, typical implementations use about ",(0,l.kt)("inlineCode",{parentName:"p"},"3")," comparisons and ",(0,l.kt)("inlineCode",{parentName:"p"},"1.5")," swaps per call."),(0,l.kt)("h3",{id:"exceptions"},"Exceptions"),(0,l.kt)("p",null,"Any exceptions thrown from iterator operations or the element swap."),(0,l.kt)("h3",{id:"possible-implementation"},"Possible implementation"),(0,l.kt)("p",null,"Implementations (e.g. ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/microsoft/STL/blob/main/stl/src/vector_algorithms.cpp"},(0,l.kt)("strong",{parentName:"a"},"MSVC STL"))," may enable vectorization when the iterator type satisfies\n",(0,l.kt)("a",{parentName:"p",href:"/docs/named_req/LegacyContiguousIterator"},(0,l.kt)("inlineCode",{parentName:"a"},"LegacyContiguousIterator"))," and swapping its value type calls neither non-trivial special member function nor ",(0,l.kt)("a",{parentName:"p",href:"#"},"ADL"),"-found swap."),(0,l.kt)("details",null,(0,l.kt)("summary",null,"prev_permutation (1)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"\ntemplate<class BidirIt>\nbool prev_permutation(BidirIt first, BidirIt last)\n{\n    if (first == last)\n        return false;\n    BidirIt i = last;\n    if (first == --i)\n        return false;\n\n    while (1)\n    {\n        BidirIt i1, i2;\n\n        i1 = i;\n        if (*i1 < *--i)\n        {\n            i2 = last;\n            while (!(*--i2 < *i))\n                ;\n            std::iter_swap(i, i2);\n            std::reverse(i1, last);\n            return true;\n        }\n\n        if (i == first)\n        {\n            std::reverse(first, last);\n            return false;\n        }\n    }\n}\n"))),(0,l.kt)("h3",{id:"examples"},"Examples"),(0,l.kt)(o.Z,{columns:["8fr","4fr"],mdxType:"Columns"},(0,l.kt)("div",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='Main.cpp' showLineNumbers",title:"'Main.cpp'",showLineNumbers:!0},"#include <algorithm>\n#include <iostream>\n#include <string>\n\nint main()\n{\n    std::string s = \"cab\";\n\n    do std::cout << s << ' ';\n    while (std::prev_permutation(s.begin(), s.end()));\n\n    std::cout << s << '\\n';\n}\n"))),(0,l.kt)("div",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Output"',title:'"Output"'},"cab bca bac acb abc cba\n")))))}h.isMDXComponent=!0}}]);