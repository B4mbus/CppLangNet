"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[64219],{14064:(e,t,n)=>{n.d(t,{ZP:()=>l});var a=n(87462),r=(n(67294),n(3905));const i={toc:[]};function l(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Aspects and semantics that are ",(0,r.kt)("strong",{parentName:"p"},"implementation-defined")," are not guaranteed by\nthe standard in any way, rather they are left out to the implementation (compiler vendor standard library, most of the times).\nFor example, most mathematical functions incur some ",(0,r.kt)("strong",{parentName:"p"},"implementation-defined")," behaviour."))}l.isMDXComponent=!0},85162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294),r=n(86010);const i="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,l),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(87462),r=n(67294),i=n(86010),l=n(12466),o=n(76775),s=n(91980),c=n(67392),p=n(50012);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function u(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function y(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=u(e),[l,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[s,c]=y({queryString:n,groupId:a}),[d,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,i]=(0,p.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),g=(()=>{const e=s??d;return m({value:e,tabValues:i})?e:null})();(0,r.useLayoutEffect)((()=>{g&&o(g)}),[g]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),c(e),f(e)}),[c,f,i]),tabValues:i}}var g=n(72389);const k="tabList__CuJ",v="tabItem_LNqP";function b(e){let{className:t,block:n,selectedValue:o,selectValue:s,tabValues:c}=e;const p=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.o5)(),u=e=>{const t=e.currentTarget,n=p.indexOf(t),a=c[n].value;a!==o&&(d(t),s(a))},m=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:u},l,{className:(0,i.Z)("tabs__item",v,l?.className,{"tabs__item--active":o===t})}),n??t)})))}function h(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function _(e){const t=f(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",k)},r.createElement(b,(0,a.Z)({},e,t)),r.createElement(h,(0,a.Z)({},e,t)))}function N(e){const t=(0,g.Z)();return r.createElement(_,(0,a.Z)({key:String(t)},e))}},98839:(e,t,n)=>{n.d(t,{z:()=>a});const a=n(67294).createContext({name:"Unknown",folder:"unknown"})},22307:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(87462),r=n(67294);const i="columns_Terr";function l(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,r.createElement("div",(0,a.Z)({className:i,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}l.isMDXComponent=!0},99801:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),r=n(74866),i=n(85162),l=n(99372),o=n(72412);const s={};function c(e){const t=e.content||{};return a.createElement(r.Z,null,Object.entries(t).map(((e,t)=>{let[n,c]=e;return c.value||c.simplified||c.detailed?a.createElement(i.Z,{value:n,label:l.gJ.get(n),default:c.default||0==t},c.simplified?a.createElement(a.Fragment,null,a.createElement(r.Z,{groupId:"view_mode",className:s.smallTabs},a.createElement(i.Z,{value:"simplified",label:"Simplified",default:!0},(0,o.Z)(c.simplified)),a.createElement(i.Z,{value:"detailed",label:"Detailed"},(0,o.Z)(c.detailed)))):c.value):a.createElement(i.Z,{value:n,label:l.gJ.get(n),default:0==t},(0,o.Z)(c))})))}},55059:(e,t,n)=>{n.d(t,{mN:()=>p,ZP:()=>c});var a=n(67294),r=n(72412);const i={symbolTable:"symbolTable_yosy",symbolName:"symbolName__gUy",symbolDesc:"symbolDesc_wDaQ",symbolProp:"symbolProp_oAcv",accessPublic:"accessPublic_LfqG",accessProtected:"accessProtected_bDL6",accessPrivate:"accessPrivate_Ab5O",modStatic:"modStatic_ZSC5",modConstexpr:"modConstexpr_iypt",modConst:"modConst_osuL",modVolatile:"modVolatile_ePYM",modVirtual:"modVirtual_jNz7"};var l=n(98839);const o={None:{Order:0,ShortName:"",FullName:"",Style:i.accessPublic},Public:{Order:1,ShortName:"pub",FullName:"public",Style:i.accessPublic},Protected:{Order:2,ShortName:"prot",FullName:"protected",Style:i.accessProtected},Private:{Order:3,ShortName:"priv",FullName:"private",Style:i.accessPrivate}},s=e=>e.none?o.None:e.pub||e.public?o.Public:e.prot||e.protected?o.Protected:e.priv||e.private?o.Private:o.Public;function c(e){return(t=>{if(0===t.length)return null;const n=t.sort(((e,t)=>s(e).Order<s(t).Order));return a.createElement("table",{"data-no-traits":`${e.noTraits||"false"}`,className:i.symbolTable},a.createElement("tbody",null,n))})(a.Children.toArray(e.children))}function p(e){a.useContext(l.z);let t=(0,r.Z)(e.name),n=null;e.desc?n=e.desc:e.children&&(n=e.children);const o=e.linkName||e.autoLink;!e.noLink&&o&&(t=a.createElement("a",{href:e.link||`${e.linkName||e.name}`},t));const c=(e,t,n)=>!0===e?a.createElement("span",{className:i[t]},n):null;return a.createElement("tr",null,!e.none&&a.createElement("td",{className:i.symbolProp},(e=>{const t=s(e);return a.createElement("span",{className:t.Style},t.ShortName)})(e),c(e.static,"modStatic","static"),c(e.constexpr,"modConstexpr","constexpr"),c(e.const,"modConst","const"),c(e.volatile,"modVolatile","volatile"),c(e.virtual,"modVirtual","virtual")),a.createElement("td",{className:i.symbolName},t),a.createElement("td",{className:i.symbolDesc},(0,r.Z)(n)))}p.isMDXComponent=!0,c.isMDXComponent=!0,c.Symbol=p},18510:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),r=n(44996),i=n(34386),l=n(72412);const o="TooltipContent_Lvru",s="TooltipTitle_ukF2";function c(e){let{url:t,title:n,maxWidth:c,children:p}=e;let d=c||"clamp(250px, 25vw, 800px)";"string"==typeof d&&d.endsWith("vw")&&(d=`clamp(250px, ${d}, 800px)`);const u="function"==typeof n?a.createElement(n):n,m=(t||"").startsWith("/")?(0,r.Z)(t):t,y=t?a.createElement("a",{href:m,target:"_blank",rel:"noreferrer"},p):p;return a.createElement(i.Z,{componentsProps:{tooltip:{style:{maxWidth:d}}},title:a.createElement("span",{className:s},(0,l.Z)(u)),placement:"top",arrow:!0},a.createElement("span",{className:o},y))}c.isMDXComponent=!0},99372:(e,t,n)=>{n.d(t,{gJ:()=>p,eH:()=>y,U6:()=>u,OS:()=>m});var a=n(67294),r=n(95999);const i="markedText_c6kK",l="since_c1Q3",o="until_jXK6",s="removed_A_Kf",c="versionNumber_BiUX",p=new Map;function d(e){let{children:t,className:n}=e;return a.createElement("span",{className:i+(n?" "+n:"")},t)}function u(e){let{children:t,v:n}=e;return a.createElement(d,{className:l},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",p.get(`since-${n}`),")")))}function m(e){let{children:t,v:n}=e;return a.createElement(d,{className:o},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",p.get(`until-${n}`),")")))}function y(e){let{children:t,v:n}=e;return a.createElement(d,{className:s},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",p.get(`removed-${n}`),")")))}p.set("cpp98","C++98"),p.set("cpp03","C++03"),p.set("cpp11","C++11"),p.set("cpp14","C++14"),p.set("cpp17","C++17"),p.set("cpp20","C++20"),p.set("cpp23","C++23"),p.set("deprecated-",a.createElement(r.Z,null,"deprecated")),p.set("deprecated-cpp98",a.createElement(r.Z,null,"deprecated in C++98")),p.set("deprecated-cpp03",a.createElement(r.Z,null,"deprecated in C++03")),p.set("deprecated-cpp11",a.createElement(r.Z,null,"deprecated in C++11")),p.set("deprecated-cpp14",a.createElement(r.Z,null,"deprecated in C++14")),p.set("deprecated-cpp17",a.createElement(r.Z,null,"deprecated in C++17")),p.set("deprecated-cpp20",a.createElement(r.Z,null,"deprecated in C++20")),p.set("deprecated-cpp23",a.createElement(r.Z,null,"deprecated in C++23")),p.set("until-cpp98",a.createElement(r.Z,null,"until C++98")),p.set("until-cpp03",a.createElement(r.Z,null,"until C++03")),p.set("until-cpp11",a.createElement(r.Z,null,"until C++11")),p.set("until-cpp14",a.createElement(r.Z,null,"until C++14")),p.set("until-cpp17",a.createElement(r.Z,null,"until C++17")),p.set("until-cpp20",a.createElement(r.Z,null,"until C++20")),p.set("until-cpp23",a.createElement(r.Z,null,"until C++23")),p.set("since-cpp98",a.createElement(r.Z,null,"since C++98")),p.set("since-cpp03",a.createElement(r.Z,null,"since C++03")),p.set("since-cpp11",a.createElement(r.Z,null,"since C++11")),p.set("since-cpp14",a.createElement(r.Z,null,"since C++14")),p.set("since-cpp17",a.createElement(r.Z,null,"since C++17")),p.set("since-cpp20",a.createElement(r.Z,null,"since C++20")),p.set("since-cpp23",a.createElement(r.Z,null,"since C++23")),p.set("removed-",a.createElement(r.Z,null,"deleted")),p.set("removed-cpp98",a.createElement(r.Z,null,"removed in C++98")),p.set("removed-cpp03",a.createElement(r.Z,null,"removed in C++03")),p.set("removed-cpp11",a.createElement(r.Z,null,"removed in C++11")),p.set("removed-cpp14",a.createElement(r.Z,null,"removed in C++14")),p.set("removed-cpp17",a.createElement(r.Z,null,"removed in C++17")),p.set("removed-cpp20",a.createElement(r.Z,null,"removed in C++20")),p.set("removed-cpp23",a.createElement(r.Z,null,"removed in C++23"))},72412:(e,t,n)=>{function a(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>a})},78886:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const i={},l=void 0,o={unversionedId:"std/algo/ordinary/_codes/is_partitioned/since-cpp11",id:"std/algo/ordinary/_codes/is_partitioned/since-cpp11",title:"since-cpp11",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/is_partitioned/since-cpp11.mdx",sourceDirName:"std/algo/ordinary/_codes/is_partitioned",slug:"/std/algo/ordinary/_codes/is_partitioned/since-cpp11",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/is_partitioned/since-cpp11",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/is_partitioned/since-cpp11.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],p={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class InputIt, class UnaryPredicate >\nbool is_partitioned( InputIt first, InputIt last, UnaryPredicate p );\n")))}d.isMDXComponent=!0},59632:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const i={},l=void 0,o={unversionedId:"std/algo/ordinary/_codes/is_partitioned/since-cpp17",id:"std/algo/ordinary/_codes/is_partitioned/since-cpp17",title:"since-cpp17",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/is_partitioned/since-cpp17.mdx",sourceDirName:"std/algo/ordinary/_codes/is_partitioned",slug:"/std/algo/ordinary/_codes/is_partitioned/since-cpp17",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/is_partitioned/since-cpp17",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/is_partitioned/since-cpp17.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],p={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class InputIt, class UnaryPredicate >\nbool is_partitioned( InputIt first, InputIt last, UnaryPredicate p );\n\n// (2)\ntemplate< class ExecutionPolicy, class ForwardIt, class UnaryPredicate >\nbool is_partitioned( ExecutionPolicy&& policy,\n                     ForwardIt first, ForwardIt last, UnaryPredicate p );\n")))}d.isMDXComponent=!0},79405:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const i={},l=void 0,o={unversionedId:"std/algo/ordinary/_codes/is_partitioned/since-cpp20",id:"std/algo/ordinary/_codes/is_partitioned/since-cpp20",title:"since-cpp20",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/is_partitioned/since-cpp20.mdx",sourceDirName:"std/algo/ordinary/_codes/is_partitioned",slug:"/std/algo/ordinary/_codes/is_partitioned/since-cpp20",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/is_partitioned/since-cpp20",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/is_partitioned/since-cpp20.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],p={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class InputIt, class UnaryPredicate >\nconstexpr bool is_partitioned( InputIt first, InputIt last, UnaryPredicate p );\n\n// (2)\ntemplate< class ExecutionPolicy, class ForwardIt, class UnaryPredicate >\nbool is_partitioned( ExecutionPolicy&& policy,\n                     ForwardIt first, ForwardIt last, UnaryPredicate p );\n")))}d.isMDXComponent=!0},97875:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>v,contentTitle:()=>g,default:()=>_,frontMatter:()=>f,metadata:()=>k,toc:()=>b});var a=n(87462),r=n(67294),i=n(3905),l=n(55059),o=n(22307),s=n(18510),c=n(99801),p=n(99372),d=n(14064),u=n(78886),m=n(59632),y=n(79405);const f={title:"is_partitioned algorithm",sidebar_label:"is_partitioned(  )",description:"is_partitioned algorithm C++ documentation",hide_title:!0,tags:["algorithm","is_partitioned","partition","partitioned"],cppreference_origin_rel:"w/cpp/algorithm/is_partitioned"},g=void 0,k={unversionedId:"std/algo/ordinary/is_partitioned",id:"std/algo/ordinary/is_partitioned",title:"is_partitioned algorithm",description:"is_partitioned algorithm C++ documentation",source:"@site/content/docs/std/algo/ordinary/is_partitioned.mdx",sourceDirName:"std/algo/ordinary",slug:"/std/algo/ordinary/is_partitioned",permalink:"/CppLangNet/docs/std/algo/ordinary/is_partitioned",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/is_partitioned.mdx",tags:[{label:"algorithm",permalink:"/CppLangNet/docs/tags/algorithm"},{label:"is_partitioned",permalink:"/CppLangNet/docs/tags/is-partitioned"},{label:"partition",permalink:"/CppLangNet/docs/tags/partition"},{label:"partitioned",permalink:"/CppLangNet/docs/tags/partitioned"}],version:"current",frontMatter:{title:"is_partitioned algorithm",sidebar_label:"is_partitioned(  )",description:"is_partitioned algorithm C++ documentation",hide_title:!0,tags:["algorithm","is_partitioned","partition","partitioned"],cppreference_origin_rel:"w/cpp/algorithm/is_partitioned"},sidebar:"defaultSidebar",previous:{title:"ranges::partition_point(  )",permalink:"/CppLangNet/docs/std/algo/ranges/partition_point"},next:{title:"partition(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/partition"}},v={},b=[{value:"Parameters",id:"parameters",level:3},{value:"Type requirements",id:"type-requirements",level:4},{value:"Return value",id:"return-value",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"Possible implementation",id:"possible-implementation",level:3},{value:"Examples",id:"examples",level:3}],h={toc:b};function _(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"stdis_partitioned-algorithm"},"std::is_partitioned() algorithm"),(0,i.kt)(c.Z,{content:{"since-cpp20":(0,i.kt)(y.default,{mdxType:"Signature_SinceCpp20"}),"since-cpp17":(0,i.kt)(m.default,{mdxType:"Signature_SinceCpp17"}),"since-cpp11":(0,i.kt)(u.default,{mdxType:"Signature_SinceCpp11"})},mdxType:"SwitchView"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"(1)")," Returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," if all elements in the range [",(0,i.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,i.kt)("inlineCode",{parentName:"p"},"last"),") that satisfy the predicate ",(0,i.kt)("inlineCode",{parentName:"p"},"p")," appear before all elements that don't."),(0,i.kt)("p",{parentName:"li"},"Also returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," if [",(0,i.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,i.kt)("inlineCode",{parentName:"p"},"last"),") is empty.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"(2)")," Same as ",(0,i.kt)("strong",{parentName:"p"},"(1)"),", but executed according to ",(0,i.kt)("inlineCode",{parentName:"p"},"policy"),"."),(0,i.kt)("admonition",{parentName:"li",title:"Overload Resolution",type:"important"},(0,i.kt)("p",{parentName:"admonition"},"These overloads participate in overload resolution only if"),(0,i.kt)(p.OS,{v:"cpp20",mdxType:"Until"}," ",(0,i.kt)("code",null,"std::is_execution_policy_v<std::decay_t<ExecutionPolicy>>")," ")," ",(0,i.kt)(p.U6,{v:"cpp20",mdxType:"Since"}," ",(0,i.kt)("code",null,"std::is_execution_policy_v<std::is_partitioned_cvref_t<ExecutionPolicy>>")," ")," is ",(0,i.kt)("code",null,"true"),"."))),(0,i.kt)("h3",{id:"parameters"},"Parameters"),(0,i.kt)(l.ZP,{mdxType:"SymbolTable"},(0,i.kt)(l.mN,{none:!0,noLink:!0,name:(0,i.kt)(r.Fragment,null," ",(0,i.kt)("code",null,"first")," ",(0,i.kt)("br",null)," ",(0,i.kt)("code",null,"last")," "),mdxType:"Symbol"},"The range of elements to check."),(0,i.kt)(l.mN,{none:!0,noLink:!0,name:(0,i.kt)("code",null,"policy"),mdxType:"Symbol"},"The execution policy to use. See ",(0,i.kt)("a",{href:"#"},"execution policy")," for details."),(0,i.kt)(l.mN,{none:!0,noLink:!0,name:(0,i.kt)("code",null,"p"),mdxType:"Symbol"},(0,i.kt)("p",null,"Unary predicate which returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the element value should be replaced."),(0,i.kt)("p",null,"The expression ",(0,i.kt)("inlineCode",{parentName:"p"},"p(v)")," must be convertible to ",(0,i.kt)("inlineCode",{parentName:"p"},"bool")," for every argument ",(0,i.kt)("inlineCode",{parentName:"p"},"v")," of type (possibly const) ",(0,i.kt)("inlineCode",{parentName:"p"},"VT"),", where ",(0,i.kt)("inlineCode",{parentName:"p"},"VT")," is the value type of ",(0,i.kt)("inlineCode",{parentName:"p"},"InputIt"),", regardless of value category, and must not modify ",(0,i.kt)("inlineCode",{parentName:"p"},"v"),". Thus, a parameter type of ",(0,i.kt)("inlineCode",{parentName:"p"},"VT&")," is not allowed ",(0,i.kt)(p.U6,{v:"cpp11",mdxType:"Since"},", nor is ",(0,i.kt)("code",null,"VT")," unless for ",(0,i.kt)("code",null,"VT")," a move is equivalent to a copy."),"."))),(0,i.kt)("h4",{id:"type-requirements"},"Type requirements"),(0,i.kt)(l.ZP,{mdxType:"SymbolTable"},(0,i.kt)(l.mN,{none:!0,noLink:!0,name:(0,i.kt)("code",null,"InputIt"),mdxType:"Symbol"},(0,i.kt)("a",{href:"/docs/named_req/LegacyInputIterator"},"LegacyInputIterator")),(0,i.kt)(l.mN,{none:!0,noLink:!0,name:(0,i.kt)("code",null,"ForwardIt"),mdxType:"Symbol"},(0,i.kt)("a",{href:"/docs/named_req/LegacyForwardIterator"},"LegacyForwardIterator")),(0,i.kt)(l.mN,{none:!0,noLink:!0,name:(0,i.kt)("code",null,"UnaryPredicate"),mdxType:"Symbol"},(0,i.kt)("a",{href:"/docs/named_req/Predicate"},"Predicate"))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ForwardIt::value_type")," must be ",(0,i.kt)("a",{parentName:"p",href:"#"},"convertible")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"UnaryPredicate"),"'s argument type."),(0,i.kt)("h3",{id:"return-value"},"Return value"),(0,i.kt)("p",null,"If the range is empty or partitioned by ",(0,i.kt)("inlineCode",{parentName:"p"},"p")," - ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),".",(0,i.kt)("br",{parentName:"p"}),"\n","Otherwise, ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,i.kt)("h3",{id:"complexity"},"Complexity"),(0,i.kt)("p",null,"At most ",(0,i.kt)("inlineCode",{parentName:"p"},"std::distance(first, last)")," applications of ",(0,i.kt)("inlineCode",{parentName:"p"},"p"),"."),(0,i.kt)("h3",{id:"exceptions"},"Exceptions"),(0,i.kt)("p",null,"The overloads with a template parameter named ",(0,i.kt)("inlineCode",{parentName:"p"},"ExecutionPolicy")," report errors as follows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If execution of a function invoked as part of the algorithm throws an exception and ",(0,i.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy")," is one of the ",(0,i.kt)("a",{parentName:"li",href:"#"},(0,i.kt)("strong",{parentName:"a"},"standard policies")),", ",(0,i.kt)("a",{parentName:"li",href:"#"},(0,i.kt)("inlineCode",{parentName:"a"},"std::terminate"))," is called.\nFor any other ",(0,i.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy"),", the behavior is ",(0,i.kt)(s.Z,{title:(0,i.kt)(d.ZP,{mdxType:"Term_ImplementationDefined"}),mdxType:"Tooltip"},(0,i.kt)("strong",{parentName:"li"},"implementation-defined")),"."),(0,i.kt)("li",{parentName:"ul"},"If the algorithm fails to allocate memory, ",(0,i.kt)("inlineCode",{parentName:"li"},"std::bad_alloc")," is thrown.")),(0,i.kt)("h3",{id:"possible-implementation"},"Possible implementation"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"is_partitioned (1)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"\ntemplate<class InputIt, class UnaryPredicate>\nbool is_partitioned(InputIt first, InputIt last, UnaryPredicate p)\n{\n    for (; first != last; ++first)\n        if (!p(*first))\n            break;\n    for (; first != last; ++first)\n        if (p(*first))\n            return false;\n    return true;\n}\n"))),(0,i.kt)("h3",{id:"examples"},"Examples"),(0,i.kt)(o.Z,{columns:["8fr","4fr"],mdxType:"Columns"},(0,i.kt)("div",null,(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='Main.cpp' showLineNumbers",title:"'Main.cpp'",showLineNumbers:!0},"#include <algorithm>\n#include <array>\n#include <iostream>\n\nint main()\n{\n    std::array<int, 9> v {1, 2, 3, 4, 5, 6, 7, 8, 9};\n\n    auto is_even = [](int i) { return i % 2 == 0; };\n    std::cout.setf(std::ios_base::boolalpha);\n    std::cout << std::is_partitioned(v.begin(), v.end(), is_even) << ' ';\n\n    std::partition(v.begin(), v.end(), is_even);\n    std::cout << std::is_partitioned(v.begin(), v.end(), is_even) << ' ';\n\n    std::reverse(v.begin(), v.end());\n    std::cout << std::is_partitioned(v.cbegin(), v.cend(), is_even) << ' ';\n    std::cout << std::is_partitioned(v.crbegin(), v.crend(), is_even) << '\\n';\n}\n"))),(0,i.kt)("div",null,(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Output"',title:'"Output"'},"false true false true\n")))))}_.isMDXComponent=!0}}]);