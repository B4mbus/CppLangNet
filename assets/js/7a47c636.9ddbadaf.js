"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[38986,50871,47329],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,g=p["".concat(s,".").concat(m)]||p[m]||u[m]||i;return n?a.createElement(g,l(l({ref:t},d),{},{components:n})):a.createElement(g,l({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294),r=n(86010);const i="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,l),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>y});var a=n(87462),r=n(67294),i=n(86010),l=n(12466),o=n(76775),s=n(91980),c=n(67392),d=n(50012);function u(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=p(e),[l,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[s,c]=g({queryString:n,groupId:a}),[u,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,i]=(0,d.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),v=(()=>{const e=s??u;return m({value:e,tabValues:i})?e:null})();(0,r.useLayoutEffect)((()=>{v&&o(v)}),[v]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),c(e),f(e)}),[c,f,i]),tabValues:i}}var v=n(72389);const _="tabList__CuJ",b="tabItem_LNqP";function k(e){let{className:t,block:n,selectedValue:o,selectValue:s,tabValues:c}=e;const d=[],{blockElementScrollPositionUntilNextRender:u}=(0,l.o5)(),p=e=>{const t=e.currentTarget,n=d.indexOf(t),a=c[n].value;a!==o&&(u(t),s(a))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=d.indexOf(e.currentTarget)+1;t=d[n]??d[0];break}case"ArrowLeft":{const n=d.indexOf(e.currentTarget)-1;t=d[n]??d[d.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>d.push(e),onKeyDown:m,onClick:p},l,{className:(0,i.Z)("tabs__item",b,l?.className,{"tabs__item--active":o===t})}),n??t)})))}function h(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=f(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",_)},r.createElement(k,(0,a.Z)({},e,t)),r.createElement(h,(0,a.Z)({},e,t)))}function y(e){const t=(0,v.Z)();return r.createElement(N,(0,a.Z)({key:String(t)},e))}},98839:(e,t,n)=>{n.d(t,{z:()=>a});const a=n(67294).createContext({name:"Unknown",folder:"unknown"})},22307:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(87462),r=n(67294);const i="columns_Terr";function l(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,r.createElement("div",(0,a.Z)({className:i,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}l.isMDXComponent=!0},99801:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),r=n(74866),i=n(85162),l=n(99372),o=n(72412);const s={};function c(e){const t=e.content||{};return a.createElement(r.Z,null,Object.entries(t).map(((e,t)=>{let[n,c]=e;return c.value||c.simplified||c.detailed?a.createElement(i.Z,{value:n,label:l.gJ.get(n),default:c.default||0==t},c.simplified?a.createElement(a.Fragment,null,a.createElement(r.Z,{groupId:"view_mode",className:s.smallTabs},a.createElement(i.Z,{value:"simplified",label:"Simplified",default:!0},(0,o.Z)(c.simplified)),a.createElement(i.Z,{value:"detailed",label:"Detailed"},(0,o.Z)(c.detailed)))):c.value):a.createElement(i.Z,{value:n,label:l.gJ.get(n),default:0==t},(0,o.Z)(c))})))}},55059:(e,t,n)=>{n.d(t,{mN:()=>d,ZP:()=>c});var a=n(67294),r=n(72412);const i={symbolTable:"symbolTable_yosy",symbolName:"symbolName__gUy",symbolDesc:"symbolDesc_wDaQ",symbolProp:"symbolProp_oAcv",accessPublic:"accessPublic_LfqG",accessProtected:"accessProtected_bDL6",accessPrivate:"accessPrivate_Ab5O",modStatic:"modStatic_ZSC5",modConstexpr:"modConstexpr_iypt",modConst:"modConst_osuL",modVolatile:"modVolatile_ePYM",modVirtual:"modVirtual_jNz7"};var l=n(98839);const o={None:{Order:0,ShortName:"",FullName:"",Style:i.accessPublic},Public:{Order:1,ShortName:"pub",FullName:"public",Style:i.accessPublic},Protected:{Order:2,ShortName:"prot",FullName:"protected",Style:i.accessProtected},Private:{Order:3,ShortName:"priv",FullName:"private",Style:i.accessPrivate}},s=e=>e.none?o.None:e.pub||e.public?o.Public:e.prot||e.protected?o.Protected:e.priv||e.private?o.Private:o.Public;function c(e){return(t=>{if(0===t.length)return null;const n=t.sort(((e,t)=>s(e).Order<s(t).Order));return a.createElement("table",{"data-no-traits":`${e.noTraits||"false"}`,className:i.symbolTable},a.createElement("tbody",null,n))})(a.Children.toArray(e.children))}function d(e){a.useContext(l.z);let t=(0,r.Z)(e.name),n=null;e.desc?n=e.desc:e.children&&(n=e.children);const o=e.linkName||e.autoLink;!e.noLink&&o&&(t=a.createElement("a",{href:e.link||`${e.linkName||e.name}`},t));const c=(e,t,n)=>!0===e?a.createElement("span",{className:i[t]},n):null;return a.createElement("tr",null,!e.none&&a.createElement("td",{className:i.symbolProp},(e=>{const t=s(e);return a.createElement("span",{className:t.Style},t.ShortName)})(e),c(e.static,"modStatic","static"),c(e.constexpr,"modConstexpr","constexpr"),c(e.const,"modConst","const"),c(e.volatile,"modVolatile","volatile"),c(e.virtual,"modVirtual","virtual")),a.createElement("td",{className:i.symbolName},t),a.createElement("td",{className:i.symbolDesc},(0,r.Z)(n)))}d.isMDXComponent=!0,c.isMDXComponent=!0,c.Symbol=d},99372:(e,t,n)=>{n.d(t,{gJ:()=>d,eH:()=>g,U6:()=>p,OS:()=>m});var a=n(67294),r=n(95999);const i="markedText_c6kK",l="since_c1Q3",o="until_jXK6",s="removed_A_Kf",c="versionNumber_BiUX",d=new Map;function u(e){let{children:t,className:n}=e;return a.createElement("span",{className:i+(n?" "+n:"")},t)}function p(e){let{children:t,v:n}=e;return a.createElement(u,{className:l},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",d.get(`since-${n}`),")")))}function m(e){let{children:t,v:n}=e;return a.createElement(u,{className:o},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",d.get(`until-${n}`),")")))}function g(e){let{children:t,v:n}=e;return a.createElement(u,{className:s},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",d.get(`removed-${n}`),")")))}d.set("cpp98","C++98"),d.set("cpp03","C++03"),d.set("cpp11","C++11"),d.set("cpp14","C++14"),d.set("cpp17","C++17"),d.set("cpp20","C++20"),d.set("cpp23","C++23"),d.set("deprecated-",a.createElement(r.Z,null,"deprecated")),d.set("deprecated-cpp98",a.createElement(r.Z,null,"deprecated in C++98")),d.set("deprecated-cpp03",a.createElement(r.Z,null,"deprecated in C++03")),d.set("deprecated-cpp11",a.createElement(r.Z,null,"deprecated in C++11")),d.set("deprecated-cpp14",a.createElement(r.Z,null,"deprecated in C++14")),d.set("deprecated-cpp17",a.createElement(r.Z,null,"deprecated in C++17")),d.set("deprecated-cpp20",a.createElement(r.Z,null,"deprecated in C++20")),d.set("deprecated-cpp23",a.createElement(r.Z,null,"deprecated in C++23")),d.set("until-cpp98",a.createElement(r.Z,null,"until C++98")),d.set("until-cpp03",a.createElement(r.Z,null,"until C++03")),d.set("until-cpp11",a.createElement(r.Z,null,"until C++11")),d.set("until-cpp14",a.createElement(r.Z,null,"until C++14")),d.set("until-cpp17",a.createElement(r.Z,null,"until C++17")),d.set("until-cpp20",a.createElement(r.Z,null,"until C++20")),d.set("until-cpp23",a.createElement(r.Z,null,"until C++23")),d.set("since-cpp98",a.createElement(r.Z,null,"since C++98")),d.set("since-cpp03",a.createElement(r.Z,null,"since C++03")),d.set("since-cpp11",a.createElement(r.Z,null,"since C++11")),d.set("since-cpp14",a.createElement(r.Z,null,"since C++14")),d.set("since-cpp17",a.createElement(r.Z,null,"since C++17")),d.set("since-cpp20",a.createElement(r.Z,null,"since C++20")),d.set("since-cpp23",a.createElement(r.Z,null,"since C++23")),d.set("removed-",a.createElement(r.Z,null,"deleted")),d.set("removed-cpp98",a.createElement(r.Z,null,"removed in C++98")),d.set("removed-cpp03",a.createElement(r.Z,null,"removed in C++03")),d.set("removed-cpp11",a.createElement(r.Z,null,"removed in C++11")),d.set("removed-cpp14",a.createElement(r.Z,null,"removed in C++14")),d.set("removed-cpp17",a.createElement(r.Z,null,"removed in C++17")),d.set("removed-cpp20",a.createElement(r.Z,null,"removed in C++20")),d.set("removed-cpp23",a.createElement(r.Z,null,"removed in C++23"))},72412:(e,t,n)=>{function a(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>a})},65457:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const i={},l=void 0,o={unversionedId:"std/algo/ranges/_codes/uninitialized_move/since-cpp20-detailed",id:"std/algo/ranges/_codes/uninitialized_move/since-cpp20-detailed",title:"since-cpp20-detailed",description:"",source:"@site/content/docs/std/algo/ranges/_codes/uninitialized_move/since-cpp20-detailed.mdx",sourceDirName:"std/algo/ranges/_codes/uninitialized_move",slug:"/std/algo/ranges/_codes/uninitialized_move/since-cpp20-detailed",permalink:"/CppLangNet/docs/std/algo/ranges/_codes/uninitialized_move/since-cpp20-detailed",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ranges/_codes/uninitialized_move/since-cpp20-detailed.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],d={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate<\n  std::input_iterator I,\n  std::sentinel_for<I> S1,\n  no-throw-forward-iterator O,\n  no-throw-sentinel-for<O> S2\n>\n  requires std::constructible_from< std::iter_value_t<O>,\n                                    std::iter_rvalue_reference_t<I> >\nuninitialized_move_result<I, O>\n  uninitialized_move( I ifirst, S1 ilast, O ofirst, S2 olast );\n\n// (2)\ntemplate<\n  ranges::input_range IR,\n  no-throw-forward-range OR\n>\n  requires std::constructible_from< ranges::range_value_t<OR>,\n                                    ranges::range_rvalue_reference_t<IR> >\nuninitialized_move_result< ranges::borrowed_iterator_t<IR>,\n                           ranges::borrowed_iterator_t<OR> >\n  uninitialized_move( IR&& in_range, OR&& out_range );\n")))}u.isMDXComponent=!0},93637:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const i={},l=void 0,o={unversionedId:"std/algo/ranges/_codes/uninitialized_move/since-cpp20-simplified",id:"std/algo/ranges/_codes/uninitialized_move/since-cpp20-simplified",title:"since-cpp20-simplified",description:"The type of arguments are generic and have following constraints:",source:"@site/content/docs/std/algo/ranges/_codes/uninitialized_move/since-cpp20-simplified.mdx",sourceDirName:"std/algo/ranges/_codes/uninitialized_move",slug:"/std/algo/ranges/_codes/uninitialized_move/since-cpp20-simplified",permalink:"/CppLangNet/docs/std/algo/ranges/_codes/uninitialized_move/since-cpp20-simplified",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ranges/_codes/uninitialized_move/since-cpp20-simplified.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],d={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\nuninitialized_move_result<I, O>\n  uninitialized_move( I ifirst, S1 ilast, O ofirst, S2 olast );\n\n// (2)\nuninitialized_move_result< ranges::borrowed_iterator_t<IR>,\n                           ranges::borrowed_iterator_t<OR> >\n  uninitialized_move( IR&& in_range, OR&& out_range );\n")),(0,r.kt)("p",null,"The type of arguments are generic and have following constraints:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"I")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"std::input_iterator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"S1")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"std::sentinel_for<I>"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"no-throw-sentinel-for<O>")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"O")," - ",(0,r.kt)("a",{parentName:"li",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"no-throw-forward-iterator"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"IR")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"ranges::input_range")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"OR")," - ",(0,r.kt)("a",{parentName:"li",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"no-throw-forward-range")))),(0,r.kt)("p",null,"Additionally, each overload has the following constraints:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"(1)")," ",(0,r.kt)("inlineCode",{parentName:"li"},"std::constructible_from< std::iter_value_t<O>, std::iter_rvalue_reference_t<I> >")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"(1)")," ",(0,r.kt)("inlineCode",{parentName:"li"},"std::constructible_from< ranges::range_value_t<OR>, ranges::range_rvalue_reference_t<IR> >"))))}u.isMDXComponent=!0},26659:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>p,default:()=>_,frontMatter:()=>u,metadata:()=>m,toc:()=>f});var a=n(87462),r=n(67294),i=n(3905),l=n(55059),o=n(22307),s=n(99801),c=n(65457),d=n(93637);const u={title:"ranges::uninitialized_move algorithm",sidebar_label:"ranges::uninitialized_move(  )",description:"ranges::uninitialized_move algorithm C++ documentation",hide_title:!0,tags:["ranges","algorithm","uninitialized_move","move","uninitialized"],cppreference_origin_rel:"w/cpp/algorithm/ranges/uninitialized_move"},p=void 0,m={unversionedId:"std/algo/ranges/uninitialized_move",id:"std/algo/ranges/uninitialized_move",title:"ranges::uninitialized_move algorithm",description:"ranges::uninitialized_move algorithm C++ documentation",source:"@site/content/docs/std/algo/ranges/uninitialized_move.mdx",sourceDirName:"std/algo/ranges",slug:"/std/algo/ranges/uninitialized_move",permalink:"/CppLangNet/docs/std/algo/ranges/uninitialized_move",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ranges/uninitialized_move.mdx",tags:[{label:"ranges",permalink:"/CppLangNet/docs/tags/ranges"},{label:"algorithm",permalink:"/CppLangNet/docs/tags/algorithm"},{label:"uninitialized_move",permalink:"/CppLangNet/docs/tags/uninitialized-move"},{label:"move",permalink:"/CppLangNet/docs/tags/move"},{label:"uninitialized",permalink:"/CppLangNet/docs/tags/uninitialized"}],version:"current",frontMatter:{title:"ranges::uninitialized_move algorithm",sidebar_label:"ranges::uninitialized_move(  )",description:"ranges::uninitialized_move algorithm C++ documentation",hide_title:!0,tags:["ranges","algorithm","uninitialized_move","move","uninitialized"],cppreference_origin_rel:"w/cpp/algorithm/ranges/uninitialized_move"},sidebar:"defaultSidebar",previous:{title:"ranges::uninitialized_fill_n(  )",permalink:"/CppLangNet/docs/std/algo/ranges/uninitialized_fill_n"},next:{title:"ranges::uninitialized_move_n(  )",permalink:"/CppLangNet/docs/std/algo/ranges/uninitialized_move_n"}},g={},f=[{value:"Parameters",id:"parameters",level:3},{value:"Return value",id:"return-value",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"Possible implementation",id:"possible-implementation",level:3},{value:"Notes",id:"notes",level:3},{value:"Examples",id:"examples",level:3}],v={toc:f};function _(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"stdrangesuninitialized_move-algorithm"},"std::ranges::uninitialized_move() algorithm"),(0,i.kt)(s.Z,{content:{"since-cpp20":{simplified:(0,i.kt)(d.default,{mdxType:"Signature_SinceCpp20_Simplified"}),detailed:(0,i.kt)(c.default,{mdxType:"Signature_SinceCpp20_Detailed"})}},mdxType:"SwitchView"}),(0,i.kt)("p",null,"With the helper types defined as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"template< class I, class O >\nusing uninitialized_move_result = ranges::in_out_result<I, O>;\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"(1)")," Moves ",(0,i.kt)("inlineCode",{parentName:"p"},"N")," elements from the input range [",(0,i.kt)("inlineCode",{parentName:"p"},"ifirst"),"; ",(0,i.kt)("inlineCode",{parentName:"p"},"ilast"),") to the output range [",(0,i.kt)("inlineCode",{parentName:"p"},"ofirst"),"; ",(0,i.kt)("inlineCode",{parentName:"p"},"olast"),"),\nwhere ",(0,i.kt)("inlineCode",{parentName:"p"},"N")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"min(ranges::distance(ifirst, ilast), ranges::distance(ofirst, olast))"),"."),(0,i.kt)("p",{parentName:"li"},"The function has the effect equal to:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"for (; ifirst != ilast && ofirst != olast; ++ofirst, ++ifirst)\n    ::new (static_cast<void*>(std::addressof(*first)))\n        std::remove_reference_t<std::iter_reference_t<O>>(ranges::iter_move(ifirst));\n")),(0,i.kt)("admonition",{parentName:"li",type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"If an exception is thrown during the initialization then the objects that already constructed in [",(0,i.kt)("inlineCode",{parentName:"p"},"ofirst"),"; ",(0,i.kt)("inlineCode",{parentName:"p"},"olast"),")\nare destroyed in an unspecified order.")),(0,i.kt)("p",{parentName:"li"},"Also, the objects in [",(0,i.kt)("inlineCode",{parentName:"p"},"ifirst"),"; ",(0,i.kt)("inlineCode",{parentName:"p"},"ilast"),") that were already moved, are left in a valid but unspecified state.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"(2)")," Same as ",(0,i.kt)("strong",{parentName:"p"},"(1)"),", but uses ",(0,i.kt)("inlineCode",{parentName:"p"},"in_range")," as the first range and ",(0,i.kt)("inlineCode",{parentName:"p"},"out_range")," as the second range,\nas if using ",(0,i.kt)("inlineCode",{parentName:"p"},"ranges::begin(in_range)")," as ",(0,i.kt)("inlineCode",{parentName:"p"},"ifirst"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"ranges::end(in_range)")," as ",(0,i.kt)("inlineCode",{parentName:"p"},"ilast"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"ranges::begin(out_range)")," as ",(0,i.kt)("inlineCode",{parentName:"p"},"ofirst"),",\nand ",(0,i.kt)("inlineCode",{parentName:"p"},"ranges::end(out_range)")," as ",(0,i.kt)("inlineCode",{parentName:"p"},"olast"),"."))),(0,i.kt)("p",null,"The function-like entities described on this page are ",(0,i.kt)("a",{parentName:"p",href:"/docs/std/algo/niebloids"},(0,i.kt)("strong",{parentName:"a"},"niebloids")),"."),(0,i.kt)("h3",{id:"parameters"},"Parameters"),(0,i.kt)(l.ZP,{mdxType:"SymbolTable"},(0,i.kt)(l.mN,{none:!0,noLink:!0,name:(0,i.kt)(r.Fragment,null," ",(0,i.kt)("code",null,"ifirst")," ",(0,i.kt)("br",null)," ",(0,i.kt)("code",null,"ilast")," "),mdxType:"Symbol"},"The input range to move elements from."),(0,i.kt)(l.mN,{none:!0,noLink:!0,name:(0,i.kt)("code",null,"in_range"),mdxType:"Symbol"},"The input range to move elements from."),(0,i.kt)(l.mN,{none:!0,noLink:!0,name:(0,i.kt)(r.Fragment,null," ",(0,i.kt)("code",null,"ofirst")," ",(0,i.kt)("br",null)," ",(0,i.kt)("code",null,"olast")," "),mdxType:"Symbol"},"The destination range to initialize."),(0,i.kt)(l.mN,{none:!0,noLink:!0,name:(0,i.kt)("code",null,"out_range"),mdxType:"Symbol"},"The destination range to initialize.")),(0,i.kt)("h3",{id:"return-value"},"Return value"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"{\n  ifirst + N,\n  ofirst + N\n}\n")),(0,i.kt)("h3",{id:"complexity"},"Complexity"),(0,i.kt)("p",null,"Linear in ",(0,i.kt)("inlineCode",{parentName:"p"},"N"),"."),(0,i.kt)("h3",{id:"exceptions"},"Exceptions"),(0,i.kt)("p",null,"The exception thrown on construction of the elements in the destination range, if any."),(0,i.kt)("h3",{id:"possible-implementation"},"Possible implementation"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"uninitialized_move(1) and uninitialized_move(2)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"struct uninitialized_move_fn\n{\n    template<std::input_iterator I, std::sentinel_for<I> S1,\n             no-throw-forward-iterator O, no-throw-sentinel-for<O> S2>\n    requires std::constructible_from<std::iter_value_t<O>,\n             std::iter_rvalue_reference_t<I>>\n    ranges::uninitialized_move_result<I, O>\n    operator()(I ifirst, S1 ilast, O ofirst, S2 olast) const\n    {\n        O current{ofirst};\n        try\n        {\n            for (; !(ifirst == ilast or current == olast); ++ifirst, ++current)\n                ::new (const_cast<void*>(static_cast<const volatile void*>\n                    (std::addressof(*current)))) std::remove_reference_t<\n                        std::iter_reference_t<O>>(ranges::iter_move(ifirst));\n            return {std::move(ifirst), std::move(current)};\n        }\n        catch (...) // rollback: destroy constructed elements\n        {\n            for (; ofirst != current; ++ofirst)\n                ranges::destroy_at(std::addressof(*ofirst));\n            throw;\n        }\n    }\n\n    template<ranges::input_range IR, no-throw-forward-range OR>\n    requires std::constructible_from<ranges::range_value_t<OR>,\n             ranges::range_rvalue_reference_t<IR>>\n    ranges::uninitialized_move_result<ranges::borrowed_iterator_t<IR>,\n             ranges::borrowed_iterator_t<OR>>\n    operator()(IR&& in_range, OR&& out_range) const\n    {\n        return (*this)(ranges::begin(in_range), ranges::end(in_range),\n                       ranges::begin(out_range), ranges::end(out_range));\n    }\n};\n\ninline constexpr uninitialized_move_fn uninitialized_move{};\n"))),(0,i.kt)("h3",{id:"notes"},"Notes"),(0,i.kt)("p",null,"An implementation may improve the efficiency of ",(0,i.kt)("a",{parentName:"p",href:"#"},(0,i.kt)("inlineCode",{parentName:"a"},"ranges::uninitialized_move"))," if the value type of the output range is ",(0,i.kt)("a",{parentName:"p",href:"/docs/named_req/TrivialType"},(0,i.kt)("inlineCode",{parentName:"a"},"TrivialType")),"."),(0,i.kt)("h3",{id:"examples"},"Examples"),(0,i.kt)(o.Z,{columns:["8fr","4fr"],mdxType:"Columns"},(0,i.kt)("div",null,(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='Main.cpp' showLineNumbers",title:"'Main.cpp'",showLineNumbers:!0},'#include <cstdlib>\n#include <iomanip>\n#include <iostream>\n#include <memory>\n#include <string>\n\nvoid print(auto rem, auto first, auto last)\n{\n    for (std::cout << rem; first != last; ++first)\n        std::cout << std::quoted(*first) << \' \';\n    std::cout << \'\\n\';\n}\n\nint main()\n{\n    std::string in[]{"Home", "World"};\n    print("initially, in: ", std::begin(in), std::end(in));\n\n    if (\n        constexpr auto sz = std::size(in);\n        void* out = std::aligned_alloc(alignof(std::string), sizeof(std::string) * sz)\n    )\n    {\n        try\n        {\n            auto first{static_cast<std::string*>(out)};\n            auto last{first + sz};\n            std::ranges::uninitialized_move(std::begin(in), std::end(in), first, last);\n\n            print("after move, in: ", std::begin(in), std::end(in));\n            print("after move, out: ", first, last);\n\n            std::ranges::destroy(first, last);\n        }\n        catch (...)\n        {\n            std::cout << "Exception!\\n";\n        }\n        std::free(out);\n    }\n}\n'))),(0,i.kt)("div",null,(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Output"',title:'"Output"'},'initially, in: "Home" "World"\nafter move, in: "" ""\nafter move, out: "Home" "World"\n')))))}_.isMDXComponent=!0}}]);