"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[67164],{14064:(e,t,n)=>{n.d(t,{ZP:()=>o});var a=n(87462),l=(n(67294),n(3905));const r={toc:[]};function o(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},r,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Aspects and semantics that are ",(0,l.kt)("strong",{parentName:"p"},"implementation-defined")," are not guaranteed by\nthe standard in any way, rather they are left out to the implementation (compiler vendor standard library, most of the times).\nFor example, most mathematical functions incur some ",(0,l.kt)("strong",{parentName:"p"},"implementation-defined")," behaviour."))}o.isMDXComponent=!0},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),l=n(86010);const r="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,o),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(87462),l=n(67294),r=n(86010),o=n(12466),s=n(76775),i=n(91980),c=n(67392),d=n(50012);function u(e){return function(e){return l.Children.map(e,(e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:l}}=e;return{value:t,label:n,attributes:a,default:l}}))}function m(e){const{values:t,children:n}=e;return(0,l.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(r),(0,l.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=m(e),[o,s]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[i,c]=f({queryString:n,groupId:a}),[u,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,d.Nk)(n);return[a,(0,l.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),g=(()=>{const e=i??u;return p({value:e,tabValues:r})?e:null})();(0,l.useLayoutEffect)((()=>{g&&s(g)}),[g]);return{selectedValue:o,selectValue:(0,l.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);s(e),c(e),h(e)}),[c,h,r]),tabValues:r}}var g=n(72389);const b="tabList__CuJ",v="tabItem_LNqP";function y(e){let{className:t,block:n,selectedValue:s,selectValue:i,tabValues:c}=e;const d=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.o5)(),m=e=>{const t=e.currentTarget,n=d.indexOf(t),a=c[n].value;a!==s&&(u(t),i(a))},p=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=d.indexOf(e.currentTarget)+1;t=d[n]??d[0];break}case"ArrowLeft":{const n=d.indexOf(e.currentTarget)-1;t=d[n]??d[d.length-1];break}}t?.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:o}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>d.push(e),onKeyDown:p,onClick:m},o,{className:(0,r.Z)("tabs__item",v,o?.className,{"tabs__item--active":s===t})}),n??t)})))}function k(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function _(e){const t=h(e);return l.createElement("div",{className:(0,r.Z)("tabs-container",b)},l.createElement(y,(0,a.Z)({},e,t)),l.createElement(k,(0,a.Z)({},e,t)))}function N(e){const t=(0,g.Z)();return l.createElement(_,(0,a.Z)({key:String(t)},e))}},98839:(e,t,n)=>{n.d(t,{z:()=>a});const a=n(67294).createContext({name:"Unknown",folder:"unknown"})},22307:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(87462),l=n(67294);const r="columns_Terr";function o(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,l.createElement("div",(0,a.Z)({className:r,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}o.isMDXComponent=!0},99801:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),l=n(74866),r=n(85162),o=n(99372),s=n(72412);const i={};function c(e){const t=e.content||{};return a.createElement(l.Z,null,Object.entries(t).map(((e,t)=>{let[n,c]=e;return c.value||c.simplified||c.detailed?a.createElement(r.Z,{value:n,label:o.gJ.get(n),default:c.default||0==t},c.simplified?a.createElement(a.Fragment,null,a.createElement(l.Z,{groupId:"view_mode",className:i.smallTabs},a.createElement(r.Z,{value:"simplified",label:"Simplified",default:!0},(0,s.Z)(c.simplified)),a.createElement(r.Z,{value:"detailed",label:"Detailed"},(0,s.Z)(c.detailed)))):c.value):a.createElement(r.Z,{value:n,label:o.gJ.get(n),default:0==t},(0,s.Z)(c))})))}},55059:(e,t,n)=>{n.d(t,{mN:()=>d,ZP:()=>c});var a=n(67294),l=n(72412);const r={symbolTable:"symbolTable_yosy",symbolName:"symbolName__gUy",symbolDesc:"symbolDesc_wDaQ",symbolProp:"symbolProp_oAcv",accessPublic:"accessPublic_LfqG",accessProtected:"accessProtected_bDL6",accessPrivate:"accessPrivate_Ab5O",modStatic:"modStatic_ZSC5",modConstexpr:"modConstexpr_iypt",modConst:"modConst_osuL",modVolatile:"modVolatile_ePYM",modVirtual:"modVirtual_jNz7"};var o=n(98839);const s={None:{Order:0,ShortName:"",FullName:"",Style:r.accessPublic},Public:{Order:1,ShortName:"pub",FullName:"public",Style:r.accessPublic},Protected:{Order:2,ShortName:"prot",FullName:"protected",Style:r.accessProtected},Private:{Order:3,ShortName:"priv",FullName:"private",Style:r.accessPrivate}},i=e=>e.none?s.None:e.pub||e.public?s.Public:e.prot||e.protected?s.Protected:e.priv||e.private?s.Private:s.Public;function c(e){return(t=>{if(0===t.length)return null;const n=t.sort(((e,t)=>i(e).Order<i(t).Order));return a.createElement("table",{"data-no-traits":`${e.noTraits||"false"}`,className:r.symbolTable},a.createElement("tbody",null,n))})(a.Children.toArray(e.children))}function d(e){a.useContext(o.z);let t=(0,l.Z)(e.name),n=null;e.desc?n=e.desc:e.children&&(n=e.children);const s=e.linkName||e.autoLink;!e.noLink&&s&&(t=a.createElement("a",{href:e.link||`${e.linkName||e.name}`},t));const c=(e,t,n)=>!0===e?a.createElement("span",{className:r[t]},n):null;return a.createElement("tr",null,!e.none&&a.createElement("td",{className:r.symbolProp},(e=>{const t=i(e);return a.createElement("span",{className:t.Style},t.ShortName)})(e),c(e.static,"modStatic","static"),c(e.constexpr,"modConstexpr","constexpr"),c(e.const,"modConst","const"),c(e.volatile,"modVolatile","volatile"),c(e.virtual,"modVirtual","virtual")),a.createElement("td",{className:r.symbolName},t),a.createElement("td",{className:r.symbolDesc},(0,l.Z)(n)))}d.isMDXComponent=!0,c.isMDXComponent=!0,c.Symbol=d},18510:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),l=n(44996),r=n(34386),o=n(72412);const s="TooltipContent_Lvru",i="TooltipTitle_ukF2";function c(e){let{url:t,title:n,maxWidth:c,children:d}=e;let u=c||"clamp(250px, 25vw, 800px)";"string"==typeof u&&u.endsWith("vw")&&(u=`clamp(250px, ${u}, 800px)`);const m="function"==typeof n?a.createElement(n):n,p=(t||"").startsWith("/")?(0,l.Z)(t):t,f=t?a.createElement("a",{href:p,target:"_blank",rel:"noreferrer"},d):d;return a.createElement(r.Z,{componentsProps:{tooltip:{style:{maxWidth:u}}},title:a.createElement("span",{className:i},(0,o.Z)(m)),placement:"top",arrow:!0},a.createElement("span",{className:s},f))}c.isMDXComponent=!0},99372:(e,t,n)=>{n.d(t,{gJ:()=>d,eH:()=>f,U6:()=>m,OS:()=>p});var a=n(67294),l=n(95999);const r="markedText_c6kK",o="since_c1Q3",s="until_jXK6",i="removed_A_Kf",c="versionNumber_BiUX",d=new Map;function u(e){let{children:t,className:n}=e;return a.createElement("span",{className:r+(n?" "+n:"")},t)}function m(e){let{children:t,v:n}=e;return a.createElement(u,{className:o},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",d.get(`since-${n}`),")")))}function p(e){let{children:t,v:n}=e;return a.createElement(u,{className:s},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",d.get(`until-${n}`),")")))}function f(e){let{children:t,v:n}=e;return a.createElement(u,{className:i},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",d.get(`removed-${n}`),")")))}d.set("cpp98","C++98"),d.set("cpp03","C++03"),d.set("cpp11","C++11"),d.set("cpp14","C++14"),d.set("cpp17","C++17"),d.set("cpp20","C++20"),d.set("cpp23","C++23"),d.set("deprecated-",a.createElement(l.Z,null,"deprecated")),d.set("deprecated-cpp98",a.createElement(l.Z,null,"deprecated in C++98")),d.set("deprecated-cpp03",a.createElement(l.Z,null,"deprecated in C++03")),d.set("deprecated-cpp11",a.createElement(l.Z,null,"deprecated in C++11")),d.set("deprecated-cpp14",a.createElement(l.Z,null,"deprecated in C++14")),d.set("deprecated-cpp17",a.createElement(l.Z,null,"deprecated in C++17")),d.set("deprecated-cpp20",a.createElement(l.Z,null,"deprecated in C++20")),d.set("deprecated-cpp23",a.createElement(l.Z,null,"deprecated in C++23")),d.set("until-cpp98",a.createElement(l.Z,null,"until C++98")),d.set("until-cpp03",a.createElement(l.Z,null,"until C++03")),d.set("until-cpp11",a.createElement(l.Z,null,"until C++11")),d.set("until-cpp14",a.createElement(l.Z,null,"until C++14")),d.set("until-cpp17",a.createElement(l.Z,null,"until C++17")),d.set("until-cpp20",a.createElement(l.Z,null,"until C++20")),d.set("until-cpp23",a.createElement(l.Z,null,"until C++23")),d.set("since-cpp98",a.createElement(l.Z,null,"since C++98")),d.set("since-cpp03",a.createElement(l.Z,null,"since C++03")),d.set("since-cpp11",a.createElement(l.Z,null,"since C++11")),d.set("since-cpp14",a.createElement(l.Z,null,"since C++14")),d.set("since-cpp17",a.createElement(l.Z,null,"since C++17")),d.set("since-cpp20",a.createElement(l.Z,null,"since C++20")),d.set("since-cpp23",a.createElement(l.Z,null,"since C++23")),d.set("removed-",a.createElement(l.Z,null,"deleted")),d.set("removed-cpp98",a.createElement(l.Z,null,"removed in C++98")),d.set("removed-cpp03",a.createElement(l.Z,null,"removed in C++03")),d.set("removed-cpp11",a.createElement(l.Z,null,"removed in C++11")),d.set("removed-cpp14",a.createElement(l.Z,null,"removed in C++14")),d.set("removed-cpp17",a.createElement(l.Z,null,"removed in C++17")),d.set("removed-cpp20",a.createElement(l.Z,null,"removed in C++20")),d.set("removed-cpp23",a.createElement(l.Z,null,"removed in C++23"))},72412:(e,t,n)=>{function a(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>a})},60035:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=n(87462),l=(n(67294),n(3905));const r={},o=void 0,s={unversionedId:"std/algo/ordinary/_codes/random_shuffle/since-cpp11",id:"std/algo/ordinary/_codes/random_shuffle/since-cpp11",title:"since-cpp11",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/random_shuffle/since-cpp11.mdx",sourceDirName:"std/algo/ordinary/_codes/random_shuffle",slug:"/std/algo/ordinary/_codes/random_shuffle/since-cpp11",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/random_shuffle/since-cpp11",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/random_shuffle/since-cpp11.mdx",tags:[],version:"current",frontMatter:{}},i={},c=[],d={toc:c};function u(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class RandomIt >\nvoid random_shuffle( RandomIt first, RandomIt last );\n\n// (2)\ntemplate< class RandomIt, class RandomFunc >\nvoid random_shuffle( RandomIt first, RandomIt last, RandomFunc&& r );\n")))}u.isMDXComponent=!0},79663:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=n(87462),l=(n(67294),n(3905));const r={},o=void 0,s={unversionedId:"std/algo/ordinary/_codes/random_shuffle/until-cpp11",id:"std/algo/ordinary/_codes/random_shuffle/until-cpp11",title:"until-cpp11",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/random_shuffle/until-cpp11.mdx",sourceDirName:"std/algo/ordinary/_codes/random_shuffle",slug:"/std/algo/ordinary/_codes/random_shuffle/until-cpp11",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/random_shuffle/until-cpp11",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/random_shuffle/until-cpp11.mdx",tags:[],version:"current",frontMatter:{}},i={},c=[],d={toc:c};function u(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class RandomIt >\nvoid random_shuffle( RandomIt first, RandomIt last );\n")))}u.isMDXComponent=!0},35259:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>f,default:()=>y,frontMatter:()=>p,metadata:()=>h,toc:()=>b});var a=n(87462),l=n(67294),r=n(3905),o=n(55059),s=n(22307),i=n(99801),c=n(18510),d=(n(99372),n(14064)),u=n(79663),m=n(60035);const p={title:"random_shuffle algorithm",sidebar_label:"random_shuffle(  )",description:"random_shuffle algorithm C++ documentation",hide_title:!0,tags:["algorithm","random_shuffle","random","shuffle"],cppreference_origin_rel:"w/cpp/algorithm/random_shuffle"},f=void 0,h={unversionedId:"std/algo/ordinary/random_shuffle",id:"std/algo/ordinary/random_shuffle",title:"random_shuffle algorithm",description:"random_shuffle algorithm C++ documentation",source:"@site/content/docs/std/algo/ordinary/random_shuffle.mdx",sourceDirName:"std/algo/ordinary",slug:"/std/algo/ordinary/random_shuffle",permalink:"/CppLangNet/docs/std/algo/ordinary/random_shuffle",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/random_shuffle.mdx",tags:[{label:"algorithm",permalink:"/CppLangNet/docs/tags/algorithm"},{label:"random_shuffle",permalink:"/CppLangNet/docs/tags/random-shuffle"},{label:"random",permalink:"/CppLangNet/docs/tags/random"},{label:"shuffle",permalink:"/CppLangNet/docs/tags/shuffle"}],version:"current",frontMatter:{title:"random_shuffle algorithm",sidebar_label:"random_shuffle(  )",description:"random_shuffle algorithm C++ documentation",hide_title:!0,tags:["algorithm","random_shuffle","random","shuffle"],cppreference_origin_rel:"w/cpp/algorithm/random_shuffle"},sidebar:"defaultSidebar",previous:{title:"ranges::sample(  )",permalink:"/CppLangNet/docs/std/algo/ranges/sample"},next:{title:"shuffle(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/shuffle"}},g={},b=[{value:"Parameters",id:"parameters",level:3},{value:"Type requirements",id:"type-requirements",level:4},{value:"Return value",id:"return-value",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"Possible implementation",id:"possible-implementation",level:3},{value:"Notes",id:"notes",level:3}],v={toc:b};function y(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"stdrandom_shuffle-algorithm"},"std::random_shuffle() algorithm"),(0,r.kt)(i.Z,{content:{"since-cpp11":(0,r.kt)(m.default,{mdxType:"Signature_SinceCpp11"}),"until-cpp11":(0,r.kt)(u.default,{mdxType:"Signature_UntilCpp11"})},mdxType:"SwitchView"}),(0,r.kt)("p",null,"Reorders the elements in the given range [",(0,r.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,r.kt)("inlineCode",{parentName:"p"},"last"),") such that each possible permutation of those elements has equal probability of appearance."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"(1)")," The source of randomness is ",(0,r.kt)(c.Z,{title:(0,r.kt)(d.ZP,{mdxType:"Term_ImplementationDefined"}),mdxType:"Tooltip"},"implementation-defined"),", but the function ",(0,r.kt)("a",{parentName:"p",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"std::rand"))," is often used.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"(2)")," The source of randomness is the function object ",(0,r.kt)("inlineCode",{parentName:"p"},"r"),"."))),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)(o.ZP,{mdxType:"SymbolTable"},(0,r.kt)(o.mN,{none:!0,noLink:!0,name:(0,r.kt)(l.Fragment,null," ",(0,r.kt)("code",null,"first")," ",(0,r.kt)("br",null)," ",(0,r.kt)("code",null,"last")," "),mdxType:"Symbol"},"The range of elements to shuffle."),(0,r.kt)(o.mN,{none:!0,noLink:!0,name:(0,r.kt)("code",null,"r"),mdxType:"Symbol"},"Function object returning a randomly chosen value of type convertible to ",(0,r.kt)("code",null,"std::iterator_traits<RandomIt>::difference_type")," in the interval [",(0,r.kt)("code",null,"0"),"; ",(0,r.kt)("code",null,"n"),") if invoked as ",(0,r.kt)("code",null,"r(n)"),".")),(0,r.kt)("h4",{id:"type-requirements"},"Type requirements"),(0,r.kt)(o.ZP,{mdxType:"SymbolTable"},(0,r.kt)(o.mN,{none:!0,noLink:!0,name:(0,r.kt)("code",null,"RandomIt"),mdxType:"Symbol"},(0,r.kt)("a",{href:"/docs/named_req/LegacyRandomAccessIterator"},"LegacyRandomAccessIterator")," ",(0,r.kt)("br",null),(0,r.kt)("a",{href:"/docs/named_req/ValueSwappable"},"ValueSwappable"))),(0,r.kt)("h3",{id:"return-value"},"Return value"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"(none)")),(0,r.kt)("h3",{id:"complexity"},"Complexity"),(0,r.kt)("p",null,"Linear in ",(0,r.kt)("inlineCode",{parentName:"p"},"std::distance(first, last)"),"."),(0,r.kt)("h3",{id:"exceptions"},"Exceptions"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"(none)")),(0,r.kt)("h3",{id:"possible-implementation"},"Possible implementation"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"random_shuffle (1)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"template<class RandomIt>\nvoid random_shuffle(RandomIt first, RandomIt last)\n{\n    typedef typename std::iterator_traits<RandomIt>::difference_type diff_t;\n\n    for (diff_t i = last - first - 1; i > 0; --i)\n    {\n        using std::swap;\n        swap(first[i], first[std::rand() % (i + 1)]);\n        // rand() % (i + 1) is not actually correct, because the generated number\n        // is not uniformly distributed for most values of i. A correct implementation\n        // will need to essentially reimplement C++11 std::uniform_int_distribution,\n        // which is beyond the scope of this example.\n    }\n}\n"))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"random_shuffle (2)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"template<class RandomIt, class RandomFunc>\nvoid random_shuffle(RandomIt first, RandomIt last, RandomFunc&& r)\n{\n    typedef typename std::iterator_traits<RandomIt>::difference_type diff_t;\n\n    for (diff_t i = last - first - 1; i > 0; --i)\n    {\n        using std::swap;\n        swap(first[i], first[r(i + 1)]);\n    }\n}\n"))),(0,r.kt)("h3",{id:"notes"},"Notes"),(0,r.kt)("p",null,"Note that the implementation is not dictated by the standard, so even if you use exactly the same ",(0,r.kt)("inlineCode",{parentName:"p"},"RandomFunc")," you may get different results with different standard library implementations."),(0,r.kt)("p",null,"The reason for removing ",(0,r.kt)("a",{parentName:"p",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"std::random_shuffle"))," in C++17 is that the iterator-only version usually depends on ",(0,r.kt)("a",{parentName:"p",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"std::rand")),", which is now also discussed for deprecation.\n(",(0,r.kt)("a",{parentName:"p",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"std::rand"))," should be replaced with the classes of the ",(0,r.kt)("inlineCode",{parentName:"p"},"<random>")," header, as ",(0,r.kt)("inlineCode",{parentName:"p"},"std::rand")," is considered harmful.)"),(0,r.kt)("p",null,"In addition, the iterator-only ",(0,r.kt)("a",{parentName:"p",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"std::random_shuffle"))," version usually depends on a global state. The ",(0,r.kt)("a",{parentName:"p",href:"/docs/std/algo/ordinary/shuffle"},(0,r.kt)("inlineCode",{parentName:"a"},"std::shuffle"))," shuffle algorithm is the preferred replacement, as it uses a ",(0,r.kt)("inlineCode",{parentName:"p"},"URBG")," as its 3rd parameter."),(0,r.kt)(s.Z,{columns:["8fr","4fr"],mdxType:"Columns"},(0,r.kt)("div",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='Main.cpp' showLineNumbers",title:"'Main.cpp'",showLineNumbers:!0},"#include <algorithm>\n#include <iostream>\n#include <iterator>\n#include <vector>\n\nint main()\n{\n    std::vector<int> v {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n\n    std::random_shuffle(v.begin(), v.end());\n\n    std::copy(v.begin(), v.end(), std::ostream_iterator<int>(std::cout, \" \"));\n    std::cout << '\\n';\n}\n"))),(0,r.kt)("div",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Possible Output"',title:'"Possible','Output"':!0},"8 6 10 4 2 3 7 1 9 5\n")))))}y.isMDXComponent=!0}}]);