"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[47467],{98088:(e,t,n)=>{n.d(t,{ZP:()=>i});var a=n(87462),r=(n(67294),n(3905));const o={toc:[]};function i(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("b",null,"Undefined behaviour")," is a property of a program that's incorrect, but likely compiles. It is incorrect in a way, that the error is only invoked in certain conditions at runtime.",(0,r.kt)("p",null,"Common cases include: ",(0,r.kt)("strong",{parentName:"p"},"out of bounds access"),", ",(0,r.kt)("strong",{parentName:"p"},"reading uninitialized objects"),", ",(0,r.kt)("strong",{parentName:"p"},"dangling pointers/references")," or ",(0,r.kt)("strong",{parentName:"p"},"signed overflow"),"."))}i.isMDXComponent=!0},85162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(67294),r=n(86010);const o="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>_});var a=n(87462),r=n(67294),o=n(86010),i=n(12466),l=n(76775),s=n(91980),c=n(67392),p=n(50012);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function m(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function u(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=m(e),[i,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!u({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[s,c]=f({queryString:n,groupId:a}),[d,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,p.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),k=(()=>{const e=s??d;return u({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{k&&l(k)}),[k]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!u({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),g(e)}),[c,g,o]),tabValues:o}}var k=n(72389);const h="tabList__CuJ",v="tabItem_LNqP";function y(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:c}=e;const p=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),m=e=>{const t=e.currentTarget,n=p.indexOf(t),a=c[n].value;a!==l&&(d(t),s(a))},u=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>p.push(e),onKeyDown:u,onClick:m},i,{className:(0,o.Z)("tabs__item",v,i?.className,{"tabs__item--active":l===t})}),n??t)})))}function b(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=g(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",h)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(b,(0,a.Z)({},e,t)))}function _(e){const t=(0,k.Z)();return r.createElement(N,(0,a.Z)({key:String(t)},e))}},98839:(e,t,n)=>{n.d(t,{z:()=>a});const a=n(67294).createContext({name:"Unknown",folder:"unknown"})},22307:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(87462),r=n(67294);const o="columns_Terr";function i(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,r.createElement("div",(0,a.Z)({className:o,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}i.isMDXComponent=!0},99801:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),r=n(74866),o=n(85162),i=n(99372),l=n(72412);const s={};function c(e){const t=e.content||{};return a.createElement(r.Z,null,Object.entries(t).map(((e,t)=>{let[n,c]=e;return c.value||c.simplified||c.detailed?a.createElement(o.Z,{value:n,label:i.gJ.get(n),default:c.default||0==t},c.simplified?a.createElement(a.Fragment,null,a.createElement(r.Z,{groupId:"view_mode",className:s.smallTabs},a.createElement(o.Z,{value:"simplified",label:"Simplified",default:!0},(0,l.Z)(c.simplified)),a.createElement(o.Z,{value:"detailed",label:"Detailed"},(0,l.Z)(c.detailed)))):c.value):a.createElement(o.Z,{value:n,label:i.gJ.get(n),default:0==t},(0,l.Z)(c))})))}},55059:(e,t,n)=>{n.d(t,{mN:()=>p,ZP:()=>c});var a=n(67294),r=n(72412);const o={symbolTable:"symbolTable_yosy",symbolName:"symbolName__gUy",symbolDesc:"symbolDesc_wDaQ",symbolProp:"symbolProp_oAcv",accessPublic:"accessPublic_LfqG",accessProtected:"accessProtected_bDL6",accessPrivate:"accessPrivate_Ab5O",modStatic:"modStatic_ZSC5",modConstexpr:"modConstexpr_iypt",modConst:"modConst_osuL",modVolatile:"modVolatile_ePYM",modVirtual:"modVirtual_jNz7"};var i=n(98839);const l={None:{Order:0,ShortName:"",FullName:"",Style:o.accessPublic},Public:{Order:1,ShortName:"pub",FullName:"public",Style:o.accessPublic},Protected:{Order:2,ShortName:"prot",FullName:"protected",Style:o.accessProtected},Private:{Order:3,ShortName:"priv",FullName:"private",Style:o.accessPrivate}},s=e=>e.none?l.None:e.pub||e.public?l.Public:e.prot||e.protected?l.Protected:e.priv||e.private?l.Private:l.Public;function c(e){return(t=>{if(0===t.length)return null;const n=t.sort(((e,t)=>s(e).Order<s(t).Order));return a.createElement("table",{"data-no-traits":`${e.noTraits||"false"}`,className:o.symbolTable},a.createElement("tbody",null,n))})(a.Children.toArray(e.children))}function p(e){a.useContext(i.z);let t=(0,r.Z)(e.name),n=null;e.desc?n=e.desc:e.children&&(n=e.children);const l=e.linkName||e.autoLink;!e.noLink&&l&&(t=a.createElement("a",{href:e.link||`${e.linkName||e.name}`},t));const c=(e,t,n)=>!0===e?a.createElement("span",{className:o[t]},n):null;return a.createElement("tr",null,!e.none&&a.createElement("td",{className:o.symbolProp},(e=>{const t=s(e);return a.createElement("span",{className:t.Style},t.ShortName)})(e),c(e.static,"modStatic","static"),c(e.constexpr,"modConstexpr","constexpr"),c(e.const,"modConst","const"),c(e.volatile,"modVolatile","volatile"),c(e.virtual,"modVirtual","virtual")),a.createElement("td",{className:o.symbolName},t),a.createElement("td",{className:o.symbolDesc},(0,r.Z)(n)))}p.isMDXComponent=!0,c.isMDXComponent=!0,c.Symbol=p},18510:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),r=n(44996),o=n(34386),i=n(72412);const l="TooltipContent_Lvru",s="TooltipTitle_ukF2";function c(e){let{url:t,title:n,maxWidth:c,children:p}=e;let d=c||"clamp(250px, 25vw, 800px)";"string"==typeof d&&d.endsWith("vw")&&(d=`clamp(250px, ${d}, 800px)`);const m="function"==typeof n?a.createElement(n):n,u=(t||"").startsWith("/")?(0,r.Z)(t):t,f=t?a.createElement("a",{href:u,target:"_blank",rel:"noreferrer"},p):p;return a.createElement(o.Z,{componentsProps:{tooltip:{style:{maxWidth:d}}},title:a.createElement("span",{className:s},(0,i.Z)(m)),placement:"top",arrow:!0},a.createElement("span",{className:l},f))}c.isMDXComponent=!0},99372:(e,t,n)=>{n.d(t,{gJ:()=>p,eH:()=>f,U6:()=>m,OS:()=>u});var a=n(67294),r=n(95999);const o="markedText_c6kK",i="since_c1Q3",l="until_jXK6",s="removed_A_Kf",c="versionNumber_BiUX",p=new Map;function d(e){let{children:t,className:n}=e;return a.createElement("span",{className:o+(n?" "+n:"")},t)}function m(e){let{children:t,v:n}=e;return a.createElement(d,{className:i},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",p.get(`since-${n}`),")")))}function u(e){let{children:t,v:n}=e;return a.createElement(d,{className:l},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",p.get(`until-${n}`),")")))}function f(e){let{children:t,v:n}=e;return a.createElement(d,{className:s},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",p.get(`removed-${n}`),")")))}p.set("cpp98","C++98"),p.set("cpp03","C++03"),p.set("cpp11","C++11"),p.set("cpp14","C++14"),p.set("cpp17","C++17"),p.set("cpp20","C++20"),p.set("cpp23","C++23"),p.set("deprecated-",a.createElement(r.Z,null,"deprecated")),p.set("deprecated-cpp98",a.createElement(r.Z,null,"deprecated in C++98")),p.set("deprecated-cpp03",a.createElement(r.Z,null,"deprecated in C++03")),p.set("deprecated-cpp11",a.createElement(r.Z,null,"deprecated in C++11")),p.set("deprecated-cpp14",a.createElement(r.Z,null,"deprecated in C++14")),p.set("deprecated-cpp17",a.createElement(r.Z,null,"deprecated in C++17")),p.set("deprecated-cpp20",a.createElement(r.Z,null,"deprecated in C++20")),p.set("deprecated-cpp23",a.createElement(r.Z,null,"deprecated in C++23")),p.set("until-cpp98",a.createElement(r.Z,null,"until C++98")),p.set("until-cpp03",a.createElement(r.Z,null,"until C++03")),p.set("until-cpp11",a.createElement(r.Z,null,"until C++11")),p.set("until-cpp14",a.createElement(r.Z,null,"until C++14")),p.set("until-cpp17",a.createElement(r.Z,null,"until C++17")),p.set("until-cpp20",a.createElement(r.Z,null,"until C++20")),p.set("until-cpp23",a.createElement(r.Z,null,"until C++23")),p.set("since-cpp98",a.createElement(r.Z,null,"since C++98")),p.set("since-cpp03",a.createElement(r.Z,null,"since C++03")),p.set("since-cpp11",a.createElement(r.Z,null,"since C++11")),p.set("since-cpp14",a.createElement(r.Z,null,"since C++14")),p.set("since-cpp17",a.createElement(r.Z,null,"since C++17")),p.set("since-cpp20",a.createElement(r.Z,null,"since C++20")),p.set("since-cpp23",a.createElement(r.Z,null,"since C++23")),p.set("removed-",a.createElement(r.Z,null,"deleted")),p.set("removed-cpp98",a.createElement(r.Z,null,"removed in C++98")),p.set("removed-cpp03",a.createElement(r.Z,null,"removed in C++03")),p.set("removed-cpp11",a.createElement(r.Z,null,"removed in C++11")),p.set("removed-cpp14",a.createElement(r.Z,null,"removed in C++14")),p.set("removed-cpp17",a.createElement(r.Z,null,"removed in C++17")),p.set("removed-cpp20",a.createElement(r.Z,null,"removed in C++20")),p.set("removed-cpp23",a.createElement(r.Z,null,"removed in C++23"))},72412:(e,t,n)=>{function a(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>a})},13743:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={},i=void 0,l={unversionedId:"std/algo/ordinary/_codes/is_permutation/since-cpp11",id:"std/algo/ordinary/_codes/is_permutation/since-cpp11",title:"since-cpp11",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/is_permutation/since-cpp11.mdx",sourceDirName:"std/algo/ordinary/_codes/is_permutation",slug:"/std/algo/ordinary/_codes/is_permutation/since-cpp11",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/is_permutation/since-cpp11",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/is_permutation/since-cpp11.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],p={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class ForwardIt1, class ForwardIt2 >\nbool is_permutation( ForwardIt1 first1, ForwardIt1 last1, ForwardIt2 first2 );\n\n// (2)\ntemplate< class ForwardIt1, class ForwardIt2, class BinaryPredicate >\nbool is_permutation( ForwardIt1 first1, ForwardIt1 last1, ForwardIt2 first2, BinaryPredicate p );\n")))}d.isMDXComponent=!0},63068:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={},i=void 0,l={unversionedId:"std/algo/ordinary/_codes/is_permutation/since-cpp14",id:"std/algo/ordinary/_codes/is_permutation/since-cpp14",title:"since-cpp14",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/is_permutation/since-cpp14.mdx",sourceDirName:"std/algo/ordinary/_codes/is_permutation",slug:"/std/algo/ordinary/_codes/is_permutation/since-cpp14",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/is_permutation/since-cpp14",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/is_permutation/since-cpp14.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],p={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class ForwardIt1, class ForwardIt2 >\nbool is_permutation( ForwardIt1 first1, ForwardIt1 last1, ForwardIt2 first2 );\n\n// (2)\ntemplate< class ForwardIt1, class ForwardIt2, class BinaryPredicate >\nbool is_permutation( ForwardIt1 first1, ForwardIt1 last1, ForwardIt2 first2, BinaryPredicate p );\n\n// (3)\ntemplate< class ForwardIt1, class ForwardIt2 >\nbool is_permutation( ForwardIt1 first1, ForwardIt1 last1, ForwardIt2 first2, ForwardIt2 last2 );\n\n// (4)\ntemplate< class ForwardIt1, class ForwardIt2, class BinaryPredicate >\nbool is_permutation( ForwardIt1 first1, ForwardIt1 last1, ForwardIt2 first2, ForwardIt2 last2, BinaryPredicate p );\n")))}d.isMDXComponent=!0},5464:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={},i=void 0,l={unversionedId:"std/algo/ordinary/_codes/is_permutation/since-cpp20",id:"std/algo/ordinary/_codes/is_permutation/since-cpp20",title:"since-cpp20",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/is_permutation/since-cpp20.mdx",sourceDirName:"std/algo/ordinary/_codes/is_permutation",slug:"/std/algo/ordinary/_codes/is_permutation/since-cpp20",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/is_permutation/since-cpp20",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/is_permutation/since-cpp20.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],p={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class ForwardIt1, class ForwardIt2 >\nconstexpr bool is_permutation( ForwardIt1 first1, ForwardIt1 last1, ForwardIt2 first2 );\n\n// (2)\ntemplate< class ForwardIt1, class ForwardIt2, class BinaryPredicate >\nconstexpr bool is_permutation( ForwardIt1 first1, ForwardIt1 last1, ForwardIt2 first2, BinaryPredicate p );\n\n// (3)\ntemplate< class ForwardIt1, class ForwardIt2 >\nconstexpr bool is_permutation( ForwardIt1 first1, ForwardIt1 last1, ForwardIt2 first2, ForwardIt2 last2 );\n\n// (4)\ntemplate< class ForwardIt1, class ForwardIt2, class BinaryPredicate >\nconstexpr bool is_permutation( ForwardIt1 first1, ForwardIt1 last1,\n                               ForwardIt2 first2, ForwardIt2 last2, BinaryPredicate p );\n")))}d.isMDXComponent=!0},87240:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>g,default:()=>_,frontMatter:()=>f,metadata:()=>k,toc:()=>v});var a=n(87462),r=n(67294),o=n(3905),i=n(55059),l=n(22307),s=n(18510),c=n(99801),p=n(98088),d=n(13743),m=n(63068),u=n(5464);const f={title:"is_permutation algorithm",sidebar_label:"is_permutation(  )",description:"is_permutation algorithm C++ documentation",hide_title:!0,tags:["algorithm","is_permutation","permutation"],cppreference_origin_rel:"w/cpp/algorithm/is_permutation"},g=void 0,k={unversionedId:"std/algo/ordinary/is_permutation",id:"std/algo/ordinary/is_permutation",title:"is_permutation algorithm",description:"is_permutation algorithm C++ documentation",source:"@site/content/docs/std/algo/ordinary/is_permutation.mdx",sourceDirName:"std/algo/ordinary",slug:"/std/algo/ordinary/is_permutation",permalink:"/CppLangNet/docs/std/algo/ordinary/is_permutation",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/is_permutation.mdx",tags:[{label:"algorithm",permalink:"/CppLangNet/docs/tags/algorithm"},{label:"is_permutation",permalink:"/CppLangNet/docs/tags/is-permutation"},{label:"permutation",permalink:"/CppLangNet/docs/tags/permutation"}],version:"current",frontMatter:{title:"is_permutation algorithm",sidebar_label:"is_permutation(  )",description:"is_permutation algorithm C++ documentation",hide_title:!0,tags:["algorithm","is_permutation","permutation"],cppreference_origin_rel:"w/cpp/algorithm/is_permutation"},sidebar:"defaultSidebar",previous:{title:"ranges::prev_permutation(  )",permalink:"/CppLangNet/docs/std/algo/ranges/prev_permutation"},next:{title:"next_permutation(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/next_permutation"}},h={},v=[{value:"Parameters",id:"parameters",level:3},{value:"Type requirements",id:"type-requirements",level:4},{value:"Return value",id:"return-value",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"Possible implementation",id:"possible-implementation",level:3},{value:"Notes",id:"notes",level:3},{value:"Examples",id:"examples",level:3}],y=(b="Term_ImplementationDefined",function(e){return console.warn("Component "+b+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var b;const N={toc:v};function _(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},N,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"stdis_permutation-algorithm"},"std::is_permutation() algorithm"),(0,o.kt)(c.Z,{content:{"since-cpp20":(0,o.kt)(u.default,{mdxType:"Signature_SinceCpp20"}),"since-cpp14":(0,o.kt)(m.default,{mdxType:"Signature_SinceCpp14"}),"since-cpp11":(0,o.kt)(d.default,{mdxType:"Signature_SinceCpp11"})},mdxType:"SwitchView"}),(0,o.kt)("p",null,"Returns ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," if there exists a permutation of the elements in the range [",(0,o.kt)("inlineCode",{parentName:"p"},"first1"),"; ",(0,o.kt)("inlineCode",{parentName:"p"},"last1"),")\nthat makes that range equal to the range [",(0,o.kt)("inlineCode",{parentName:"p"},"first2"),"; ",(0,o.kt)("inlineCode",{parentName:"p"},"last2"),"), where ",(0,o.kt)("inlineCode",{parentName:"p"},"last2")," denotes ",(0,o.kt)("inlineCode",{parentName:"p"},"first2 + (last1 - first1)")," if it was not given."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"(1, 3)")," Elements are compared using ",(0,o.kt)("inlineCode",{parentName:"li"},"operator=="),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"(2, 4)")," Elements are compared using the given binary predicate ",(0,o.kt)("inlineCode",{parentName:"li"},"p"),".")),(0,o.kt)("admonition",{title:"Undefined Behaviour",type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)(s.Z,{title:(0,o.kt)(p.ZP,{mdxType:"Term_UndefinedBehaviour"}),mdxType:"Tooltip"},"behavior is undefined")," if it is not an equivalence relation.")),(0,o.kt)("h3",{id:"parameters"},"Parameters"),(0,o.kt)(i.ZP,{mdxType:"SymbolTable"},(0,o.kt)(i.mN,{none:!0,noLink:!0,name:(0,o.kt)(r.Fragment,null," ",(0,o.kt)("code",null,"first1")," ",(0,o.kt)("br",null)," ",(0,o.kt)("code",null,"last1")," "),mdxType:"Symbol"},"The range of elements to compare."),(0,o.kt)(i.mN,{none:!0,noLink:!0,name:(0,o.kt)(r.Fragment,null," ",(0,o.kt)("code",null,"first1")," ",(0,o.kt)("br",null)," ",(0,o.kt)("code",null,"last1")," "),mdxType:"Symbol"},"The second range to compare."),(0,o.kt)(i.mN,{none:!0,noLink:!0,name:(0,o.kt)("code",null,"p"),mdxType:"Symbol"},(0,o.kt)("p",null,"Unary predicate which returns ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," if the element value should be replaced."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Type should be the value type of both ",(0,o.kt)("inlineCode",{parentName:"li"},"ForwardIt1")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"ForwardIt2"),"."),(0,o.kt)("li",{parentName:"ul"},"The signature does not need to have ",(0,o.kt)("inlineCode",{parentName:"li"},"const&"),", but the function must not modify the objects passed to it.")))),(0,o.kt)("h4",{id:"type-requirements"},"Type requirements"),(0,o.kt)(i.ZP,{mdxType:"SymbolTable"},(0,o.kt)(i.mN,{none:!0,noLink:!0,name:(0,o.kt)(r.Fragment,null," ",(0,o.kt)("code",null,"ForwardIt1")," ",(0,o.kt)("br",null)," ",(0,o.kt)("code",null,"ForwardIt2")," "),mdxType:"Symbol"},(0,o.kt)("a",{href:"/docs/named_req/LegacyForwardIterator"},"LegacyForwardIterator")),(0,o.kt)(i.mN,{none:!0,noLink:!0,name:(0,o.kt)(r.Fragment,null," ",(0,o.kt)("code",null,"ForwardIt1")," ",(0,o.kt)("br",null)," ",(0,o.kt)("code",null,"ForwardIt2")," "),mdxType:"Symbol"},"Must have the same value type.")),(0,o.kt)("h3",{id:"return-value"},"Return value"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"true")," if the range [",(0,o.kt)("inlineCode",{parentName:"p"},"first1"),"; ",(0,o.kt)("inlineCode",{parentName:"p"},"last1"),") is a permutation of the range [",(0,o.kt)("inlineCode",{parentName:"p"},"first2"),"; ",(0,o.kt)("inlineCode",{parentName:"p"},"last2"),")."),(0,o.kt)("h3",{id:"complexity"},"Complexity"),(0,o.kt)("p",null,"Given ",(0,o.kt)("inlineCode",{parentName:"p"},"N")," as ",(0,o.kt)("inlineCode",{parentName:"p"},"std::distance(first1, last1)"),":"),(0,o.kt)("p",null,"At most ",(0,o.kt)("strong",{parentName:"p"},"O(N2)")," applications of the predicate, or exactly ",(0,o.kt)("inlineCode",{parentName:"p"},"N")," if the sequences are already equal, where N is ."),(0,o.kt)("p",null,"However if ",(0,o.kt)("inlineCode",{parentName:"p"},"ForwardIt1")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"ForwardIt2")," meet the requirements of ",(0,o.kt)("a",{parentName:"p",href:"/docs/named_req/LegacyRandomAccessIterator"},(0,o.kt)("inlineCode",{parentName:"a"},"LegacyRandomAccessIterator")),"\nand ",(0,o.kt)("inlineCode",{parentName:"p"},"std::distance(first1, last1) != std::distance(first2, last2)")," no applications of the predicate are made."),(0,o.kt)("h3",{id:"exceptions"},"Exceptions"),(0,o.kt)("p",null,"The overloads with a template parameter named ",(0,o.kt)("inlineCode",{parentName:"p"},"ExecutionPolicy")," report errors as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If execution of a function invoked as part of the algorithm throws an exception and ",(0,o.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy")," is one of the ",(0,o.kt)("a",{parentName:"li",href:"#"},(0,o.kt)("strong",{parentName:"a"},"standard policies")),", ",(0,o.kt)("a",{parentName:"li",href:"#"},(0,o.kt)("inlineCode",{parentName:"a"},"std::terminate"))," is called.\nFor any other ",(0,o.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy"),", the behavior is ",(0,o.kt)(s.Z,{title:(0,o.kt)(y,{mdxType:"Term_ImplementationDefined"}),mdxType:"Tooltip"},(0,o.kt)("strong",{parentName:"li"},"implementation-defined")),"."),(0,o.kt)("li",{parentName:"ul"},"If the algorithm fails to allocate memory, ",(0,o.kt)("inlineCode",{parentName:"li"},"std::bad_alloc")," is thrown.")),(0,o.kt)("h3",{id:"possible-implementation"},"Possible implementation"),(0,o.kt)("details",null,(0,o.kt)("summary",null,"is_permutation (1)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"template<class ForwardIt1, class ForwardIt2>\nbool is_permutation(ForwardIt1 first, ForwardIt1 last,\n                    ForwardIt2 d_first)\n{\n    // skip common prefix\n    std::tie(first, d_first) = std::mismatch(first, last, d_first);\n    // iterate over the rest, counting how many times each element\n    // from [first, last) appears in [d_first, d_last)\n    if (first != last)\n    {\n        ForwardIt2 d_last = std::next(d_first, std::distance(first, last));\n        for (ForwardIt1 i = first; i != last; ++i)\n        {\n            if (i != std::find(first, i, *i))\n                continue; // this *i has been checked\n\n            auto m = std::count(d_first, d_last, *i);\n            if (m == 0 || std::count(i, last, *i) != m)\n                return false;\n        }\n    }\n    return true;\n}\n"))),(0,o.kt)("h3",{id:"notes"},"Notes"),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"#"},(0,o.kt)("inlineCode",{parentName:"a"},"std::is_permutation"))," can be used in testing, namely to check the correctness of rearranging algorithms (e.g. sorting, shuffling, partitioning)."),(0,o.kt)("p",null,"If ",(0,o.kt)("inlineCode",{parentName:"p"},"x")," is an original range and ",(0,o.kt)("inlineCode",{parentName:"p"},"y")," is a permuted range then ",(0,o.kt)("inlineCode",{parentName:"p"},"std::is_permutation(x, y) == true")," means that ",(0,o.kt)("inlineCode",{parentName:"p"},"y"),' consist of "the same" elements, maybe staying at other positions.'),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)(l.Z,{columns:["8fr","4fr"],mdxType:"Columns"},(0,o.kt)("div",null,(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='Main.cpp' showLineNumbers",title:"'Main.cpp'",showLineNumbers:!0},'#include <algorithm>\n#include <iostream>\n\ntemplate<typename Os, typename V>\nOs& operator<<(Os& os, V const& v)\n{\n    os << "{ ";\n    for (auto const& e : v)\n        os << e << \' \';\n    return os << \'}\';\n}\n\nint main()\n{\n    static constexpr auto v1 = {1, 2, 3, 4, 5};\n    static constexpr auto v2 = {3, 5, 4, 1, 2};\n    static constexpr auto v3 = {3, 5, 4, 1, 1};\n\n    std::cout << v2 << " is a permutation of " << v1 << ": " << std::boolalpha\n              << std::is_permutation(v1.begin(), v1.end(), v2.begin()) << \'\\n\'\n              << v3 << " is a permutation of " << v1 << ": "\n              << std::is_permutation(v1.begin(), v1.end(), v3.begin()) << \'\\n\';\n}\n'))),(0,o.kt)("div",null,(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Output"',title:'"Output"'},"{ 3 5 4 1 2 } is a permutation of { 1 2 3 4 5 }: true\n{ 3 5 4 1 1 } is a permutation of { 1 2 3 4 5 }: false\n")))))}_.isMDXComponent=!0}}]);