"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[91206],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>u});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=p(n),u=a,g=m["".concat(i,".").concat(u)]||m[u]||d[u]||o;return n?r.createElement(g,s(s({ref:t},l),{},{components:n})):r.createElement(g,s({ref:t},l))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,s[1]=c;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},61668:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const o={},s=void 0,c={unversionedId:"std/algo/ranges/_codes/minmax/since-cpp20-detailed",id:"std/algo/ranges/_codes/minmax/since-cpp20-detailed",title:"since-cpp20-detailed",description:"",source:"@site/content/docs/std/algo/ranges/_codes/minmax/since-cpp20-detailed.mdx",sourceDirName:"std/algo/ranges/_codes/minmax",slug:"/std/algo/ranges/_codes/minmax/since-cpp20-detailed",permalink:"/CppLangNet/docs/std/algo/ranges/_codes/minmax/since-cpp20-detailed",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ranges/_codes/minmax/since-cpp20-detailed.mdx",tags:[],version:"current",frontMatter:{}},i={},p=[],l={toc:p};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate<\n  class T,\n  class Proj = std::identity,\n  std::indirect_strict_weak_order<std::projected<const T*, Proj>> Comp = ranges::less\n>\nconstexpr ranges::minmax_result<const T&>\n    minmax( const T& a, const T& b, Comp comp = {}, Proj proj = {} );\n\n// (2)\ntemplate<\n  std::copyable T,\n  class Proj = std::identity,\n  std::indirect_strict_weak_order<std::projected<const T*, Proj>> Comp = ranges::less\n>\nconstexpr ranges::minmax_result<T>\n    minmax( std::initializer_list<T> r, Comp comp = {}, Proj proj = {} );\n\n// (3)\ntemplate<\n  ranges::input_range R,\n  class Proj = std::identity,\n  std::indirect_strict_weak_order<std::projected<ranges::iterator_t<R>, Proj>> Comp = ranges::less\n>\n  requires std::indirectly_copyable_storable<ranges::iterator_t<R>, ranges::range_value_t<R>*>\nconstexpr ranges::minmax_result<ranges::range_value_t<R>>\n    minmax( R&& r, Comp comp = {}, Proj proj = {} );\n")))}d.isMDXComponent=!0}}]);