"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[33110],{3905:(t,e,r)=>{r.d(e,{Zo:()=>p,kt:()=>I});var n=r(67294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function c(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function s(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var l=n.createContext({}),i=function(t){var e=n.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):c(c({},e),t)),r},p=function(t){var e=i(t.components);return n.createElement(l.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,o=t.originalType,l=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),d=i(r),I=a,f=d["".concat(l,".").concat(I)]||d[I]||u[I]||o;return r?n.createElement(f,c(c({ref:e},p),{},{components:r})):n.createElement(f,c({ref:e},p))}));function I(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=r.length,c=new Array(o);c[0]=d;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s.mdxType="string"==typeof t?t:a,c[1]=s;for(var i=2;i<o;i++)c[i]=r[i];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},29199:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var n=r(87462),a=(r(67294),r(3905));const o={},c=void 0,s={unversionedId:"std/algo/ordinary/_codes/equal/since-cpp20",id:"std/algo/ordinary/_codes/equal/since-cpp20",title:"since-cpp20",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/equal/since-cpp20.mdx",sourceDirName:"std/algo/ordinary/_codes/equal",slug:"/std/algo/ordinary/_codes/equal/since-cpp20",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/equal/since-cpp20",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/equal/since-cpp20.mdx",tags:[],version:"current",frontMatter:{}},l={},i=[],p={toc:i};function u(t){let{components:e,...r}=t;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class InputIt1, class InputIt2 >\nconstexpr bool equal( InputIt1 first1, InputIt1 last1, InputIt2 first2 );\n\n// (2)\ntemplate< class InputIt1, class InputIt2, class BinaryPredicate >\nconstexpr bool equal( InputIt1 first1, InputIt1 last1, InputIt2 first2, BinaryPredicate p );\n\n// (3)\ntemplate< class InputIt1, class InputIt2 >\nconstexpr bool equal( InputIt1 first1, InputIt1 last1, InputIt2 first2, InputIt2 last2 );\n\n// (4)\ntemplate< class InputIt1, class InputIt2, class BinaryPredicate >\nconstexpr bool equal( InputIt1 first1, InputIt1 last1, InputIt2 first2, InputIt2 last2, BinaryPredicate p );\n\n// (5)\ntemplate< class ExecutionPolicy, class ForwardIt1, class ForwardIt2 >\nbool equal( ExecutionPolicy&& policy, ForwardIt1 first1, ForwardIt1 last1, ForwardIt2 first2 );\n\n// (6)\ntemplate< class ExecutionPolicy, class ForwardIt1, class ForwardIt2, class BinaryPredicate >\nbool equal( ExecutionPolicy&& policy, ForwardIt1 first1, ForwardIt1 last1, ForwardIt2 first2, BinaryPredicate p );\n\n// (7)\ntemplate< class ExecutionPolicy, class ForwardIt1, class ForwardIt2 >\nbool equal( ExecutionPolicy&& policy, ForwardIt1 first1, ForwardIt1 last1, ForwardIt2 first2, ForwardIt2 last2 );\n\n// (8)\ntemplate< class ExecutionPolicy, class ForwardIt1, class ForwardIt2, class BinaryPredicate >\nbool equal( ExecutionPolicy&& policy,\n            ForwardIt1 first1, ForwardIt1 last1,\n            ForwardIt2 first2, ForwardIt2 last2,\n            BinaryPredicate p );\n")))}u.isMDXComponent=!0}}]);