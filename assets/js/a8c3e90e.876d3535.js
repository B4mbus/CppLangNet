"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[50433],{14064:(e,t,n)=>{n.d(t,{ZP:()=>i});var a=n(87462),r=(n(67294),n(3905));const l={toc:[]};function i(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Aspects and semantics that are ",(0,r.kt)("strong",{parentName:"p"},"implementation-defined")," are not guaranteed by\nthe standard in any way, rather they are left out to the implementation (compiler vendor standard library, most of the times).\nFor example, most mathematical functions incur some ",(0,r.kt)("strong",{parentName:"p"},"implementation-defined")," behaviour."))}i.isMDXComponent=!0},85162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(67294),r=n(86010);const l="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>_});var a=n(87462),r=n(67294),l=n(86010),i=n(12466),o=n(76775),s=n(91980),c=n(67392),d=n(50012);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function u(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function y(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=u(e),[i,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[s,c]=f({queryString:n,groupId:a}),[p,y]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,d.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),g=(()=>{const e=s??p;return m({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{g&&o(g)}),[g]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),c(e),y(e)}),[c,y,l]),tabValues:l}}var g=n(72389);const k="tabList__CuJ",h="tabItem_LNqP";function v(e){let{className:t,block:n,selectedValue:o,selectValue:s,tabValues:c}=e;const d=[],{blockElementScrollPositionUntilNextRender:p}=(0,i.o5)(),u=e=>{const t=e.currentTarget,n=d.indexOf(t),a=c[n].value;a!==o&&(p(t),s(a))},m=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=d.indexOf(e.currentTarget)+1;t=d[n]??d[0];break}case"ArrowLeft":{const n=d.indexOf(e.currentTarget)-1;t=d[n]??d[d.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>d.push(e),onKeyDown:m,onClick:u},i,{className:(0,l.Z)("tabs__item",h,i?.className,{"tabs__item--active":o===t})}),n??t)})))}function b(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=y(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",k)},r.createElement(v,(0,a.Z)({},e,t)),r.createElement(b,(0,a.Z)({},e,t)))}function _(e){const t=(0,g.Z)();return r.createElement(N,(0,a.Z)({key:String(t)},e))}},98839:(e,t,n)=>{n.d(t,{z:()=>a});const a=n(67294).createContext({name:"Unknown",folder:"unknown"})},22307:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(87462),r=n(67294);const l="columns_Terr";function i(e){const t=e.style||{};t.gap=e.spacing||20,e.columns?t.gridTemplateColumns=e.columns.map((e=>`${e}`)).join(" "):t.gridTemplateColumns="repeat(2, 1fr)";const n={...e};return delete n.columns,delete n.spacing,delete n.breakAt,r.createElement("div",(0,a.Z)({className:l,"data-break-at":e.breakAt??"md"},n,{style:t}),e.children)}i.isMDXComponent=!0},99801:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),r=n(74866),l=n(85162),i=n(99372),o=n(72412);const s={};function c(e){const t=e.content||{};return a.createElement(r.Z,null,Object.entries(t).map(((e,t)=>{let[n,c]=e;return c.value||c.simplified||c.detailed?a.createElement(l.Z,{value:n,label:i.gJ.get(n),default:c.default||0==t},c.simplified?a.createElement(a.Fragment,null,a.createElement(r.Z,{groupId:"view_mode",className:s.smallTabs},a.createElement(l.Z,{value:"simplified",label:"Simplified",default:!0},(0,o.Z)(c.simplified)),a.createElement(l.Z,{value:"detailed",label:"Detailed"},(0,o.Z)(c.detailed)))):c.value):a.createElement(l.Z,{value:n,label:i.gJ.get(n),default:0==t},(0,o.Z)(c))})))}},55059:(e,t,n)=>{n.d(t,{mN:()=>d,ZP:()=>c});var a=n(67294),r=n(72412);const l={symbolTable:"symbolTable_yosy",symbolName:"symbolName__gUy",symbolDesc:"symbolDesc_wDaQ",symbolProp:"symbolProp_oAcv",accessPublic:"accessPublic_LfqG",accessProtected:"accessProtected_bDL6",accessPrivate:"accessPrivate_Ab5O",modStatic:"modStatic_ZSC5",modConstexpr:"modConstexpr_iypt",modConst:"modConst_osuL",modVolatile:"modVolatile_ePYM",modVirtual:"modVirtual_jNz7"};var i=n(98839);const o={None:{Order:0,ShortName:"",FullName:"",Style:l.accessPublic},Public:{Order:1,ShortName:"pub",FullName:"public",Style:l.accessPublic},Protected:{Order:2,ShortName:"prot",FullName:"protected",Style:l.accessProtected},Private:{Order:3,ShortName:"priv",FullName:"private",Style:l.accessPrivate}},s=e=>e.none?o.None:e.pub||e.public?o.Public:e.prot||e.protected?o.Protected:e.priv||e.private?o.Private:o.Public;function c(e){return(t=>{if(0===t.length)return null;const n=t.sort(((e,t)=>s(e).Order<s(t).Order));return a.createElement("table",{"data-no-traits":`${e.noTraits||"false"}`,className:l.symbolTable},a.createElement("tbody",null,n))})(a.Children.toArray(e.children))}function d(e){a.useContext(i.z);let t=(0,r.Z)(e.name),n=null;e.desc?n=e.desc:e.children&&(n=e.children);const o=e.linkName||e.autoLink;!e.noLink&&o&&(t=a.createElement("a",{href:e.link||`${e.linkName||e.name}`},t));const c=(e,t,n)=>!0===e?a.createElement("span",{className:l[t]},n):null;return a.createElement("tr",null,!e.none&&a.createElement("td",{className:l.symbolProp},(e=>{const t=s(e);return a.createElement("span",{className:t.Style},t.ShortName)})(e),c(e.static,"modStatic","static"),c(e.constexpr,"modConstexpr","constexpr"),c(e.const,"modConst","const"),c(e.volatile,"modVolatile","volatile"),c(e.virtual,"modVirtual","virtual")),a.createElement("td",{className:l.symbolName},t),a.createElement("td",{className:l.symbolDesc},(0,r.Z)(n)))}d.isMDXComponent=!0,c.isMDXComponent=!0,c.Symbol=d},18510:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),r=n(44996),l=n(34386),i=n(72412);const o="TooltipContent_Lvru",s="TooltipTitle_ukF2";function c(e){let{url:t,title:n,maxWidth:c,children:d}=e;let p=c||"clamp(250px, 25vw, 800px)";"string"==typeof p&&p.endsWith("vw")&&(p=`clamp(250px, ${p}, 800px)`);const u="function"==typeof n?a.createElement(n):n,m=(t||"").startsWith("/")?(0,r.Z)(t):t,f=t?a.createElement("a",{href:m,target:"_blank",rel:"noreferrer"},d):d;return a.createElement(l.Z,{componentsProps:{tooltip:{style:{maxWidth:p}}},title:a.createElement("span",{className:s},(0,i.Z)(u)),placement:"top",arrow:!0},a.createElement("span",{className:o},f))}c.isMDXComponent=!0},99372:(e,t,n)=>{n.d(t,{gJ:()=>d,eH:()=>f,U6:()=>u,OS:()=>m});var a=n(67294),r=n(95999);const l="markedText_c6kK",i="since_c1Q3",o="until_jXK6",s="removed_A_Kf",c="versionNumber_BiUX",d=new Map;function p(e){let{children:t,className:n}=e;return a.createElement("span",{className:l+(n?" "+n:"")},t)}function u(e){let{children:t,v:n}=e;return a.createElement(p,{className:i},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",d.get(`since-${n}`),")")))}function m(e){let{children:t,v:n}=e;return a.createElement(p,{className:o},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",d.get(`until-${n}`),")")))}function f(e){let{children:t,v:n}=e;return a.createElement(p,{className:s},t,"\xa0",a.createElement("span",{className:c},a.createElement("small",null,"(",d.get(`removed-${n}`),")")))}d.set("cpp98","C++98"),d.set("cpp03","C++03"),d.set("cpp11","C++11"),d.set("cpp14","C++14"),d.set("cpp17","C++17"),d.set("cpp20","C++20"),d.set("cpp23","C++23"),d.set("deprecated-",a.createElement(r.Z,null,"deprecated")),d.set("deprecated-cpp98",a.createElement(r.Z,null,"deprecated in C++98")),d.set("deprecated-cpp03",a.createElement(r.Z,null,"deprecated in C++03")),d.set("deprecated-cpp11",a.createElement(r.Z,null,"deprecated in C++11")),d.set("deprecated-cpp14",a.createElement(r.Z,null,"deprecated in C++14")),d.set("deprecated-cpp17",a.createElement(r.Z,null,"deprecated in C++17")),d.set("deprecated-cpp20",a.createElement(r.Z,null,"deprecated in C++20")),d.set("deprecated-cpp23",a.createElement(r.Z,null,"deprecated in C++23")),d.set("until-cpp98",a.createElement(r.Z,null,"until C++98")),d.set("until-cpp03",a.createElement(r.Z,null,"until C++03")),d.set("until-cpp11",a.createElement(r.Z,null,"until C++11")),d.set("until-cpp14",a.createElement(r.Z,null,"until C++14")),d.set("until-cpp17",a.createElement(r.Z,null,"until C++17")),d.set("until-cpp20",a.createElement(r.Z,null,"until C++20")),d.set("until-cpp23",a.createElement(r.Z,null,"until C++23")),d.set("since-cpp98",a.createElement(r.Z,null,"since C++98")),d.set("since-cpp03",a.createElement(r.Z,null,"since C++03")),d.set("since-cpp11",a.createElement(r.Z,null,"since C++11")),d.set("since-cpp14",a.createElement(r.Z,null,"since C++14")),d.set("since-cpp17",a.createElement(r.Z,null,"since C++17")),d.set("since-cpp20",a.createElement(r.Z,null,"since C++20")),d.set("since-cpp23",a.createElement(r.Z,null,"since C++23")),d.set("removed-",a.createElement(r.Z,null,"deleted")),d.set("removed-cpp98",a.createElement(r.Z,null,"removed in C++98")),d.set("removed-cpp03",a.createElement(r.Z,null,"removed in C++03")),d.set("removed-cpp11",a.createElement(r.Z,null,"removed in C++11")),d.set("removed-cpp14",a.createElement(r.Z,null,"removed in C++14")),d.set("removed-cpp17",a.createElement(r.Z,null,"removed in C++17")),d.set("removed-cpp20",a.createElement(r.Z,null,"removed in C++20")),d.set("removed-cpp23",a.createElement(r.Z,null,"removed in C++23"))},72412:(e,t,n)=>{function a(e){return"object"!=typeof e||Array.isArray(e)||void 0!==e.type?e:e.props.children}n.d(t,{Z:()=>a})},81032:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const l={},i=void 0,o={unversionedId:"std/algo/ordinary/_codes/adjacent_find/since-cpp17",id:"std/algo/ordinary/_codes/adjacent_find/since-cpp17",title:"since-cpp17",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/adjacent_find/since-cpp17.mdx",sourceDirName:"std/algo/ordinary/_codes/adjacent_find",slug:"/std/algo/ordinary/_codes/adjacent_find/since-cpp17",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/adjacent_find/since-cpp17",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/adjacent_find/since-cpp17.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],d={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class ForwardIt >\nForwardIt adjacent_find( ForwardIt first, ForwardIt last );\n\n// (2)\ntemplate< class ForwardIt, class BinaryPredicate >\nForwardIt adjacent_find( ForwardIt first, ForwardIt last, BinaryPredicate p );\n\n// (3)\ntemplate< class ExecutionPolicy, class ForwardIt >\nForwardIt adjacent_find( ExecutionPolicy&& policy,\n                         ForwardIt first, ForwardIt last );\n\n// (4)\ntemplate< class ExecutionPolicy, class ForwardIt, class BinaryPredicate >\nForwardIt adjacent_find( ExecutionPolicy&& policy,\n                         ForwardIt first, ForwardIt last, BinaryPredicate p );\n")))}p.isMDXComponent=!0},301:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const l={},i=void 0,o={unversionedId:"std/algo/ordinary/_codes/adjacent_find/since-cpp20",id:"std/algo/ordinary/_codes/adjacent_find/since-cpp20",title:"since-cpp20",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/adjacent_find/since-cpp20.mdx",sourceDirName:"std/algo/ordinary/_codes/adjacent_find",slug:"/std/algo/ordinary/_codes/adjacent_find/since-cpp20",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/adjacent_find/since-cpp20",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/adjacent_find/since-cpp20.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],d={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class ForwardIt >\nconstexpr ForwardIt adjacent_find( ForwardIt first, ForwardIt last );\n\n// (2)\ntemplate< class ForwardIt, class BinaryPredicate >\nconstexpr ForwardIt adjacent_find( ForwardIt first, ForwardIt last, BinaryPredicate p );\n\n// (3)\ntemplate< class ExecutionPolicy, class ForwardIt >\nForwardIt adjacent_find( ExecutionPolicy&& policy,\n                         ForwardIt first, ForwardIt last );\n\n// (4)\ntemplate< class ExecutionPolicy, class ForwardIt, class BinaryPredicate >\nForwardIt adjacent_find( ExecutionPolicy&& policy,\n                         ForwardIt first, ForwardIt last, BinaryPredicate p );\n")))}p.isMDXComponent=!0},7192:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const l={},i=void 0,o={unversionedId:"std/algo/ordinary/_codes/adjacent_find/until-cpp17",id:"std/algo/ordinary/_codes/adjacent_find/until-cpp17",title:"until-cpp17",description:"",source:"@site/content/docs/std/algo/ordinary/_codes/adjacent_find/until-cpp17.mdx",sourceDirName:"std/algo/ordinary/_codes/adjacent_find",slug:"/std/algo/ordinary/_codes/adjacent_find/until-cpp17",permalink:"/CppLangNet/docs/std/algo/ordinary/_codes/adjacent_find/until-cpp17",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/_codes/adjacent_find/until-cpp17.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],d={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// (1)\ntemplate< class ForwardIt >\nForwardIt adjacent_find( ForwardIt first, ForwardIt last );\n\n// (2)\ntemplate< class ForwardIt, class BinaryPredicate >\nForwardIt adjacent_find( ForwardIt first, ForwardIt last, BinaryPredicate p );\n")))}p.isMDXComponent=!0},14068:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>g,default:()=>N,frontMatter:()=>y,metadata:()=>k,toc:()=>v});var a=n(87462),r=n(67294),l=n(3905),i=n(55059),o=n(22307),s=n(99801),c=n(18510),d=n(99372),p=n(14064),u=n(7192),m=n(81032),f=n(301);const y={title:"adjacent_find algorithm",sidebar_label:"adjacent_find(  )",description:"adjacent_find algorithm C++ documentation",hide_title:!0,tags:["algorithm","adjacent_find","find","search","look","predicate","condition"],cppreference_origin_rel:"w/cpp/algorithm/adjacent_find"},g=void 0,k={unversionedId:"std/algo/ordinary/adjacent_find",id:"std/algo/ordinary/adjacent_find",title:"adjacent_find algorithm",description:"adjacent_find algorithm C++ documentation",source:"@site/content/docs/std/algo/ordinary/adjacent_find.mdx",sourceDirName:"std/algo/ordinary",slug:"/std/algo/ordinary/adjacent_find",permalink:"/CppLangNet/docs/std/algo/ordinary/adjacent_find",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/docs/std/algo/ordinary/adjacent_find.mdx",tags:[{label:"algorithm",permalink:"/CppLangNet/docs/tags/algorithm"},{label:"adjacent_find",permalink:"/CppLangNet/docs/tags/adjacent-find"},{label:"find",permalink:"/CppLangNet/docs/tags/find"},{label:"search",permalink:"/CppLangNet/docs/tags/search"},{label:"look",permalink:"/CppLangNet/docs/tags/look"},{label:"predicate",permalink:"/CppLangNet/docs/tags/predicate"},{label:"condition",permalink:"/CppLangNet/docs/tags/condition"}],version:"current",frontMatter:{title:"adjacent_find algorithm",sidebar_label:"adjacent_find(  )",description:"adjacent_find algorithm C++ documentation",hide_title:!0,tags:["algorithm","adjacent_find","find","search","look","predicate","condition"],cppreference_origin_rel:"w/cpp/algorithm/adjacent_find"},sidebar:"defaultSidebar",previous:{title:"find_first_of(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/find_first_of"},next:{title:"search(  )",permalink:"/CppLangNet/docs/std/algo/ordinary/search"}},h={},v=[{value:"Parameters",id:"parameters",level:3},{value:"Type requirements",id:"type-requirements",level:4},{value:"Return value",id:"return-value",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"Possible implementation",id:"possible-implementation",level:3}],b={toc:v};function N(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"stdadjacent_find-algorithm"},"std::adjacent_find() algorithm"),(0,l.kt)(s.Z,{content:{"since-cpp20":(0,l.kt)(f.default,{mdxType:"Signature_SinceCpp20"}),"since-cpp17":(0,l.kt)(m.default,{mdxType:"Signature_SinceCpp17"}),"until-cpp17":(0,l.kt)(u.default,{mdxType:"Signature_UntilCpp17"})},mdxType:"SwitchView"}),(0,l.kt)("p",null,"Searches the range [",(0,l.kt)("inlineCode",{parentName:"p"},"first"),"; ",(0,l.kt)("inlineCode",{parentName:"p"},"last"),") for two consecutive equal elements."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"(1)")," Elements are compared using ",(0,l.kt)("inlineCode",{parentName:"p"},"operator=="),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"(2)")," Elements are compared using the given binary predicate ",(0,l.kt)("inlineCode",{parentName:"p"},"p"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"(3 - 4)")," Same as ",(0,l.kt)("strong",{parentName:"p"},"(1 - 2)"),", but executed according to ",(0,l.kt)("inlineCode",{parentName:"p"},"policy"),"."),(0,l.kt)("admonition",{parentName:"li",title:"Overload Resolution",type:"important"},(0,l.kt)("p",{parentName:"admonition"},"These overloads participate in overload resolution only if"),(0,l.kt)(d.OS,{v:"cpp20",mdxType:"Until"}," ",(0,l.kt)("code",null,"std::is_execution_policy_v<std::decay_t<ExecutionPolicy>>")," ")," ",(0,l.kt)(d.U6,{v:"cpp20",mdxType:"Since"}," ",(0,l.kt)("code",null,"std::is_execution_policy_v<std::remove_cvref_t<ExecutionPolicy>>")," ")," is ",(0,l.kt)("code",null,"true"),"."))),(0,l.kt)("h3",{id:"parameters"},"Parameters"),(0,l.kt)(i.ZP,{mdxType:"SymbolTable"},(0,l.kt)(i.mN,{none:!0,noLink:!0,name:(0,l.kt)(r.Fragment,null," ",(0,l.kt)("code",null,"first")," ",(0,l.kt)("br",null)," ",(0,l.kt)("code",null,"last")," "),mdxType:"Symbol"},"The range of elements to examine."),(0,l.kt)(i.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"policy"),mdxType:"Symbol"},"The execution policy to use. See ",(0,l.kt)("a",{href:"#"},"execution policy")," for details."),(0,l.kt)(i.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"p"),mdxType:"Symbol"},(0,l.kt)("p",null,"Binary predicate which returns ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if the elements should be treated as equal."),(0,l.kt)("p",null,"The signature of the function should be equivalent to the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"bool fun(const Type1& a, const Type2& b);\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The signature does not need to have ",(0,l.kt)("inlineCode",{parentName:"li"},"const&"),"."),(0,l.kt)("li",{parentName:"ul"},"The function ",(0,l.kt)("strong",{parentName:"li"},"must not")," modify the objects passed to it."),(0,l.kt)("li",{parentName:"ul"},"Must accept all values of type (possibly const) ",(0,l.kt)("inlineCode",{parentName:"li"},"Type")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"Type2"),", regardless of ",(0,l.kt)("a",{parentName:"li",href:"#"},"value category")," (so ",(0,l.kt)("inlineCode",{parentName:"li"},"Type1&")," is not allowed, ",(0,l.kt)(d.U6,{v:"cpp11",mdxType:"Since"},"nor is ",(0,l.kt)("code",null,"Type1")," unless for ",(0,l.kt)("code",null,"Type1")," a move is equivalent to a copy"),")"),(0,l.kt)("li",{parentName:"ul"},"The types ",(0,l.kt)("inlineCode",{parentName:"li"},"Type1")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"Type2")," must be such that an object of type ",(0,l.kt)("inlineCode",{parentName:"li"},"ForwardIt")," can be dereferenced and then implicitly converted to them.")))),(0,l.kt)("h4",{id:"type-requirements"},"Type requirements"),(0,l.kt)(i.ZP,{mdxType:"SymbolTable"},(0,l.kt)(i.mN,{none:!0,noLink:!0,name:(0,l.kt)("code",null,"ForwardIt"),mdxType:"Symbol"},(0,l.kt)("a",{href:"/docs/named_req/LegacyForwardIterator"},"LegacyForwardIterator"))),(0,l.kt)("h3",{id:"return-value"},"Return value"),(0,l.kt)("p",null,"An iterator to the first of the first pair of identical elements, that is, the first iterator ",(0,l.kt)("inlineCode",{parentName:"p"},"it")," such that ",(0,l.kt)("inlineCode",{parentName:"p"},"*it == *(it + 1)")," for ",(0,l.kt)("strong",{parentName:"p"},"(1, 3)")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"p(*it, *(it + 1)) != false")," for ",(0,l.kt)("strong",{parentName:"p"},"(2, 4)"),"."),(0,l.kt)("p",null,"If no such elements are found, ",(0,l.kt)("inlineCode",{parentName:"p"},"last")," is returned."),(0,l.kt)("h3",{id:"complexity"},"Complexity"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"(1, 3)")," Exactly ",(0,l.kt)("inlineCode",{parentName:"li"},"std::min((result - first) + 1, (last - first) - 1)")," applications of the predicate where result is the return value."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"(2, 4)")," ",(0,l.kt)("strong",{parentName:"li"},"O(last - first)")," applications of the corresponding predicate.")),(0,l.kt)("h3",{id:"exceptions"},"Exceptions"),(0,l.kt)("p",null,"The overloads with a template parameter named ",(0,l.kt)("inlineCode",{parentName:"p"},"ExecutionPolicy")," report errors as follows:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If execution of a function invoked as part of the algorithm throws an exception and ",(0,l.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy")," is one of the ",(0,l.kt)("a",{parentName:"li",href:"#"},(0,l.kt)("strong",{parentName:"a"},"standard policies")),", ",(0,l.kt)("a",{parentName:"li",href:"#"},(0,l.kt)("inlineCode",{parentName:"a"},"std::terminate"))," is called.\nFor any other ",(0,l.kt)("inlineCode",{parentName:"li"},"ExecutionPolicy"),", the behavior is ",(0,l.kt)(c.Z,{title:(0,l.kt)(p.ZP,{mdxType:"Term_ImplementationDefined"}),mdxType:"Tooltip"},(0,l.kt)("strong",{parentName:"li"},"implementation-defined")),"."),(0,l.kt)("li",{parentName:"ul"},"If the algorithm fails to allocate memory, ",(0,l.kt)("inlineCode",{parentName:"li"},"std::bad_alloc")," is thrown.")),(0,l.kt)("h3",{id:"possible-implementation"},"Possible implementation"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"adjacent_find (1)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"template<class ForwardIt>\nForwardIt adjacent_find(ForwardIt first, ForwardIt last)\n{\n    if (first == last)\n        return last;\n\n    ForwardIt next = first;\n    ++next;\n\n    for (; next != last; ++next, ++first)\n        if (*first == *next)\n            return first;\n\n    return last;\n}\n"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"adjacent_find (2)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"template<class ForwardIt, class BinaryPredicate>\nForwardIt adjacent_find(ForwardIt first, ForwardIt last, BinaryPredicate p)\n{\n    if (first == last)\n        return last;\n\n    ForwardIt next = first;\n    ++next;\n\n    for (; next != last; ++next, ++first)\n        if (p(*first, *next))\n            return first;\n\n    return last;\n}\n"))),"### Examples",(0,l.kt)(o.Z,{columns:["8fr","4fr"],mdxType:"Columns"},(0,l.kt)("div",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='Main.cpp' showLineNumbers",title:"'Main.cpp'",showLineNumbers:!0},'#include <algorithm>\n#include <functional>\n#include <iostream>\n#include <vector>\n\nint main()\n{\n    std::vector<int> v1 {0, 1, 2, 3, 40, 40, 41, 41, 5};\n\n    auto i1 = std::adjacent_find(v1.begin(), v1.end());\n\n    if (i1 == v1.end())\n        std::cout << "No matching adjacent elements\\n";\n    else\n        std::cout << "The first adjacent pair of equal elements is at "\n                  << std::distance(v1.begin(), i1) << ", *i1 = "\n                  << *i1 << \'\\n\';\n\n    auto i2 = std::adjacent_find(v1.begin(), v1.end(), std::greater<int>());\n    if (i2 == v1.end())\n        std::cout << "The entire vector is sorted in ascending order\\n";\n    else\n        std::cout << "The last element in the non-decreasing subsequence is at "\n                  << std::distance(v1.begin(), i2) << ", *i2 = " << *i2 << \'\\n\';\n}\n'))),(0,l.kt)("div",null,(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plaintext",metastring:'title="Output"',title:'"Output"'},"The first adjacent pair of equal elements is at 4, *i1 = 40\nThe last element in the non-decreasing subsequence is at 7, *i2 = 41\n")))))}N.isMDXComponent=!0}}]);