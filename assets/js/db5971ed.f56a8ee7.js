"use strict";(self.webpackChunkcpp_lang_net=self.webpackChunkcpp_lang_net||[]).push([[72651],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(t),d=o,f=m["".concat(c,".").concat(d)]||m[d]||p[d]||a;return t?r.createElement(f,i(i({ref:n},u),{},{components:t})):r.createElement(f,i({ref:n},u))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},73984:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=t(87462),o=(t(67294),t(3905));const a={title:"Common problems - Functions"},i="Functions \xbb Common problems",s={unversionedId:"course/basics/functions/common-problems",id:"course/basics/functions/common-problems",title:"Common problems - Functions",description:"We will discuss some common mistakes that beginners often make when using functions.",source:"@site/content/learn/course/basics/functions/common-problems.mdx",sourceDirName:"course/basics/functions",slug:"/course/basics/functions/common-problems",permalink:"/CppLangNet/learn/course/basics/functions/common-problems",draft:!1,editUrl:"https://github.com/Cpp4You/CppLangNet/edit/main/content/learn/course/basics/functions/common-problems.mdx",tags:[],version:"current",frontMatter:{title:"Common problems - Functions"},sidebar:"defaultSidebar",previous:{title:"Examples - Functions",permalink:"/CppLangNet/learn/course/basics/functions/examples"},next:{title:"Exercises - Functions",permalink:"/CppLangNet/learn/course/basics/functions/exercises"}},c={},l=[{value:"Incorrect number or type of arguments",id:"incorrect-number-or-type-of-arguments",level:3},{value:"Not returning a value",id:"not-returning-a-value",level:3},{value:"Missing a declaration",id:"missing-a-declaration",level:3}],u={toc:l};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"functions--common-problems"},"Functions \xbb Common problems"),(0,o.kt)("p",null,"We will discuss some common mistakes that beginners often make when using functions."),(0,o.kt)("h3",{id:"incorrect-number-or-type-of-arguments"},"Incorrect number or type of arguments"),(0,o.kt)("p",null,"In the following C++ code, the function sum expects two integer arguments, but the call to the function passes in a string and an integer:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'int sum(int a, int b){\n    return a + b;\n}\nint main(){\n    std::string num = "5";\n    std::cout << sum(num, 3);\n}\n')),(0,o.kt)("p",null,"The compiler will give an error:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"error: no matching function for call to \u2018sum(std::string&, int)\u2019\n")),(0,o.kt)("p",null,"To fix this mistake, pass in two integers to the function call like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"int main(){\n    std::cout << sum(5, 3);\n}\n")),(0,o.kt)("h3",{id:"not-returning-a-value"},"Not returning a value"),(0,o.kt)("p",null,"Consider the following example: the ",(0,o.kt)("inlineCode",{parentName:"p"},"concatenate")," function expects to return a string, but the function does not return anything:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string concatenate(std::string a, std::string b)\n{\n    a += b;\n// error-next-line\n} // no return statement at the end\n")),(0,o.kt)("p",null,"The compiler will give an error:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"error: control reaches end of non-void function [-Werror=return-type]\n")),(0,o.kt)("p",null,"To fix this mistake, include a ",(0,o.kt)("inlineCode",{parentName:"p"},"return")," statement in the function to return the concatenated string:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string concatenate(std::string a, std::string b) {\n    a += b;\n    return a;\n}\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Note that the ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," function is an exception to this rule. It does not need to return a value.\nIf the ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," function does not return a value, the compiler will assume that the function returns ",(0,o.kt)("inlineCode",{parentName:"p"},"0"),".")),(0,o.kt)("h3",{id:"missing-a-declaration"},"Missing a declaration"),(0,o.kt)("p",null,"In the following code, the function ",(0,o.kt)("inlineCode",{parentName:"p"},"multiply")," is called before it is declared:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"int main(){\n    // error-next-line\n    std::cout << multiply(3, 4); // error: use of undeclared identifier \u2018multiply\u2019\n}\nint multiply(int a, int b){\n    return a * b;\n}\n")))}p.isMDXComponent=!0}}]);